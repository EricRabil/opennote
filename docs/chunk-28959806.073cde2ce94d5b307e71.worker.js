window["webpackChunk"](["chunk-28959806","chunk-13f526c0"],{"15f6":function(e,t,r){(function(e){var r,n,i=function(e){"use strict";var t="1.1.2",r=new it,n=e.bigInt,s=e.bigDec;s.set({precision:250});var o={},a=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],u={},l={init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,ALIASES:{"π":"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:80,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5};(function(){l.CACHE.roots={};for(var e=40,t=40,r=2;r<=e;r++)for(var i=2;i<=t;i++){var s=n(r).pow(i);l.CACHE.roots[s+"-"+i]=r}})();var c=o.N=1,f=o.P=2,p=o.S=3,h=o.EX=4,m=o.FN=5,g=o.PL=6,v=o.CB=7,d=o.CP=8,w=l.CONST_HASH="#",y=l.PARENTHESIS,b=l.SQRT,M=l.ABS,S=l.FACTORIAL,N=l.DOUBLEFACTORIAL,E=[],x={},q=[],A=[],C=function(e,t){if(!l.suppress_errors)throw t?new t(e):new Error(e)},O=function(e){var t=function(t){this.name=e,this.message=void 0!==t?t:"";var r=new Error(this.message);r.name=this.name,this.stack=r.stack};return t.prototype=Object.create(Error.prototype),t},U=function(e){return-1!==q.indexOf(e)},R=function(e){for(var t=e[0],r=1,n=e.length;r<n;r++)if(!e[r].equals(t))return!1;return!0},L=function(e){A.push(e),l.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},I=function(e,t){if(t=t||"variable",-1===l.ALLOW_CHARS.indexOf(e)){var r=l.VALIDATION_REGEX;if(!r.test(e))throw new ze(e+" is not a valid "+t+" name")}},T=function(e){var t=Math.sign(e);if(e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var r="0",n=String(e).toLowerCase().split("e"),i=n.pop(),s=Math.abs(i),o=i/s,a=n[0].split(".");if(-1===o)s-=a[0].length,e=s<0?a[0].slice(0,s)+"."+a[0].slice(s)+(2===a.length?a[1]:""):r+"."+new Array(s+1).join(r)+a.join("");else{var u=a[1];u&&(s-=u.length),e=s<0?a[0]+u.slice(0,s)+"."+u.slice(s):a.join("")+new Array(s+1).join(r)}}return t<0?"-"+e:e},P=function(e){for(var t=Math.floor(Math.sqrt(e)),r=2;r<=t;r++)if(e%r===0)return!1;return!0},_=function(e){return/^\d+\.?\d*$/.test(e)},k=function(e){for(var t=0;t<e.length;t++)if(!_(e[t]))return!1;return!0},F=function(e){return D(e)?F(e.multiplier.toDecimal()):e%1!==0},D=function(e){return e instanceof nt},B=function(e){return e instanceof et},G=function(e,t,r){if(r=r||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},D(e)){var n=e.group,i=e.previousGroup;if(n===h&&G(e.power,t,r),n===d||n===v||i===d||i===v)for(var s in e.symbols)G(e.symbols[s],t,r);else if(n===p||i===p)"e"!==e.value&&"pi"!==e.value&&e.value!==l.IMAGINARY&&r.add(e.value);else if(n===g||i===g)G(ae(e.symbols),t,r);else if(n===h)isNaN(e.value)||r.add(e.value),G(e.power,t,r);else if(n===m&&!t)for(var o=0;o<e.args.length;o++)G(e.args[o],t,r)}return r.c.sort()},j=function(e){var t=new nt(0);return e.map((function(e){t=r.add(t,e)})),t},V=function(e,t){e=r.expand(e),t=t||{};var n=function(e,n){t[e]||(t[e]=new nt(0)),t[e]=r.add(t[e],n.clone())};return e.each((function(e){if(e.isConstant("all"))n("constants",e);else if(e.group===p)n(e.value,e);else if(e.group!==m||e.fname!==M&&""!==e.fname){if(e.group===h||e.group===m)throw new Error("Unable to separate. Term cannot be a function!");n(G(e).join(" "),e)}else V(e.args[0])})),t},Z=function(e,t){t=t||e.length;for(var r=0;r<t;r++){var n=e[r];n||(e[r]=new nt(0))}return e},z=function(e){return e instanceof at},H=function(e){return e instanceof ut},X=function(e){return e instanceof lt},$=function(e){return e.group===c||e.group===f},Q=function(e){return e.group===p&&e.multiplier.equals(1)&&e.power.equals(1)},Y=function(e){return Array.isArray(e)},W=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},J=function(e){return D(e)&&(e=e.multiplier),e.lessThan(0)},K=function(e){return e?String(e):e},ee=function(e){return"("+e+")"},te=function(e,t,r,n){return e.substr(0,t)+n+e.substr(r,e.length)},re=function(e){return void 0!==e&&e.custom},ne=function(e,t){return e<0===t<0},ie=function(){var e=[].slice.call(arguments),t=e.shift(),r=t.replace(/{(\d+)}/g,(function(t,r){var n=e[r];return"function"===typeof n?n():n}));return r},se=function(e,t,r){var n=[];r=r||1;for(var i=e;i<=t;i++)n.push(i*r);return n},oe=Object.keys,ae=function(e,t,r){for(var n in e)break;return t?n:r?{key:n,obj:e[n]}:e[n]},ue=function(e,t,n){for(var i,s=5,o={},a=0;a<n.length;a++)o[n[a]]=new nt(Math.floor(Math.random()*s)+1);return Ae("PARSE2NUMBER",(function(){i=r.parse(e,o).equals(r.parse(t,o))})),i},le=function(e,t,n){return I(e),U(e)?null:(t=t||G(r.parse(n)),r.functions[e]=[r.mapped_function,t.length,{name:e,params:t,body:n}],n)},ce=function(e){return Math.max.apply(void 0,e)},fe=function(e){return Math.min.apply(void 0,e)},pe=function(e){for(var t=[],r=e.length,n=0;n<r;n++)t[n]=e[n].clone();return t},he=function(e,t){t=t||20;var r,n,i,s=[];s.push(e[0]);for(var o=0;o<e.length-1;o++){r=e[o],n=e[o+1]-r,i=n/t;for(var a=0;a<t;a++)r+=i,s.push(r)}return s},me=function(e){var t,n;if(e.group===m&&""===e.fname?(t=nt.unwrapPARENS(r.parse(e).toLinear()),n=r.parse(e.power)):e.group===f&&(t=r.parse(e.value),n=r.parse(e.power)),t&&n&&t.group===c&&n.group===c&&t.multiplier.isNegative()){for(var i=[],s=nt.toPolarFormArray(Re(e)),o=s[0],a=r.arg(t),u=n.multiplier.den.toString(),p=n.multiplier.num.toString(),h="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",g=0;g<u;g++){var v=Re(r.parse(ie("(({0})+2*pi*({1}))/({2})",a,g,u))).multiplier.toDecimal();i.push(Re(r.parse(ie(h,o,u,l.IMAGINARY,v,p))))}return at.fromArray(i)}if(e.isConstant(!0,!0)){var d=e.sign(),w=(a=Re(e.abs()),r.sqrt(a));i=[w.clone(),w.negate()];d<0&&(i=i.map((function(e){return r.multiply(e,nt.imaginary())})))}else i=[r.parse(e)];return at.fromArray(i)},ge=function(e,t){for(var r=e.length,n=[],i=0;i<e.length;i++)n.push([e[i],t[i]]);n.sort((function(e,t){return e[0]-t[0]}));var s=[],o=[];for(i=0;i<r;i++)s.push(n[i][0]),o.push(n[i][1]);return[s,o]},ve=function(e,t,n){var i,s,o,a;if(t=String(t),e.group===d){var u=r.expand(e.clone()).stripVar(t);i=r.subtract(e.clone(),u.clone()),a=u}else i=e.clone();return s=i.stripVar(t),o=r.divide(i.clone(),s.clone()),a=a||new nt(0),n?{a:s,x:o,ax:i,b:a}:[s,o,i,a]},de=function(e,t){return W(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t="undefined"===typeof t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},we=function(e){var t="u",r=t,n=0,i=G(e);while(-1!==q.indexOf(r)||-1!==i.indexOf(r))r=t+n++;for(var s=0,o=q.length;s<=o;s++)if(!q[s]){q[s]=r;break}return r},ye=function(e){var t=q.indexOf(e);-1!==t&&(q[t]=void 0)},be=function(e,t){if(Y(e))for(var r=e.length,n=0;n<r;n++)t.call(e,n);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)},Me=function(e){return e%2===0},Se=function(e){return 1/(e%1)%2===0},Ne=function(e){for(var t=e.length,r=[],n=0;n<t;n++){var i=e[n];-1===r.indexOf(i)&&r.push(i)}return r},Ee=function(e,t){var r=typeof t;"function"===r&&"undefined"!==r||(t=function(e,t){return e===t});var n=[];while(e.length){var i=e[0];if(1===e.length){n.push(i);break}var s=[];n.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return n},xe=function(e){var t=function(e){-1===q.indexOf(e)&&q.push(e)};"string"===typeof e?t(e):be(e,(function(e){t(e)}))},qe=function(e,t){var r;return Y(e)?r=e.splice(t,1)[0]:(r=e[t],delete e[t]),r},Ae=function(e,t,r,n){var i=l[e];l[e]=void 0===r||!!r;var s=t.call(n);return l[e]=i,s},Ce=function(){var e={};for(var t in r.functions)e[t]=r.functions[t][0];return e},Oe=function(e){return[].slice.call(e)},Ue=function(e,t){var n=[];e.each((function(e){if(e.contains(t))var i=e.stripVar(t),s=r.divide(e.clone(),i.clone()),o=s.power.toDecimal();else i=e,o=0;var a=n[o];n[o]=a?r.add(a,i):i}),!0);for(var i=0;i<n.length;i++)n[i]||(n[i]=new nt(0));return n},Re=function(e,t){return Ae("PARSE2NUMBER",(function(){return r.parse(e,t)}),!0)},Le=function(e){if(Y(e)){for(var t=new at([]),n=0;n<e.length;n++)t.elements.push(Le(e[n]));return t}return D(e)?e:r.parse(e)},Ie=function(e){for(var t=a[a.length-1]||2,r=t;r<e;r++)P(r)&&a.push(r)},Te=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==c)return!1;return!0},Pe=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},_e=O("DivisionByZero"),ke=O("ParseError"),Fe=O("UndefinedError"),De=O("MaximumIterationsReached"),Be=O("NerdamerTypeError"),Ge=O("ParityError"),je=O("OperatorError"),Ve=O("OutOfRangeError"),Ze=O("DimensionError"),ze=O("InvalidVariableNameError"),He=O("ValueLimitExceededError"),Xe=O("NerdamerValueError"),$e=O("SolveError"),Qe={DivisionByZero:_e,ParseError:ke,UndefinedError:Fe,MaximumIterationsReached:De,NerdamerTypeError:Be,ParityError:Ge,OperatorError:je,OutOfRangeError:Ve,DimensionError:Ze,InvalidVariableNameError:ze,ValueLimitExceededError:He,NerdamerValueError:Xe,SolveError:$e},Ye={cos:function(e){return new nt(s.cos(e.multiplier.toDecimal()))},sin:function(e){return new nt(s.sin(e.multiplier.toDecimal()))}},We={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),r=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return e>=0?r:-r},diff:function(e){var t=.001,r=function(r){return(e(r+t)-e(r-t))/(2*t)};return r},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),r=1/t.pop(),n=0,i=t.length;n<i;n++)r=1/(t.pop()+r);return e.sign*(e.whole+r)},continuedFraction:function(e,t){t=t||20;var r,n,i=Math.sign(e),s=Math.abs(e),o=Math.floor(s),a=s-o,u=0,l=!1,c=1e-14,f=1e7,p={whole:o,sign:i,fractions:[]};while(!l&&0!==a){if(r=1/a,n=Math.floor(r),n>f){var h=We.fromContinued(p)-e;if(h<=Number.EPSILON)break}p.fractions.push(n),a=r-n,(a<=c||u>=t-1)&&(l=!0),u++}var m=p.fractions.length-1;return 1===p.fractions[m]&&(p.fractions.pop(),p.fractions[--m]++),p},bigpow:function(e,t){e instanceof rt||(e=rt.create(e)),t instanceof rt||(t=rt.create(t));var r=new rt(0);if(t.isInteger())r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString());else{var n=rt.create(Math.pow(e.num,t.num)),i=rt.create(Math.pow(e.den,t.num));r.num=We.nthroot(n,t.den.toString()),r.den=We.nthroot(i,t.den)}return r},gamma:function(e){var t=7,r=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*We.gamma(1-e));e-=1;for(var n=r[0],i=1;i<t+2;i++)n+=r[i]/(e+i);var s=e+t+.5;return Math.sqrt(2*Math.PI)*Math.pow(s,e+.5)*Math.exp(-s)*n},bigfactorial:function(e){for(var t=new n(1),r=2;r<=e;r++)t=t.times(r);return new rt(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return rt.quick.apply(null,t[e].split("/"));e=new rt(e);for(var r=80,n=new rt(0),i=e.subtract(new rt(1)),s=e.add(new rt(1)),o=0;o<r;o++){var a=new rt(2*o+1),u=We.bigpow(i.divide(s),a),l=a.clone().invert().multiply(u);n=n.add(l)}return n.multiply(new rt(2))},factorial:function(e){var t=e%1===0;if(t&&e<0)return NaN;if(!t)return We.gamma(e+1);for(var r=1,n=2;n<=e;n++)r*=n;return r},dfactorial:function(e){if(W(e)){var t=e%2===0,r=t?e/2:(e+1)/2,n=new rt(1);if(t)for(var i=1;i<=r;i++)n=n.multiply(new rt(2).multiply(new rt(i)));else for(i=1;i<=r;i++)n=n.multiply(new rt(2).multiply(new rt(i)).subtract(new rt(1)))}else n=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*We.gamma(1+e/2);return n},GCD:function(){var e=Ne([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),r=e.length;while(r-- >0){var n=Math.abs(e.shift());while(1){if(t%=n,0===t){t=n;break}if(n%=t,0===n)break}}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],r=1;r<e.length;r++){var n=e[r],i=t.isNegative()&&n.isNegative()?-1:1;t=n.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/We.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2===0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var r=We.ifactor(e),n=new nt;for(var i in n.symbols={},n.group=v,r){var s=new nt(1);s.group=f,s.value=i,s.power=new nt(r[i]),n.symbols[i]=s}return n.updateHash(),1===e&&(n=new nt(e)),t<0&&n.negate(),n},sfactor:function(e,t){t=t||{};var r=Math.floor(Math.sqrt(e)),n=a[a.length-1];r>n&&e<1e6&&Ie(r);for(var i=a.length,s=0;s<i;s++){var o=a[s];while(e%o===0)e/=o,t[o]=(t[o]||0)+1}return e>1&&(t[e]=1),t},ifactor:function(e){if(e=String(e),"0"===e)return{0:1};e=new n(e);var t=e.sign?-1:1;e=e.abs();var r={};if(e.lt("65536"))r=We.sfactor(e,r);else{var i=function(e){e.isPrime()?r[e]=(r[e]||0)+1:r=We.sfactor(e,r)};while(!e.abs().equals(1)){if(e.isPrime()){i(e);break}{function s(t){var r=new n(t),i=2,o=new n(t),a=new n(1);while(a.equals(1)){for(var u=0;u<=i&&a.equals(1);u++)o=o.pow(2).add(1).mod(e),a=n.gcd(o.minus(r).abs(),e);i*=2,r=o}return a.equals(e)?s(t+1):a}var o=s(2);i(o),e=e.divide(o)}}}if(-1===t){var a=fe(oe(r));r["-"+a]=r[a],delete r[a]}return r},boxfactor:function(e,t){t=t||200;var r,n,i=Math.floor(5/12*e),s=0,o=!1;while(1){if(r=Math.floor(e/i),n=e%i,0===n)break;if(o)return[e,1];i=Math.max(n,i-n),s++,o=s>t}return[r,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=Me(e)?t:Math.abs(t);for(var r=0,n=1,i=1,s=2;s<=e;s++)i=r+n,r=n,n=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){var t=Math.sign(e);return t*Math.floor(Math.abs(e))},simpson:function(e,t,r,n){var i=function(e,t,r){var n=e(t),i=1e-12;return isNaN(n)&&(n=e(1===r?t+i:t-i)),n};n=n||1e-4;var s=Math.abs(Math.floor((r-t)/n));s%2!==0&&s++;for(var o,a,u=(r-t)/s,l=i(e,t,1),c=!1,f=t+u,p=1;p<s;p++)o=c?2:4,a=o*i(e,f,1),l+=a,c=!c,f+=u;return(l+i(e,f,2))*(u/3)},num_integrate:function(e,t,r,n,i){if(i<0)throw new Error("max depth cannot be negative");function s(e,t,r,n,i,o,a,u,l,c,f){if(f.nanEncountered)return NaN;var p,h,m,g,v,d,w,y,b,M;if(p=r-t,h=e(t+.25*p),m=e(r-.25*p),isNaN(h))f.nanEncountered=!0;else if(isNaN(m))f.nanEncountered=!0;else if(g=p*(n+4*h+i)/12,v=p*(i+4*m+o)/12,d=g+v,M=(d-a)/15,!(f.maxDepthCount>1e3*l))return c>l?(f.maxDepthCount++,d+M):Math.abs(M)<u?d+M:(w=t+.5*p,y=s(e,t,w,n,h,i,g,.5*u,l,c+1,f),isNaN(y)?(f.nanEncountered=!0,NaN):(b=s(e,w,r,i,m,o,v,.5*u,l,c+1,f),isNaN(b)?(f.nanEncountered=!0,NaN):y+b))}function o(e,t,r,n,i){var o={maxDepthCount:0,nanEncountered:!1};void 0===n&&(n=1e-9),void 0===i&&(i=45);var a=e(t),u=e(.5*(t+r)),l=e(r),c=(a+4*u+l)*(r-t)/6,f=s(e,t,r,a,u,l,c,n,i,1,o);if(o.maxDepthCount>0&&L("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+o.maxDepthCount+" times"),o.nanEncountered)throw new Error("Function does not converge over interval!");return f}var a;try{a=o(e,t,r,n,i)}catch(u){return We.simpson(e,t,r)}return de(a,12)},Ci:function(e){for(var t=20,r=.5772156649015329,n=0,i=1;i<t;i++){var s=2*i;n+=Math.pow(-1,i)*Math.pow(e,s)/(s*We.factorial(s))}return Math.log(e)+r+n},Si:function(e){for(var t=20,r=0,n=0;n<t;n++){var i=2*n;r+=Math.pow(-1,n)*Math.pow(e,i+1)/((i+1)*We.factorial(i+1))}return r},Ei:function(e){if(0===Number(e))return-1/0;for(var t=30,r=.5772156649015329,n=0,i=1;i<t;i++)n+=Math.pow(e,i)/(i*We.factorial(i));return r+Math.abs(Math.log(e))+n},Shi:function(e){for(var t,r,n=30,i=0,s=0;s<n;s++)t=2*s,r=t+1,i+=Math.pow(e,r)/(r*r*We.factorial(t));return i},Chi:function(e){var t,r,n;return t=.001,r=.5772156649015329,n=function(e){return(Math.cosh(e)-1)/e},Math.log(e)+r+We.num_integrate(n,.002,e,t)},Li:function(e){return We.Ei(We.bigLog(e))},gamma_incomplete:function(e,t){for(var r=e-1,n=0,i=(t=t||0,0);i<r;i++)n+=Math.pow(t,i)/We.factorial(i);return We.factorial(r)*Math.exp(-t)*n},step:function(e){return e>0?1:e<0?0:.5},rect:function(e){e=Math.abs(e);return.5===e?e:e>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return e=Math.abs(e),e>=1?0:1-e},nthroot:function(e,t){if(e instanceof rt||(e=new rt(e.toString())),t instanceof rt||(t=new rt(t.toString())),t.equals(1))return e;var r,n,i,s=e.divide(new rt(2)),o=new rt(1e-15),a=t.clone().invert(),u=t.subtract(new rt(1));do{var l=We.bigpow(s,u),c=a.multiply(e.divide(l).subtract(s)).toDecimal(25);if(r=rt.create(c),i)break;s=s.add(r);c=r.toDecimal();i=!!n&&n===c,n=c}while(r.abs().gte(o));return s},sqrt:function(e){var t,r,n,i;e instanceof rt||(e=new rt(e));var s=0,o=!1,a=new rt(1e-20);t=e.divide(new rt(2));var u=1e3;do{if(s>u)throw new Error("Unable to calculate square root for "+e);t=t.add(e.divide(t)).divide(new rt(2)),t=new rt(t.decimal(30)),r=e.subtract(t.multiply(t)),i=!!n&&n.equals(r),(r.clone().abs().lessThan(a)||i)&&(o=!0),n=r,s++}while(!o);return t}};function Je(e,t,r){var i="hash"===t,s=void 0,o=i?void 0:t;function a(e){switch(t){case"decimals":case"decimal":return s=s||function(e){return!1},e.valueOf();case"recurring":s=s||function(e){return-1!==e.indexOf("'")};var r=e.toString(),i=/^-?\d+(?:\/\d+)?$/.exec(r);if(0===i.length)return r;var o=i[0].split("/"),a=!1,u=Number(o[0]);u<0&&(u=-u,a=!0);var l=Number(o[1]);l||(l=1);var c=Math.floor(u/l),f=10*(u-c*l);c=c.toString()+".";while(f&&f<l)f*=10,c+="0";var p="",h=[],m=0;while(1){if("undefined"!==typeof h[f]){var g=p.slice(0,h[f]),v=p.slice(h[f]),d=c+g+"'"+v+"'";return(a?"-":"")+d.replace("'0'","").replace(/\.$/,"")}var w=Math.floor(f/l),y=f-w*l;h[f]=m,p+=w.toString(),m+=1,f=10*y}case"mixed":s=s||function(e){return-1!==e.indexOf("/")};r=e.toString(),i=/^-?\d+(?:\/\d+)?$/.exec(r);if(0===i.length)return r;o=i[0].split("/");var b=new n(o[0]),M=new n(o[1]);M.equals(0)&&(M=new n(1));var S=b.divmod(M),N=(c=S.quotient,S.remainder),E="-"===o[0][0]||c.equals(0)||N.equals(0)?"":"+";return(c.equals(0)?"":c.toString())+E+(N.equals(0)?"":N.toString()+"/"+o[1]);default:return s=s||function(e){return-1!==e.indexOf("/")},e.toString()}}if(D(e)){var w="",b="",M="",S=e.group||r,N=e.value;if(!i){var E=a(e.multiplier);"-1"==E&&(M="-",E="1"),"1"!=E&&(w=E);var x=e.power?a(e.power):"";"1"!=x&&(b=D(x)?Je(x,o):x)}switch(S){case c:w="",N="-1"==e.multiplier?"1":a(e.multiplier),b="";break;case g:N=e.collectSymbols(Je,o).join("+").replace(/\+\-/g,"-");break;case d:N=e.collectSymbols(Je,o).join("+").replace(/\+\-/g,"-");break;case v:N=e.collectSymbols((function(e){var t=e.group;return(t===g||t===d)&&e.power.equals(1)&&e.multiplier.equals(1)?ee(Je(e,o)):Je(e,o)})).join("*");break;case h:var q=e.previousGroup,A=e.power.group;q===g&&(N=e.collectSymbols(Je,o).join("+").replace("+-","-")),q===c||q===p||q===m||i||(N=ee(N)),A!==d&&A!==v&&A!==g&&"1"==e.power.multiplier.toString()||!b||(b=ee(b));break}if(S===m&&(N=e.fname+ee(e.args.map((function(e){return Je(e,o)})).join(","))),S===m&&e.fname in u){var C=Je(e.args[0]),O=Je(e.args[1]);e.args[0].isComposite()&&(C=ee(C)),e.args[1].isComposite()&&(O=ee(O)),N=C+u[e.fname]+O}b&&S!==h&&s(b)&&(b=ee(b)),((S===d||S===g)&&(w&&"1"!=w||"-"===M)||(S===v||S===d||S===g)&&b&&"1"!=b||!i&&S===f&&-1==N||e.fname===y)&&(N=ee(N));var U=M+w;w&&s(w)&&(U=ee(U)),b<0&&(b=ee(b)),w&&(U+="*"),b&&(b=l.POWER_OPERATOR+b),S===h&&"-"===N.charAt(0)&&(N=ee(N));var R=U+N;return e.parens&&(R=ee(R)),R+b}if(z(e)){for(var L=e.elements.length,I=(U=[],0);I<L;I++)U.push(e.elements[I].text(t));return"["+U.join(",")+"]"}try{return e.toString()}catch(T){return""}}function Ke(e){if(P(e))return[e];var t=e,r=1,n=[],i=2220446049250313e-31;while(r<t){var s=e/r,o=Math.floor(s),u=s-o;u<=i&&r>1&&(-1!==a.indexOf(r)&&(a[r]=r),n.push(r),t=o),r++}return n.sort((function(e,t){return e-t}))}function et(e){this.symbol=e}function tt(e){return this instanceof tt?(e=String("undefined"===typeof e?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,tt.isScientific(e)?this.fromScientific(e):this.convert(e),this):new tt(e)}function tt(e){return this instanceof tt?(e=String("undefined"===typeof e?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,tt.isScientific(e)?this.fromScientific(e):this.convert(e),this):new tt(e)}function rt(e){if(e instanceof rt)return e;if(void 0===e)return this;try{if(W(e))try{this.num=n(e),this.den=n(1)}catch(r){return rt.simple(e)}else{var t=st.convert(e);this.num=new n(t[0]),this.den=new n(t[1])}}catch(r){return rt.simple(e)}}function nt(e){var t="Infinity"===e;return this instanceof nt?(/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)?(this.group=c,this.value=w,this.multiplier=new rt(e)):(this.group=p,I(e),this.value=e,this.multiplier=new rt(1),this.imaginary=e===l.IMAGINARY,this.isInfinity=t),this.power=new rt(1),this):new nt(e)}function it(){var e=this,t={},r={names:[],actions:[]};function i(e,t){this.start=e,this.end=t}function o(){this.elements=[]}function a(e,t,r){if(this.type=t,this.value=e,void 0!==r&&(this.column=r+1),t===a.OPERATOR){var n=q[e];for(var i in n)this[i]=n[i]}else t===a.FUNCTION&&(this.precedence=a.MAX_PRECEDENCE,this.leftAssoc=!1)}i.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},i.prototype.text=function(){return Je(this.start)+":"+Je(this.end)},o.prototype.append=function(e){this.elements.push(e)},o.prototype.getItems=function(){return this.elements},o.prototype.toString=function(){return e.pretty_print(this.elements)},o.create=function(e){var t=new o;return e&&t.append(e),t},a.prototype.toString=function(){return this.value},a.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},a.OPERATOR="OPERATOR",a.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",a.FUNCTION="FUNCTION",a.UNIT="UNIT",a.KEYWORD="KEYWORD",a.MAX_PRECEDENCE=999,this.classes={Collection:o,Slice:i,Token:a};var u={prec:void 0,cos:function(t,r){var n,i;return n=e.parse(Math.cos(t)*Math.cosh(r)),i=e.parse(Math.sin(t)*Math.sinh(r)),e.subtract(n,e.multiply(i,nt.imaginary()))},sin:function(t,r){var n,i;return n=e.parse(Math.sin(t)*Math.cosh(r)),i=e.parse(Math.cos(t)*Math.sinh(r)),e.subtract(n,e.multiply(i,nt.imaginary()))},tan:function(t,r){var n,i;return n=e.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*r))),i=e.parse(Math.sinh(2*r)/(Math.cos(2*t)+Math.cosh(2*r))),e.add(n,e.multiply(i,nt.imaginary()))},sec:function(t,r){var n=this.removeDen(this.cos(t,r));return e.subtract(n[0],e.multiply(n[1],nt.imaginary()))},csc:function(t,r){var n=this.removeDen(this.sin(t,r));return e.add(n[0],e.multiply(n[1],nt.imaginary()))},cot:function(t,r){var n=this.removeDen(this.tan(t,r));return e.subtract(n[0],e.multiply(n[1],nt.imaginary()))},acos:function(t,r){var n,i,s,o,a;return n=this.fromArray([t,r]),i=e.expand(e.pow(n.clone(),new nt(2))),s=e.multiply(se(e.subtract(new nt(1),i)),nt.imaginary()),o=e.expand(e.add(n.clone(),s)),a=Ue(o),e.expand(e.multiply(nt.imaginary().negate(),a))},asin:function(t,r){return e.subtract(e.parse("pi/2"),this.acos(t,r))},atan:function(t,r){var n,i,s,o;return o=u.fromArray([t,r]),n=e.expand(e.multiply(nt.imaginary(),o.clone())),i=Ue(e.expand(e.subtract(new nt(1),n.clone()))),s=Ue(e.expand(e.add(new nt(1),n.clone()))),e.expand(e.multiply(e.divide(nt.imaginary(),new nt(2)),e.subtract(i,s)))},asec:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acos.apply(this,r)},acsc:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asin.apply(this,r)},acot:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atan.apply(this,r)},cosh:function(t,r){var n,i;return n=e.parse(Math.cosh(t)*Math.cos(r)),i=e.parse(Math.sinh(t)*Math.sin(r)),e.add(n,e.multiply(i,nt.imaginary()))},sinh:function(t,r){var n,i;return n=e.parse(Math.sinh(t)*Math.cos(r)),i=e.parse(Math.cosh(t)*Math.sin(r)),e.add(n,e.multiply(i,nt.imaginary()))},tanh:function(t,r){var n,i;return n=e.parse(Math.sinh(2*t)/(Math.cos(2*r)+Math.cosh(2*t))),i=e.parse(Math.sin(2*r)/(Math.cos(2*r)+Math.cosh(2*t))),e.subtract(n,e.multiply(i,nt.imaginary()))},sech:function(t,r){var n=this.removeDen(this.cosh(t,r));return e.subtract(n[0],e.multiply(n[1],nt.imaginary()))},csch:function(t,r){var n=this.removeDen(this.sinh(t,r));return e.subtract(n[0],e.multiply(n[1],nt.imaginary()))},coth:function(t,r){var n=this.removeDen(this.tanh(t,r));return e.add(n[0],e.multiply(n[1],nt.imaginary()))},acosh:function(t,r){var n,i,s;return s=this.fromArray([t,r]),n=se(e.add(s.clone(),new nt(1))),i=se(e.subtract(s.clone(),new nt(1))),e.expand(Ue(e.add(s,e.expand(e.multiply(n,i)))))},asinh:function(t,r){var n,i;return i=this.fromArray([t,r]),n=se(e.add(new nt(1),e.expand(e.pow(i.clone(),new nt(2))))),e.expand(Ue(e.add(i,n)))},atanh:function(t,r){var n,i,s;return s=this.fromArray([t,r]),n=Ue(e.add(s.clone(),new nt(1))),i=Ue(e.subtract(new nt(1),s)),e.expand(e.divide(e.subtract(n,i),new nt(2)))},asech:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acosh.apply(this,r)},acsch:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asinh.apply(this,r)},acoth:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atanh.apply(this,r)},sqrt:function(t){var r,n,i,s,o;return r=t.realpart(),n=t.imagpart(),i=nt.hyp(r,n),s=e.add(r.clone(),i),o=se(e.multiply(new nt(2),s.clone())),e.add(e.divide(s.clone(),o.clone()),e.multiply(e.divide(n,o),nt.imaginary()))},log:function(t,r){var n,i;return n=Ue(nt.hyp(t,r)),i=e.parse(Math.atan2(r,t)),e.add(n,e.multiply(nt.imaginary(),i))},removeDen:function(t){var r,n,i,s,o;return Y(t)?(n=t[0],i=t[1]):(n=t.realpart(),i=t.imagpart()),r=Math.pow(n,2)+Math.pow(i,2),s=e.parse(n/r),o=e.parse(i/r),[s,o]},fromArray:function(t){return e.add(t[0],e.multiply(nt.imaginary(),t[1]))},evaluate:function(t,r){var n,i,s;if(s=t.power.sign(),t.power=t.power.abs(),t.power.greaterThan(1)&&(t=e.expand(t)),s<0){var o=this.removeDen(t);n=o[0],i=o[1]}else n=t.realpart(),i=t.imagpart();return n.isConstant("all")&&i.isConstant("all")?this[r].call(this,n,i):e.symfunction(r,[t])}},w=this.trig={cos:function(t){if(t.equals("pi")&&t.multiplier.den.equals(2))return new nt(0);if(l.PARSE2NUMBER){if(t.equals(new nt(l.PI/2)))return new nt(0);if(t.isConstant())return new nt(Math.cos(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"cos")}if(t.equals(0))return new nt(1);var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier.abs();if(t.multiplier=s,t.isPi()&&t.isLinear())if(W(s))r=new nt(Me(s)?1:-1);else{Number(s.num);var o=Number(s.den);2===o?r=new nt(0):3===o?(r=e.parse("1/2"),n=!0):4===o?(r=e.parse("1/sqrt(2)"),n=!0):6===o?(r=e.parse("sqrt(3)/2"),n=!0):r=e.symfunction("cos",[t])}return!n||2!==i&&3!==i||r.negate(),r||(r=e.symfunction("cos",[t])),r},sin:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.sin(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"sin")}if(t.equals(0))return new nt(0);var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier.sign(),o=t.multiplier.abs();if(t.multiplier=o,t.equals("pi"))r=new nt(0);else if(t.isPi()&&t.isLinear())if(W(o))r=new nt(0);else{o.num;var a=o.den;2==a?(r=new nt(1),n=!0):3==a?(r=e.parse("sqrt(3)/2"),n=!0):4==a?(r=e.parse("1/sqrt(2)"),n=!0):6==a?(r=e.parse("1/2"),n=!0):r=e.multiply(new nt(s),e.symfunction("sin",[t]))}return r||(r=e.multiply(new nt(s),e.symfunction("sin",[t]))),!n||3!==i&&4!==i||r.negate(),r},tan:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.tan(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"tan")}var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier;if(t.multiplier=s,t.isPi()&&t.isLinear())if(W(s))r=new nt(0);else{s.num;var o=s.den;if(2==o)throw new Fe("tan is undefined for "+t.toString());3==o?(r=e.parse("sqrt(3)"),n=!0):4==o?(r=new nt(1),n=!0):6==o?(r=e.parse("1/sqrt(3)"),n=!0):r=e.symfunction("tan",[t])}return r||(r=e.symfunction("tan",[t])),!n||2!==i&&4!==i||r.negate(),r},sec:function(t){if(l.PARSE2NUMBER)return t.isConstant()?new nt(We.sec(t.valueOf())):t.isImaginary()?u.evaluate(t,"sec"):e.parse(ie("1/cos({0})",t));var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier.abs();if(t.multiplier=s,t.isPi()&&t.isLinear())if(W(s))r=new nt(Me(s)?1:-1);else{s.num;var o=s.den;if(2==o)throw new Fe("sec is undefined for "+t.toString());3==o?(r=new nt(2),n=!0):4==o?(r=e.parse("sqrt(2)"),n=!0):6==o?(r=e.parse("2/sqrt(3)"),n=!0):r=e.symfunction("sec",[t])}return!n||2!==i&&3!==i||r.negate(),r||(r=e.symfunction("sec",[t])),r},csc:function(t){if(l.PARSE2NUMBER)return t.isConstant()?new nt(We.csc(t.valueOf())):t.isImaginary()?u.evaluate(t,"csc"):e.parse(ie("1/sin({0})",t));var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier.sign(),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear()){if(W(o))throw new Fe("csc is undefined for "+t.toString());o.num;var a=o.den;2==a?(r=new nt(1),n=!0):3==a?(r=e.parse("2/sqrt(3)"),n=!0):4==a?(r=e.parse("sqrt(2)"),n=!0):6==a?(r=new nt(2),n=!0):r=e.multiply(new nt(s),e.symfunction("csc",[t]))}return r||(r=e.multiply(new nt(s),e.symfunction("csc",[t]))),!n||3!==i&&4!==i||r.negate(),r},cot:function(t){if(l.PARSE2NUMBER)return t.isConstant()?new nt(We.cot(t.valueOf())):t.isImaginary()?u.evaluate(t,"cot"):e.parse(ie("1/tan({0})",t));var r,n=!1,i=Ie(t.multiplier.toDecimal()),s=t.multiplier;if(t.multiplier=s,t.isPi()&&t.isLinear()){if(W(s))throw new Fe("cot is undefined for "+t.toString());s.num;var o=s.den;2==o?r=new nt(0):3==o?(r=e.parse("1/sqrt(3)"),n=!0):4==o?(r=new nt(1),n=!0):6==o?(r=e.parse("sqrt(3)"),n=!0):r=e.symfunction("cot",[t])}return r||(r=e.symfunction("cot",[t])),!n||2!==i&&4!==i||r.negate(),r},acos:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.acos(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"acos")}return e.symfunction("acos",arguments)},asin:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.asin(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"asin")}return e.symfunction("asin",arguments)},atan:function(t){var r;if(t.equals(0))r=new nt(0);else{if(l.PARSE2NUMBER)return t.isConstant()?new nt(Math.atan(t.valueOf())):t.isImaginary()?u.evaluate(t,"atan"):e.symfunction("atan",arguments);r=t.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return r},asec:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.acos(t.invert().valueOf()));if(t.isImaginary())return u.evaluate(t,"asec")}return e.symfunction("asec",arguments)},acsc:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.asin(t.invert().valueOf()));if(t.isImaginary())return u.evaluate(t,"acsc")}return e.symfunction("acsc",arguments)},acot:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new e.add(e.parse("pi/2"),w.atan(t).negate());if(t.isImaginary())return u.evaluate(t,"acot")}return e.symfunction("acot",arguments)},atan2:function(t,r){if(t.equals(0)&&r.equals(0))throw new Fe("atan2 is undefined for 0, 0");return l.PARSE2NUMBER&&t.isConstant()&&r.isConstant()?new nt(Math.atan2(t,r)):e.symfunction("atan2",arguments)}},E=this.trigh={cosh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.cosh(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.sinh(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(t){if(l.PARSE2NUMBER){if(t.isConstant())return new nt(Math.tanh(t.valueOf()));if(t.isImaginary())return u.evaluate(t,"tanh")}return e.symfunction("tanh",arguments)},sech:function(t){return l.PARSE2NUMBER?t.isConstant()?new nt(Math.sech(t.valueOf())):t.isImaginary()?u.evaluate(t,"sech"):e.parse(ie("1/cosh({0})",t)):e.symfunction("sech",arguments)},csch:function(t){return l.PARSE2NUMBER?t.isConstant()?new nt(Math.csch(t.valueOf())):t.isImaginary()?u.evaluate(t,"csch"):e.parse(ie("1/sinh({0})",t)):e.symfunction("csch",arguments)},coth:function(t){return l.PARSE2NUMBER?t.isConstant()?new nt(Math.coth(t.valueOf())):t.isImaginary()?u.evaluate(t,"coth"):e.parse(ie("1/tanh({0})",t)):e.symfunction("coth",arguments)},acosh:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"acosh"):l.PARSE2NUMBER?Re(e.parse(ie(l.LOG+"(({0})+sqrt(({0})^2-1))",t.toString()))):e.symfunction("acosh",arguments),r},asinh:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"asinh"):l.PARSE2NUMBER?Re(e.parse(ie(l.LOG+"(({0})+sqrt(({0})^2+1))",t.toString()))):e.symfunction("asinh",arguments),r},atanh:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"atanh"):l.PARSE2NUMBER?Re(e.parse(ie("(1/2)*"+l.LOG+"((1+({0}))/(1-({0})))",t.toString()))):e.symfunction("atanh",arguments),r},asech:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"asech"):l.PARSE2NUMBER?Re(Ue(e.add(t.clone().invert(),se(e.subtract(e.pow(t,new nt(-2)),new nt(1)))))):e.symfunction("asech",arguments),r},acsch:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"acsch"):l.PARSE2NUMBER?Re(e.parse(ie(l.LOG+"((1+sqrt(1+({0})^2))/({0}))",t.toString()))):e.symfunction("acsch",arguments),r},acoth:function(t){var r;return r=l.PARSE2NUMBER&&t.isImaginary()?u.evaluate(t,"acoth"):l.PARSE2NUMBER?t.equals(1)?nt.infinity():Re(e.divide(Ue(e.divide(e.add(t.clone(),new nt(1)),e.subtract(t.clone(),new nt(1)))),new nt(2))):e.symfunction("acoth",arguments),r}};this.units={};var q={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(t){return e.symfunction(l.DOUBLEFACTORIAL,[t])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return j(e)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(t){return e.divide(t,new nt(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},A={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},O=this.functions={cos:[w.cos,1],sin:[w.sin,1],tan:[w.tan,1],sec:[w.sec,1],csc:[w.csc,1],cot:[w.cot,1],acos:[w.acos,1],asin:[w.asin,1],atan:[w.atan,1],arccos:[w.acos,1],arcsin:[w.asin,1],arctan:[w.atan,1],asec:[w.asec,1],acsc:[w.acsc,1],acot:[w.acot,1],atan2:[w.atan2,2],acoth:[E.acoth,1],asech:[E.asech,1],acsch:[E.acsch,1],sinh:[E.sinh,1],cosh:[E.cosh,1],tanh:[E.tanh,1],asinh:[E.asinh,1],sech:[E.sech,1],csch:[E.csch,1],coth:[E.coth,1],acosh:[E.acosh,1],atanh:[E.atanh,1],log10:[,1],exp:[te,1],radians:[re,1],degrees:[ne,1],min:[Ne,-1],max:[be,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[ee,1],tri:[,1],sign:[xe,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[j,1],factorial:[j,1],continued_fraction:[V,[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Le,[1,2]],scientific:[oe,[1,2]],mod:[Z,2],pfactor:[ce,1],vector:[ht,-1],matrix:[mt,-1],Set:[gt,-1],imatrix:[He,-1],parens:[B,-1],sqrt:[se,1],nthroot:[ue,2],log:[Ue,[1,2]],expand:[ze,1],abs:[G,1],invert:[Mt,1],determinant:[vt,1],size:[dt,1],transpose:[bt,1],dot:[wt,2],cross:[yt,2],vecget:[$e,2],vecset:[et,3],vectrim:[Qe,[1,2]],matget:[tt,3],matset:[pt,4],matgetrow:[it,2],matsetrow:[st,3],matgetcol:[ct,2],matsetcol:[ft,3],IF:[Q,3],is_in:[J,2],realpart:[fe,1],imagpart:[pe,1],conjugate:[he,1],arg:[me,1],polarform:[ge,1],rectform:[we,1],sort:[Ce,[1,2]],integer_part:[,1],union:[St,2],contains:[Et,2],intersection:[Nt,2],difference:[xt,2],intersects:[qt,2],is_subset:[At,2],print:[Ct,-1]};this.error=C;var U=function(e){for(var t=l.FUNCTION_MODULES,r=t.length,n=0;n<r;n++){var i=t[n];if(e in i)return i[e]}C("The function "+e+" is undefined!")};this.override=function(e,r){t[e]||(t[e]=[]),t[e].push(this[e]),this[e]=r},this.restore=function(e){this[e]&&(this[e]=t[e].pop())},this.extend=function(e,t,r){var n=this,i=this[e];if("function"===typeof i&&"function"===typeof t){var s=this[e];this[e]=function(e,i){return D(e)&&D(i)&&!r?s.call(n,e,i):t.call(n,e,i,s)}}},this.symfunction=function(e,t){var r=new nt(e);return r.group=m,"object"===typeof t&&(t=[].slice.call(t)),r.args=t,r.fname=e===y?"":e,r.updateHash(),r},this.callfunction=function(t,r,n){var i=O[t];i||C("Nerdamer currently does not support the function "+t);var s,o=i[1]||n,a=i[0];if(r instanceof Array||(r=void 0!==r?[r]:[]),-1!==o){var u=Y(o),c=u?o[0]:o,f=u?o[1]:o,p=r.length,h=t+" requires a {0} of {1} arguments. {2} provided!";p<c&&C(ie(h,"minimum",c,p)),p>f&&C(ie(h,"maximum",f,p))}var m=Te(r);return l.USE_BIG&&m?s=Ye[t].apply(void 0,r):a?s=a.apply(i[2],r):(a=U(t),s=l.PARSE2NUMBER&&m?De(a.apply(a,r)):e.symfunction(t,r)),s},this.operator_filter_regex=function(){var e="^\\"+Object.keys(q).filter((function(e){if(1===e.length)return e})).join("\\");return new RegExp("(["+e+"])\\s+(["+e+"])")}(),this.setOperator=function(t,r,n){var i=t.operator;if(q[i]=t,r&&(this[t.action]=r),e[i]=t.operation,t.action||t.prefix||t.postif||(t.action=i),"over"===n||"under"===n){var s=t.precedence;for(var o in q){var a=q[o],u="over"===n?a.precedence>=s:a.precedence>s;u&&a.precedence++}}},this.getOperator=function(e){return q[e]},this.aliasOperator=function(e,t){var r={},n=q[e];for(var i in n)r[i]=n[i];r.operator=t,this.setOperator(r)},this.getOperators=function(){return q},this.getBrackets=function(){return A};var I=function(e){e=String(e);for(var t=0;t<r.actions.length;t++)e=r.actions[t].call(this,e);e=e.replace(/\s+/g," "),/e/gi.test(e)&&(e=e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,(function(e){return T(e)}))),e=e.replace(/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,(function(){var e=arguments[4],t=arguments[1],r=arguments[2],n=arguments[3],i=e.charAt(n),s="",o="*";return i.match(/[\+\-\/\*]/)||(s=e.charAt(n-1)),s.match(/[a-z]/i)&&(o=""),t+o+r})).replace(/([a-z0-9_]+)/gi,(function(e,t){return!1!==l.USE_MULTICHARACTER_VARS||t in O?t:isNaN(t)?t.split("").join("*"):t})).replace(/\)\(/g,")*(")||"0";while(1){var n=e;if(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,(function(e,t,r,n,i){var s=t||n,o=r||i;return s in O?s+o:s+"*"+o})),n===e)break}return e};function P(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new nt(l.E),PI:new nt(l.PI)}},this.pretty_print=function(t){if(Array.isArray(t)){var r=t.map(t=>e.pretty_print(t)).join(", ");return"vector"===t.type?"vector<"+r+">":"("+r+")"}return t.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){for(var t=this.peekers[e],r=Oe(arguments).slice(1).map(K),n=0;n<t.length;n++)t[n].apply(null,r)},this.tokenize=function(t){for(var r in t=String(t),t=t.trim().replace(/\s+/g," "),A){var n=new RegExp(A[r].is_close?"\\s+\\"+r:"\\"+r+"\\s+","g");t=t.replace(n,r)}for(var i=0,s=t.length,o=0,u=[],l=[u],c=l[0],f=0,p=[],h=!1,m=" ",g="",v=",",d="-",w="*",y=function(e,t){var r=[];void 0!==e&&(r.type=e),r.column=t,l.push(r),c.push(r),c=r,f++},b=function(){l.pop(),c=l[--f]},M=function(e){e=void 0!==e?e:i;var r=e+1;while(t.charAt(r++)in q);return t.substring(e,r-1)},S=function(e){for(var t=i-e.length,r=[],n=e.charAt(0),s=1,o=e.length;s<o;s++){var u=e.charAt(s),l=n+u;l in q?n=l:(r.push(new a(n,a.OPERATOR,t+s)),n=u)}return r.push(new a(n,a.OPERATOR,t+s)),r},N=function(r,n){void 0===n&&(n=t.substring(o,r)),n in e.units?c.push(new a(n,a.UNIT,o)):""!==n&&c.push(new a(n,a.VARIABLE_OR_LITERAL,o))},E=function(e){c.push(new a(e,a.FUNCTION,o))},x=function(e){o=e+1},C=function(){o=o+I.length-2,i=o-1};i<s;i++){var U=t.charAt(i);if(U in q){N(i);var R=c[0]&&_(c[0]),L=R&&U===w;h&&o<i&&U!==v&&!L&&(h=!1,b()),x(i+1);var I=M(i);C(),c.push.apply(c,S(I))}else if(U in A){var T=A[U];if(T.is_open){p.push([T,o]);var P=t.substring(o,i);P in O?E(P):""!==P&&c.push(new a(P,a.VARIABLE_OR_LITERAL,o)),y(T.maps_to,i)}else if(T.is_close){var k=p.pop();if(!k)throw new Ge("Missing open bracket for bracket at: "+(i+1));if(k[0].id!==T.id-1)throw new Ge("Parity error");N(i),b()}x(i)}else if(U===m){var F=t.substring(o,i),D=t.charAt(i+1);if(h){if(F in q)c.push(new a(F,a.OPERATOR,i));else{N(void 0,F),b();var B=D in q;(B&&q[D].value===d||!B)&&c.push(new a(w,a.OPERATOR,i))}h=!1}else{P=t.substring(o,i);if(P in O)h=!0,E(P),y();else if(P in q)c.push(new a(P,a.OPERATOR,i));else{N(void 0,P);D=t.charAt(i+1);F===g||D===g||F in q||D in q||c.push(new a(w,a.OPERATOR,i))}}x(i)}}if(p.length){var G=p.pop();throw new Ge("Missing closed bracket for bracket at "+(G[1]+1))}return N(i),u},this.toRPN=function(e){var t,r=e.type,n=e.length,i=[],s=[],o=[],u=function(e,t){while(e.length)t.push(e.pop())};for(t=0;t<n;t++){var l=e[t];if(l.type!==a.OPERATOR)break;if(!l.prefix)throw new je("Not a prefix operator");l.is_prefix=!0,s.push(l)}for(;t<n;t++){var c=e[t];if(c.type===a.OPERATOR){var f=c;if(f.overloaded){var p=e[t+1];p&&p.type===a.VARIABLE_OR_LITERAL&&(f.postfix=!1,f.action=f.overloadAction,f.leftAssoc=f.overloadLeftAssoc)}while(s.length){var h=s[s.length-1];if(!(h.precedence>f.precedence||!f.leftAssoc&&h.precedence===f.precedence))break;i.push(s.pop())}if(("vector"===r||"set"===r)&&"vectorFn"in f&&(f.action=f.vectorFn),f.postfix){var m=e[t-1];if(!m)throw new je("Unexpected prefix operator '"+c.value+"'! at "+c.column);if(m.type===a.OPERATOR&&!m.postfix)throw new je("Unexpected prefix operator '"+m.value+"'! at "+m.column)}else do{p=e[t+1];var g=!!p&&p.type===a.OPERATOR;if(g){if(!p.prefix)throw new je("A prefix operator was expected at "+p.column);p.is_prefix=!0,o.push(p),t++}}while(g);f.is_prefix?o.push(f):s.push(f);while(o.length){if(!(f.leftAssoc||!f.leftAssoc&&o[o.length-1].precedence>=f.precedence))break;s.push(o.pop())}}else if(c.type===a.VARIABLE_OR_LITERAL){0===i.length&&u(o,s),i.push(c);var v=s[s.length-1];v&&v.leftAssoc||u(o,i)}else c.type===a.FUNCTION?s.push(c):c.type===a.UNIT&&i.push(c);Array.isArray(c)&&(i.push(this.toRPN(c)),c.type&&i.push(new a(c.type,a.FUNCTION,c.column)))}return u(s,i),u(o,i),i},this.parseRPN=function(t,r){try{for(var n in r=r||{},r)r[n]=e.parse(r[n],{});l.PARSE2NUMBER&&("e"in r||(r.e=new nt(l.E)),"pi"in r||(r.pi=new nt(l.PI)));for(var s=[],u=0,c=t.length;u<c;u++){var f=t[u];if(Array.isArray(f)&&(f=this.parseRPN(f,r)),f)if(f.type===a.OPERATOR)if(f.is_prefix||f.postfix)s.push(f.operation(s.pop()));else{var p=s.pop(),h=s.pop();if("undefined"===typeof h)throw new je(f+" is not a valid postfix operator at "+f.column);var m="comma"===f.action;h instanceof lt&&!m&&(h=at.fromSet(h)),p instanceof lt&&!m&&(p=at.fromSet(p)),this.callPeekers("pre_operator",h,p,f);var g=e[f.action](h,p);this.callPeekers("post_operator",g,h,p,f),s.push(g)}else if(f.type===a.FUNCTION){var v=s.pop(),d=v.parent;v instanceof o||(v=o.create(v));var w=f.value,y=v.getItems();this.callPeekers("pre_function",w,y);var b=e.callfunction(w,y);this.callPeekers("post_function",b,w,y);var M=s[s.length-1],S=t[u+1],N=S&&S.type===a.OPERATOR&&","===S.value;if(!N&&b instanceof at&&M&&M.elements&&!(M instanceof o)){var E=s.pop(),q=b.elements[0];if(q.isConstant())if(q instanceof i)s.push(at.fromArray(E.elements.slice(q.start,q.end)));else{var A=Number(q),C=E.elements.length;if(A<0&&(A=C+A),A<0||A>=C)throw new Ve("Index out of range "+(f.column+1));var O=E.elements[A];E.getter=A,O.parent=E,s.push(O)}else E.getter=q,s.push(E),s.push(b)}else d&&(b.parent=d),s.push(b)}else{var U,R=f.value;R in l.ALIASES?f=e.parse(l.ALIASES[f]):f.type===a.VARIABLE_OR_LITERAL?f=new nt(R):f.type===a.UNIT&&(f=new nt(R),f.isUnit=!0),R in e.CONSTANTS?(U=f,f=new nt(e.CONSTANTS[R])):R in r&&R!==r[R].value?(U=f,f=r[R].clone()):R in x&&(U=f,f=x[R].clone()),U&&(f.subbed=U),s.push(f)}}return s[0]}catch(L){throw new ke(L.message+": "+f.column)}},P.prototype.toString=function(){var e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t},P.prototype.toHTML=function(e,t){e=e||0,t="undefined"===typeof t?4:t;var r=function(e){return" ".repeat(t*e)},n="",i=this.left?r(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+r(e+1)+"</li> \n":"",s=this.right?r(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+r(e+1)+"</li>\n":"";n=r(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+r(e)+"\n";return(i||s)&&(n+=r(e)+"<ul>\n"+i+s+r(e)+"</ul>\n"),n+="",n},this.tree=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];if(Array.isArray(n))n=this.tree(n),t.push(n);else if(n.type===a.OPERATOR)if(n.is_prefix||n.postfix){var i=n.is_prefix?"left":"right",s=t.pop();n=new P(n),n[i]=s,t.push(n)}else n=new P(n),n.right=t.pop(),n.left=t.pop(),t.push(n);else if(n.type===a.FUNCTION){n=new P(n);var o=t.pop();if(n.right=o,"object"===n.value){s=t[t.length-1];if(s){while(s.right)s=s.right;s.right=n;continue}}t.push(n)}else t.push(new P(n))}return t[0]},this.parse=function(e,t){e=I(e),t=t||{};var r=this.tokenize(e),n=this.toRPN(r);return this.parseRPN(n,t)},this.toObject=function(t){var r=function(t){for(var n=[],i=0,s=t.length;i<s;i++){var o=t[i],u=o.value;if(o.type===a.VARIABLE_OR_LITERAL)n.push(new nt(u));else if(o.type===a.FUNCTION){i++;var l=e.symfunction(u,r(t[i]));l.isConversion=!0,n.push(l)}else o.type===a.OPERATOR?n.push(u):n.push(r(o))}return n};return r(e.tokenize(t))};var k=function(e){for(var t=0,r=[[]],n=0,i=e.length;n<i;n++)","===e[n]?(t++,r[t]=[]):r[t].push(e[n]);return r},F=function(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))};function B(t){return l.PARSE2NUMBER?t:e.symfunction("parens",[t])}function G(t){if(t.multiplier.lessThan(0)&&t.multiplier.negate(),t.isImaginary()){var r=t.realpart(),n=t.imagpart();if(r.isConstant()&&n.isConstant())return se(e.add(e.pow(r,new nt(2)),e.pow(n,new nt(2))))}else if($(t)||Me(t.power))return t;if(t.isComposite()){var i=[];t.each((function(e){i.push(e.multiplier)}));var s=We.QGCD.apply(null,i);s.lessThan(0)&&(t.multiplier=t.multiplier.multiply(new rt(-1)),t.distributeMultiplier())}return e.symfunction(M,[t])}function j(t){var r;if(z(t)){var n=new at;return t.each((function(e,t){n.set(t-1,j(e))})),n}if(H(t)){var i=new ut;return t.each((function(e,t,r){i.set(t,r,j(e))})),i}if(l.PARSE2NUMBER&&t.isConstant())return r=W(t)?We.bigfactorial(t):We.gamma(t.multiplier.add(new rt(1)).toDecimal()),r=De(r),r;if(t.isConstant()){var s=t.getDenom();if(s.equals(2)){var o,a,u,c,f=t.getNum();return t.multiplier.isNegative()?(c=e.subtract(f.negate(),new nt(1)).multiplier.divide(new rt(2)),o=e.pow(new nt(-4),new nt(c)).multiplier.multiply(We.bigfactorial(c)),a=We.bigfactorial(new rt(2).multiply(c))):(c=e.add(f,new nt(1)).multiplier.divide(new rt(2)),o=We.bigfactorial(new rt(2).multiply(c)),a=e.pow(new nt(4),new nt(c)).multiplier.multiply(We.bigfactorial(c))),u=o.divide(a),e.multiply(e.parse("sqrt(pi)"),new nt(u))}}return e.symfunction(S,[t])}function V(t,r){var n=Re(t);if(n.isConstant()){var i=We.continuedFraction(n,r),s=at.fromArray(i.fractions.map((function(e){return new nt(e)})));return at.fromArray([new nt(i.sign),new nt(i.whole),s])}return e.symfunction("continued_fraction",arguments)}function Z(t,r){if(t.isConstant()&&r.isConstant()){var n=new nt(1);return n.multiplier=n.multiplier.multiply(t.multiplier.mod(r.multiplier)),n}var i=e.divide(t.clone(),r.clone());return W(i)?new nt(0):e.symfunction("mod",[t,r])}function Q(e,t,r){return"boolean"!==typeof e&&$(e)&&(e=!!Number(e)),e?t:r}function J(e,t){if(H(e))for(var r=0,n=e.rows();r<n;r++)for(var i=0,s=e.cols();i<s;i++){var o=e.elements[r][i];if(o.equals(t))return new nt(1)}else if(e.elements)for(r=0,n=e.elements.length;r<n;r++)if(e.elements[r].equals(t))return new nt(1);return new nt(0)}function ee(t){return l.PARSE2NUMBER?t.isConstant()?new nt(We.sinc(t)):e.parse(ie("sin({0})/({0})",t)):e.symfunction("sinc",[t])}function te(t){return e.parse(ie("e^({0})",t))}function re(t){return e.parse(ie("({0})*pi/180",t))}function ne(t){return e.parse(ie("({0})*180/pi",t))}function se(t){""===t.fname&&t.power.equals(1)&&(t=t.args[0]);var r=t.multiplier.sign()<0;if(l.PARSE2NUMBER){if(t.isConstant()&&!r)return new nt(Math.sqrt(t.multiplier.toDecimal()));if(t.isImaginary())return u.sqrt(t)}var n,i,s=t.isConstant();if(t.group===v&&t.isLinear()){var o=se(nt(t.multiplier));for(var a in t.symbols){var c=t.symbols[a];o=e.multiply(o,se(c))}i=o}else if(t.fname===b){a=t.args[0];var f=t.multiplier;a.setPower(t.power.multiply(new rt(.25))),i=a,f.equals(1)||(i=e.multiply(se(e.parse(f)),i))}else if(t.power.isInteger()){var p=t.power.sign();t.power=t.power.abs(),s&&t.multiplier.lessThan(0)&&(n=nt.imaginary(),t.multiplier=t.multiplier.abs());var h=t.multiplier.toDecimal(),m=Math.abs(h),g=Math.sqrt(m);if(W(g))o=new nt(g);else if(W(h)){var d=We.ifactor(h),w=1;for(var c in d){var y=d[c],M=y-y%2;if(M){var S=Math.pow(c,M);w*=Math.pow(c,M/2),h/=S}}o=e.multiply(e.symfunction(b,[new nt(h)]),new nt(w))}else{for(var N=[new nt(t.multiplier.num),new nt(t.multiplier.den)],E=[new nt(1),new nt(1)],x=[new nt(1),new nt(1)],q=0;q<2;q++){y=N[q];ce(y).each((function(t){t=nt.unwrapPARENS(t);var r=t.clone().toLinear(),n=Number(t.power),i=n%2,s=(n-i)/2;E[q]=e.multiply(E[q],e.pow(r,new nt(s))),x[q]=e.multiply(x[q],se(e.pow(r,new nt(i))))}))}o=e.divide(e.multiply(E[0],x[0]),e.multiply(E[1],x[1]))}t=t.toUnitMultiplier(!0),i=t.isOne()?t:Me(t.power.toString())?e.pow(t.clone(),new nt(.5)):e.symfunction(b,[t]),p<0&&i.power.negate(),o&&(i=e.multiply(o,i)),n&&(i=e.multiply(n,i))}else t.setPower(t.power.multiply(new rt(.5))),i=t;return r&&l.PARSE2NUMBER?e.parse(i):i}function oe(e,t){return e.scientific=t||10,e}function ue(t,r,i,s){if("undefined"===typeof s&&(s=!0),i=i||25,D(r)||(r=e.parse(r)),W(t)&&r.isConstant()){var o,a=t.sign();t=G(t);var u=t+"-"+r;if(u in l.CACHE.roots?(o=new n(l.CACHE.roots[u]),Me(r)||(o=o.multiply(a))):o=t<0x10000000000000000?rt.create(Math.pow(t,1/r)):We.nthroot(t,r),W(o)||l.PARSE2NUMBER)return new nt(s?o:o.toDecimal(i))}return 2===Number(r)?e.sqrt(t):e.symfunction("nthroot",arguments)}function ce(t){if(t.greaterThan(9999999999998891e26))return t;if(t.equals(Math.PI))return new nt(Math.PI);if(t=Re(t.clone()),t.isConstant()){var r=new nt(1),n=t.toString();if(W(n)){var i=We.ifactor(n);for(var s in i){var o=i[s];r=e.multiply(r,e.symfunction("parens",[new nt(s).setPower(new rt(o))]))}}else{var a=ce(new nt(t.multiplier.num)),u=ce(new nt(t.multiplier.den));r=e.multiply(e.symfunction("parens",[a]),e.symfunction("parens",[u]).invert())}}else r=e.symfunction("pfactor",arguments);return r}function fe(e){return e.realpart()}function pe(e){return e.imagpart()}function he(t){var r=t.realpart(),n=t.imagpart();return e.add(r,e.multiply(n.negate(),nt.imaginary()))}function me(t){var r=t.realpart(),n=t.imagpart();return r.isConstant()&&n.isConstant()?new nt(Math.atan2(n,r)):e.symfunction("atan2",[n,r])}function me(t){var r=t.realpart(),n=t.imagpart();return r.isConstant()&&n.isConstant()?n.equals(0)&&r.equals(-1)?e.parse("pi"):n.equals(1)&&r.equals(0)?e.parse("pi/2"):n.equals(1)&&r.equals(1)?e.parse("pi/4"):new nt(Math.atan2(n,r)):e.symfunction("atan2",[n,r])}function ge(t){var r,n,i,s;return r=nt.toPolarFormArray(t),s=r[1],n=r[0],i=e.parse(ie("e^({0}*({1}))",l.IMAGINARY,s)),e.multiply(n,i)}function we(t){var r=t.clone();try{var n,i,s,o,a,u;return n=ve(t,"e",!0),i=e.divide(n.x.power,nt.imaginary()),s=Re(w.tan(i)),e.pow(n.a,new nt(2)),a=s.getDenom(!0),u=s.getNum(),o=nt.hyp(u,a),o.equals(n.a)?e.add(a,e.multiply(nt.imaginary(),u)):r}catch(l){return r}}function ye(e,t){var r,n,i;t.map((function(e){e.numVal=Re(e).multiplier}));while(1){if(r=t.length,r<2)return t[0];n=t.pop(),i=t[r-2],("min"===e?n.numVal<i.numVal:n.numVal>i.numVal)&&(t.pop(),t.push(n))}}function be(){var t=[].slice.call(arguments);return R(t)?t[0]:Te(t)?new nt(Math.max.apply(null,t)):l.SYMBOLIC_MIN_MAX&&Pe(t)?ye("max",t):e.symfunction("max",t)}function Ne(){var t=[].slice.call(arguments);return R(t)?t[0]:Te(t)?new nt(Math.min.apply(null,t)):l.SYMBOLIC_MIN_MAX&&Pe(t)?ye("min",t):e.symfunction("min",t)}function xe(t){return t.isConstant(!0)?new nt(Math.sign(Re(t))):e.symfunction("sign",arguments)}function Ce(e,t){t=t?t.toString():"asc";var r=function(e){return e.group===c?e.multiplier:e.group===m?""===e.fname?r(e.args[0]):e.fname:e.group===p?e.power:e.value},n=z(e)?e.elements:e.collectSymbols();return new at(n.sort((function(e,n){var i=r(e),s=r(n);return"desc"===t?s-i:i-s})))}function Ue(t,r){if(t.equals(1))return new nt(0);var n;if(t.fname===b&&t.multiplier.equals(1))return e.divide(Ue(t.args[0]),new nt(2));if(t.equals(0))throw new Fe(l.LOG+"(0) is undefined!");if(t.isImaginary())return u.evaluate(t,l.LOG);if(t.isConstant()&&"undefined"!==typeof r&&r.isConstant()){var i=Math.log(t),s=Math.log(r);n=new nt(i/s)}else if(t.group===h&&t.power.multiplier.lessThan(0)||"-1"===t.power.toString())t.power.negate(),n=Ue(t).negate();else if("e"===t.value&&t.multiplier.equals(1)){var o=t.power;n=D(o)?o:new nt(o)}else if(t.group===m&&"exp"===t.fname){var a=t.args[0];n=t.multiplier.equals(1)?e.multiply(a,new nt(t.power)):e.symfunction(l.LOG,[t])}else if(l.PARSE2NUMBER&&$(t)){var c;t.multiplier.lessThan(0)&&(t.negate(),c=e.multiply(new nt(Math.PI),new nt("i"))),n=new nt(Math.log(t.multiplier.toDecimal())),c&&(n=e.add(n,c))}else{t.power.equals(1)||(a=t.group===h?t.power:new nt(t.power),t.toLinear()),n=arguments.length>1&&R(arguments)?new nt(1):e.symfunction(l.LOG,arguments),a&&(n=e.multiply(a,n))}return n}function Le(t,r){var n,i,s,o,a=r&&r.isConstant()||"undefined"===typeof r;return t.isConstant()&&a?(n=t,r&&r.lessThan(0)&&(r=G(r),i=Number(t).toExponential().toString().split("e"),n=i[0],s=i[1]),o=new nt(de(n,Number(r||0))),e.multiply(o,e.pow(new nt(10),new nt(s||0)))):e.symfunction("round",arguments)}function Ie(e){var t,r=e%2;return r<0&&(r=2+r),t=r>=0&&r<=.5?1:r>.5&&r<=1?2:r>1&&r<=1.5?3:4,t}function De(e){if(!isFinite(e)){var t=Math.sign(e),r=new nt(String(Math.abs(e)));return r.multiplier=r.multiplier.multiply(new rt(t)),r}if(D(e))return e;if("number"===typeof e)try{e=rt.simple(e)}catch(i){e=new rt(e)}var n=new nt(0);return n.multiplier=e,n}function Be(t){var r,n=t.group;if(n===d){var i=t.getNum(),s=t.getDenom()||new nt(1),o=Number(t.power),a=new nt(1);if(1===Math.abs(o)){s.each((function(t){t.group===v?a=e.multiply(a,Be(t.getDenom())):t.power.lessThan(0)&&(a=e.multiply(a,Be(t.clone().toUnitMultiplier())))}));var u,l=new nt(0);s.each((function(t){l=e.add(e.divide(t,a.clone()),l)})),a.invert(),i.isComposite()?(u=new nt(0),i.each((function(t){u=e.add(e.multiply(Be(t),a.clone()),u)}))):u=e.multiply(a,i),r=e.divide(u,l)}}else n===v?(r=new nt(1),t.each((function(t){r=e.multiply(r,e.clean(t))}))):n===m&&1===t.args.length&&t.args[0].isConstant()&&(r=Ae("PARSE2NUMBER",(function(){return e.parse(t)}),!0));return r||(r=t),r}function ze(t){if(t.group===m&&""===t.fname)return e.expand(t.args[0]);if(!t.symbols)return t;var r=t.clone();try{if(!t.symbols)return t;for(var n in t.symbols){var i=t.symbols[n];t.symbols[n]=ze(i)}t=e.parse(t);var s=t.power,o=t.multiplier.clone(),a=Number(s);if(W(a)&&a>0&&t.isComposite()){var u=new nt(0);for(var i in t.symbols){var l=t.symbols[i];l.power.greaterThan(1)&&(l=e.expand(l)),u=e.add(u,l)}for(var c=a-1,f=u.clone(),p=0;p<c;p++){var g=new nt(0);for(var i in u.symbols){var d=u.symbols[i];for(var w in f.symbols){var y=e.multiply(d.clone(),f.symbols[w]);y.group===v&&(y=e.expand(y)),g=e.add(g,y)}}f=g}if(!o.equals(1))for(var n in f.symbols){i=f.symbols[n];i.multiplier=i.multiplier.multiply(o),i.isComposite()&&i.distributeMultiplier(),t.symbols[n]=i}return f}if(t.group===v){var b=!1,M=t.power.clone(),S=t.power.sign();for(var i in t.symbols){var N=t.symbols[i];if(N.isComposite()){b=!0;break}D(N.power)||D(M)?(N.power=e.multiply(N.power,nt(M)),N.group=h):N.power=N.power.multiply(M)}if(t.toLinear(),t=e.parse(t.text()),!b)return t;f=new nt(0);var E=[],x=new nt(t.multiplier);for(var n in t.symbols){i=t.symbols[n];if(i.group!==h)if(i.isComposite()){s=i.power;var q=!1;W(s)&&s<0&&(i.power.negate(),q=!0),q?(i.power.negate(),x=e.multiply(x,i)):E.push(i)}else x=e.multiply(x,i)}f=E.pop();while(E.length){n=E.pop(),g=new nt(0);f.each((function(t){n.each((function(r){var n=e.multiply(t.clone(),r.clone());g=e.add(g,n)}))})),f=g}var A=new nt(0);f.each((function(t){A=e.add(A,ze(e.multiply(x,t)))})),A.power=A.power.multiply(M.abs()),t=e.expand(A),S<0&&t.invert()}}catch(C){return r}return t}function He(e){return ut.identity(e)}function $e(t,r){return r.isConstant()&&W(r)?t.elements[r]:e.symfunction("vecget",arguments)}function Qe(t,r){return r="undefined"===typeof r?1e-14:r,t=t.clone(),r=Number(r),t.elements.sort((function(e,t){return t.group-e.group})),t.elements=Ee(t.elements,(function(t,n){var i=Number(e.subtract(Re(t),Re(n)).abs());return i<=r})),t}function et(t,r,n){return r.isConstant?(t.elements[r]=n,t):e.symfunction("vecset",arguments)}function tt(t,r,n){return r.isConstant()&&n.isConstant()?t.elements[r][n]:e.symfunction("matget",arguments)}function it(t,r){return r.isConstant()?new ut(t.elements[r]):e.symfunction("matgetrow",arguments)}function st(t,r,n){if(!r.isConstant())return e.symfunction("matsetrow",arguments);if(t.elements[r].length!==n.elements.length)throw new Ze("Matrix row must match row dimensions!");var i=t.clone();return i.elements[r]=n.clone().elements,i}function ct(t,r){if(!r.isConstant())return e.symfunction("matgetcol",arguments);r=Number(r);var n=ut.fromArray([]);return t.each((function(e,t,i){i===r&&n.elements.push([e.clone()])})),n}function ft(t,r,n){if(!r.isConstant())return e.symfunction("matsetcol",arguments);if(r=Number(r),t.rows()!==n.elements.length)throw new Ze("Matrix columns must match number of columns!");return n.each((function(e,n){t.set(n-1,r,e.elements[0].clone())})),t}function pt(e,t,r,n){return e.elements[t][r]=n,e}function ht(){return new at([].slice.call(arguments))}function mt(){return ut.fromArray(arguments)}function gt(){return lt.fromArray(arguments)}function vt(e){return H(e)?e.determinant():e}function dt(e){var t;return H(e)?t=[new nt(e.cols()),new nt(e.rows())]:z(e)||X(e)?t=new nt(e.elements.length):C("size expects a matrix or a vector"),t}function wt(e,t){if(z(e)&&z(t))return e.dot(t);C("function dot expects 2 vectors")}function yt(e,t){if(z(e)&&z(t))return e.cross(t);C("function cross expects 2 vectors")}function bt(e){if(H(e))return e.transpose();C("function transpose expects a matrix")}function Mt(e){if(H(e))return e.invert();C("invert expects a matrix")}function St(e,t){return e.union(t)}function Nt(e,t){return e.intersection(t)}function Et(e,t){return e.contains(t)}function xt(e,t){return e.difference(t)}function qt(e,t){return new nt(Number(e.intersects(t)))}function At(e,t){return new nt(Number(e.is_subset(t)))}function Ct(){Oe(arguments).map((function(e){console.log(e.toString())}))}function Ot(e){if(!D(e.power)&&e.power.absEquals(.5)){var t=e.power.sign(),r=se(e.group===f?new nt(e.value):e.toLinear());return t<0&&r.invert(),r}return e}function Ut(e){if(e.group===f){var t=e.value,r=Ke(t)[0];if(!r)return L("Unable to compute prime factors. This should not happen. Please review and report."),e;var n=new rt(Math.log(t)/Math.log(r)),i=n.multiply(e.power);if(i.den>e.power.den)return e;e=W(i)?nt(Math.pow(r,i)):new nt(r).setPower(i)}return e}this.toTeX=function(t,r){r=r||{};var n="string"===typeof t?this.toObject(t):t,i=[],s="undefined"===typeof r.cdot?"\\cdot":r.cdot;if(Y(n)){for(var o,a,u=[],c=0;c<n.length;c++)o=n[c],"^"===n[c+1]?(a=n[c+2],u.push(ot.braces(this.toTeX([o]))+"^"+ot.braces(this.toTeX([a]))),c+=2):u.push(o);n=u}c=0;for(var f=n.length;c<f;c++){var p=n[c];if("*"===p&&(p=s),D(p))if(p.group===m){var h,g=p.fname;if(g===b)h="\\sqrt"+ot.braces(this.toTeX(p.args));else if(g===M)h=ot.brackets(this.toTeX(p.args),"abs");else if(g===y)h=ot.brackets(this.toTeX(p.args),"parens");else if(g===l.LOG10)h="\\"+l.LOG10_LATEX+"\\left( "+this.toTeX(p.args)+"\\right)";else if("integrate"===g){var v=k(p.args),d=ot.braces(this.toTeX(v[0])),w=this.toTeX(v[1]);h="\\int "+d+"\\, d"+w}else if("defint"===g){v=k(p.args),d=ot.braces(this.toTeX(v[0])),w=this.toTeX(v[3]);var E=this.toTeX(v[1]),x=this.toTeX(v[2]);h="\\int\\limits_{"+E+"}^{"+x+"} "+d+"\\, d"+w}else if("diff"===g){v=k(p.args),w="",d=ot.braces(this.toTeX(v[0]));if(1===v.length){var q=[];for(C=0;C<v[0].length;C++)3===v[0][C].group&&q.push(v[0][C].value);q.sort(),w=q.length>0?"\\frac{d}{d "+q[0]+"}":"\\frac{d}{d x}"}else w=2===v.length?"\\frac{d}{d "+v[1]+"}":"\\frac{d^{"+v[2]+"}}{d "+this.toTeX(v[1])+"^{"+v[2]+"}}";h=w+"\\left("+d+"\\right)"}else if("sum"===g||"product"===g){var A=[[],[],[],[]],C=0;for(c=0;c<p.args.length;c++)","!==p.args[c]?A[C].push(p.args[c]):C++;h=("sum"===g?"\\sum_":"\\prod_")+ot.braces(this.toTeX(A[1])+" = "+this.toTeX(A[2])),h+="^"+ot.braces(this.toTeX(A[3]))+ot.braces(this.toTeX(A[0]))}else if("limit"===g){var O=k(p.args).map((function(t){return Array.isArray(t)?e.toTeX(t.join("")):e.toTeX(String(t))}));h="\\lim_"+ot.braces(O[1]+"\\to "+O[2])+" "+ot.braces(O[0])}else h=g===S||g===N?this.toTeX(p.args)+(g===S?"!":"!!"):ot.latex(p);i.push(h)}else i.push(ot.latex(p));else Y(p)?i.push(ot.brackets(this.toTeX(p))):"/"===p?i.push(ot.frac(F(i.pop()),F(this.toTeX([n[++c]])))):i.push(p)}return i.join(" ")},this.expand=ze,this.clean=Be,this.sqrt=se,this.log=Ue,this.nthroot=ue,this.arg=me,this.conjugate=he,this.imagpart=pe,this.realpart=fe,this.addPreprocessor=function(e,t,n,i){var s=r.names,o=r.actions;if("function"!==typeof t)throw new PreprocessorError("Incorrect parameters. Function expected!");n?i?(s.splice(n,0,e),o.splice(n,0,t)):(s[n]=e,o[n]=t):(s.push(e),o.push(t))},this.getPreprocessors=function(){for(var e={},t=0,r=e.names.length;t<r;t++){var n=e.names[t];e[n]={order:t,action:e.actions[t]}}return e},this.removePreprocessor=function(e,t){var n=r.names.indexOf(e);t?(qe(r.names,n),qe(r.actions,n)):(r.names[n]=void 0,r.actions[n]=void 0)},this.mapped_function=function(){for(var t={},r=this.params,n=0;n<r.length;n++)t[r[n]]=arguments[n];return e.parse(this.body,t)},this.add=function(t,r){var n=D(t),i=D(r);if(n&&i){if(t.unit||r.unit)return e.Unit.add(t,r);if(t.isInfinity||r.isInfinity){var s=t.multiplier.lessThan(0),o=r.multiplier.lessThan(0);if(t.isInfinity&&r.isInfinity&&s!==o)throw new Fe("("+t+")+("+r+") is not defined!");var a=nt.infinity();return o&&a.negate(),a}if(t.isComposite()&&t.isLinear()&&r.isComposite()&&r.isLinear()&&(t.distributeMultiplier(),r.distributeMultiplier()),t.multiplier.equals(0))return r;if(r.multiplier.equals(0))return t;if(t.isConstant()&&r.isConstant()&&l.PARSE2NUMBER){var u=new nt(t.multiplier.add(r.multiplier).toDecimal(l.PRECISION));return u}var w=t.group,y=r.group,M=t.power.toString(),S=r.power.toString();if(w<y||w===y&&M>S&&S>0)return this.add(r,t);if(w===v&&y===g&&t.value===r.value){var N=t;t=r,r=N,w=t.group,y=r.group,M=t.power.toString(),S=r.power.toString()}var E,x,q=M===S,A=t.value,O=r.value,U=t.isComposite(),R=r.isComposite();if(U&&(E=Je(t,"hash")),R&&(x=Je(r,"hash")),w===d&&y===d&&r.isLinear()&&!t.isLinear()&&E!==x)return this.add(r,t);w===g&&y===g&&(A=E,O=x);var L=w===f&&y===c,I=t.value===r.multiplier.toString(),T=A===O||E===x&&void 0!==E||L&&I;if(T&&q&&w===y)if(L&&(r=r.convert(f)),w!==g||y!==p&&y!==f)if(u=t,t.multiplier.isOne()&&r.multiplier.isOne()&&w===d&&t.isLinear()&&r.isLinear())for(var P in r.symbols){var _=r.symbols[P];u.attach(_)}else u.multiplier=u.multiplier.add(r.multiplier);else t.distributeMultiplier(),u=t.attach(r);else if(T&&w!==g)w===d&&y===g?(r.insert(t),u=r):(u=nt.shell(g).attach([t,r]),u.value=w===g?E:A);else if(U&&t.isLinear()){var k=w===y,F=w===g&&y===g;if(F&&(k=t.value===r.value),t.distributeMultiplier(),r.isComposite()&&r.isLinear()&&k){for(var P in r.distributeMultiplier(),r.symbols){_=r.symbols[P];t.attach(_)}u=t}else F&&t.value!==x||w===g&&!T?(u=nt.shell(d).attach([t,r]),u.updateHash()):u=t.attach(r)}else{if(w===m&&t.fname===b&&y!==h&&r.power.equals(.5)){var B=r.multiplier.clone();r=se(r.toUnitMultiplier().toLinear()),r.multiplier=B}2===t.length&&2===r.length&&Me(t.power)&&Me(r.power)?u=e.add(ze(t),ze(r)):(u=nt.shell(d).attach([t,r]),u.updateHash())}if(u.multiplier.equals(0)&&(u=new nt(0)),1===u.length){B=u.multiplier;u=ae(u.symbols),u.multiplier=u.multiplier.multiply(B)}return u}if(i&&!n){N=t;t=r,r=N,N=i,i=n,n=N}var G=H(r);if(n&&G)r.eachElement((function(r){return e.add(t.clone(),r)}));else if(H(t)&&G)r=t.add(r);else if(n&&z(r))r.each((function(n,i){i--,r.elements[i]=e.add(t.clone(),r.elements[i])}));else if(z(t)&&z(r))r.each((function(n,i){i--,r.elements[i]=e.add(t.elements[i],r.elements[i])}));else{if(z(t)&&H(r))return e.add(r,t);if(H(t)&&z(r)){if(r.elements.length===t.rows()){var j=new ut,V=t.cols();return r.each((function(r,n){for(var i=[],s=0;s<V;s++)i.push(e.add(t.elements[n-1][s].clone(),r.clone()));j.elements.push(i)})),j}C("Dimensions must match!")}}return r},this.subtract=function(t,r){var n=n=D(t),i=D(r);if(n&&i)return t.unit||r.unit?e.Unit.subtract(t,r):this.add(t,r.negate());if(i&&z(t))r=t.map((function(t){return e.subtract(t,r.clone())}));else if(n&&z(r))r=r.map((function(r){return e.subtract(t.clone(),r)}));else if(z(t)&&z(r))t.dimensions()===r.dimensions()?r=t.subtract(r):e.error("Unable to subtract vectors. Dimensions do not match.");else if(H(t)&&z(r)){if(r.elements.length===t.rows()){var s=new ut,o=t.cols();return r.each((function(r,n){for(var i=[],a=0;a<o;a++)i.push(e.subtract(t.elements[n-1][a].clone(),r.clone()));s.elements.push(i)})),s}C("Dimensions must match!")}else{if(z(t)&&H(r)){s=r.clone().negate();return e.add(s,t)}H(t)&&H(r)&&(r=t.subtract(r))}return r},this.multiply=function(t,r){var n=D(t),i=D(r);if(n&&r instanceof o)return r.elements.push(t),r;if(n&&i){if(r.isUnit){var a=t.clone();return t.unit=r,a}if(t.unit||r.unit)return e.Unit.multiply(t,r);if(t.isInfinity||r.isInfinity){if(t.equals(0)||r.equals(0))throw new Fe(t+"*"+r+" is undefined!");if(r.power.lessThan(0)){if(t.isInfinity)throw new Fe("Infinity/Infinity is not defined!");return new nt(0)}var u=t.multiplier.multiply(r.multiplier).sign(),w=nt.infinity();if(t.isConstant()||r.isConstant()||t.isInfinity&&r.isInfinity)return u<0&&w.negate(),w}if(t.isConstant()&&r.isConstant()&&l.PARSE2NUMBER){var y=new s(t.multiplier.toDecimal()).times(new s(r.multiplier.toDecimal())).toFixed(),M=new nt(y);return M}if(t.isOne())return r.clone();if(r.isOne())return t.clone();if(t.multiplier.equals(0)||r.multiplier.equals(0))return new nt(0);if(r.group>t.group&&r.group!==d)return this.multiply(r,t);if(t.group===v&&r.group===g&&t.value===r.value){y=t;t=r,r=y}var N=t.group,E=r.group,x=r.multiplier.num,q=r.multiplier.den;if(N!==m||t.fname!==b||r.isConstant()||t.args[0].value!==r.value||t.args[0].multiplier.lessThan(0))N===m&&t.fname===b&&t.multiplier.equals(1)&&t.power.equals(-1)&&r.isConstant()&&t.args[0].equals(r)&&(t=e.symfunction(b,[r.clone()]),r=new nt(1));else{var A=t.power;t=t.args[0].clone(),t.setPower(new rt(.5).multiply(A)),N=t.group}var O=t.value,U=r.value,R=(u=new rt(t.sign()),N===f&&E===c&&r.multiplier.equals(t.value)),L=R?new rt(1).multiply(t.multiplier).abs():t.multiplier.multiply(r.multiplier).abs();a=t.clone().toUnitMultiplier();if(r=r.clone().toUnitMultiplier(!0),N===m&&E===m){var I=t.args[0].clone(),T=r.args[0].clone();if(t.fname===b&&r.fname===b&&t.isLinear()&&r.isLinear()){var P=e.divide(I,T).invert();P.gt(1)&&W(P)&&(a=e.multiply(t.args[0].clone(),se(P.clone())),r=new nt(1))}t.fname===S&&r.fname===S&&t.power.equals(1)&&r.power.equals(-1)&&e.subtract(T.clone(),I.clone()).equals(1)&&(a=e.divide(I,T),r=new nt(1))}if(O===U&&N===g&&N===E&&(O=t.text("hash"),U=r.text("hash")),E===h&&r.previousGroup===g&&N===g&&(O=Je(t,"hash",h)),O!==U&&!R||N===g&&(E===p||E===f||E===m)||N===g&&E===v)if(N===v&&t.isLinear())if(E===v&&r.distributeExponent(),E===v&&r.isLinear()){for(var _ in r.symbols){var k=r.symbols[_];a=a.combine(k)}a.multiplier=a.multiplier.multiply(r.multiplier)}else a.combine(r);else if(N!==c){if(N===v)a.distributeExponent(),a.combine(r);else if(!r.isOne()){var F=r.multiplier.clone();r.toUnitMultiplier(),a=nt.shell(v).combine([a,r]),a.multiplier=a.multiplier.multiply(F)}}else a=r.clone().toUnitMultiplier();else{var B=t.power,G=r.power,j=D(B),V=D(G),Z=j||V;if(N===g&&E!==g&&r.previousGroup!==g&&B.equals(1))a=new nt(0),t.each((function(t){a=e.add(a,e.multiply(t,r.clone()))}),!0);else{if(a.power=Z?e.add(D(B)?B:new nt(B),D(G)?G:new nt(G)):N===c?B:B.add(G),a.power.equals(0)&&(a=a.convert(c)),Z&&a.convert(h),t.imaginary&&r.imaginary){var X=Me(a.power%2);X&&(a=new nt(1),L.negate())}a.group!==h&&a.previousGroup&&(a.previousGroup=void 0),a.multiplier=a.multiplier.multiply(r.multiplier)}}if(a.group===f){var $=Math.log(a.value),Q=Math.log(x)/$,Y=Math.log(q)/$,J=L.num/x,K=L.den/q;0!==Q&&W(Q)&&W(J)&&(a.power=a.power.add(new rt(Q)),L.num/=x),0!==Y&&W(Y)&&W(K)&&(a.power=a.power.subtract(new rt(Y)),L.den/=q)}if(1===a.length){y=a.multiplier;a=ae(a.symbols),a.multiplier=a.multiplier.multiply(y)}var ee=a.power.toString();if(Me(ee)&&a.fname===b){u*=a.sign();var te=a.power;a=a.args[0],a=e.multiply(new nt(L),e.pow(a,new nt(te.divide(new rt(2))))),u<0&&a.negate()}else a.multiplier=a.multiplier.multiply(L).multiply(u),a.group===d&&a.isImaginary()&&a.distributeMultiplier();return a.group===f&&W(a.power.toDecimal())&&(a=a.convert(c)),a}i&&!n&&(y=t,t=r,r=y,y=i,i=n,n=y);var re=H(r),ne=H(t);if(n&&re)r.eachElement((function(r){return e.multiply(t.clone(),r)}));else if(ne&&re)r=t.multiply(r);else if(n&&z(r))r.each((function(n,i){i--,r.elements[i]=e.multiply(t.clone(),r.elements[i])}));else if(z(t)&&z(r))r.each((function(n,i){i--,r.elements[i]=e.multiply(t.elements[i],r.elements[i])}));else{if(z(t)&&H(r))return this.multiply(r,t);if(H(t)&&z(r)){if(r.elements.length===t.rows()){var ie=new ut,oe=t.cols();return r.each((function(r,n){for(var i=[],s=0;s<oe;s++)i.push(e.multiply(t.elements[n-1][s].clone(),r.clone()));ie.elements.push(i)})),ie}C("Dimensions must match!")}}return r},this.divide=function(t,r){var n=D(t),i=D(r);if(n&&i){if(t.unit||r.unit)return e.Unit.divide(t,r);var s;if(r.equals(0))throw new _e("Division by zero not allowed!");return t.isConstant()&&r.isConstant()?(s=t.clone(),s.multiplier=s.multiplier.divide(r.multiplier)):(r.invert(),s=e.multiply(t,r)),s}var o=z(t),a=z(r);if(n&&a)r=r.map((function(r){return e.divide(t.clone(),r)}));else if(o&&i)r=t.map((function(t){return e.divide(t,r.clone())}));else if(o&&a)t.dimensions()===r.dimensions()?r=r.map((function(r,n){return e.divide(t.elements[--n],r)})):e.error("Cannot divide vectors. Dimensions do not match!");else{var u=H(t),l=H(r);u&&i?(t.eachElement((function(t){return e.divide(t,r.clone())})),r=t):u&&l?t.rows()===r.rows()&&t.cols()===r.cols()?t.eachElement((function(t,n,i){return e.divide(t,r.elements[n][i])})):e.error("Dimensions do not match!"):u&&a&&(t.cols()===r.dimensions()?(t.eachElement((function(t,n,i){return e.divide(t,r.elements[n].clone())})),r=t):e.error("Unable to divide matrix by vector."))}return r},this.pow=function(t,r){var n=D(t),i=D(r);if(n&&i){if(t.unit||r.unit)return e.Unit.pow(t,r);if(t.isInfinity||r.isInfinity){if(t.isInfinity&&r.isInfinity)throw new Fe("("+t+")^("+r+") is undefined!");if(t.isConstant()&&r.isInfinity){if(t.equals(0)){if(r.lessThan(0))throw new Fe("0^Infinity is undefined!");return new nt(0)}if(t.equals(1))throw new Fe("1^"+r.toString()+" is undefined!");if(r.lessThan(0))return new nt(0);if(!t.lessThan(0))return nt.infinity()}if(t.isInfinity&&r.isConstant()){if(r.equals(0))throw new Fe(t+"^0 is undefined!");return r.lessThan(0)?new nt(0):e.multiply(nt.infinity(),e.pow(new nt(t.sign()),r.clone()))}}var s=t.equals(0),o=r.equals(0);if(s&&o)throw new Fe("0^0 is undefined!");if(s&&r.isConstant()&&r.multiplier.greaterThan(0))return new nt(0);if(o)return new nt(1);var a,u,f,p,g=r.isConstant(),v=t.isConstant(),d=r.isInteger(),S=t.multiplier,N=t.clone();if(v&&g&&t.equals(0)&&r.lessThan(0))throw new Fe("Division by zero is not allowed!");if(l.PARSE2NUMBER&&v&&g&&t.sign()<0&&Se(r))return a=Math.PI*r,P=new nt(Math.cos(a)),_=e.multiply(nt.imaginary(),new nt(Math.sin(a))),e.add(P,_);if(l.PARSE2NUMBER&&t.isImaginary()&&g&&W(r)&&!r.lessThan(0))if(P=t.realpart(),_=t.imagpart(),P.isConstant("all")&&_.isConstant("all"))return ne=new nt(Math.atan2(_,P)*r),T=e.pow(nt.hyp(P,_),r),u=e.multiply(T.clone(),e.trig.cos(ne.clone())),f=e.multiply(T,e.trig.sin(ne)),e.add(u,e.multiply(nt.imaginary(),f));if(N.toUnitMultiplier(),N.group!==m||N.fname!==b||g){var E=S.sign();Se(r)&&E<0&&(N.negate(),N=e.symfunction(y,[N]),N.negate()),N.multiplyPower(r)}else{var x=N.args[0];x.multiplyPower(new nt(.5)),x.multiplier.multiply(N.multiplier),x.multiplyPower(r),N=x}if(v&&g&&l.PARSE2NUMBER)E<0&&(t.negate(),p=r.multiplier.den.equals(2)?new nt(l.IMAGINARY):W(r.multiplier)?Me(r.multiplier)?new nt(1):new nt(-1):Me(r.multiplier.den)?e.pow(e.symfunction(y,[new nt(E)]),r.clone()):new nt(Math.pow(E,r.multiplier.num))),N=new nt(Math.pow(t.multiplier.toDecimal(),r.multiplier.toDecimal())),p&&(N=e.multiply(N,p));else if(d&&!S.equals(1)){var q=r.abs();if(q.gt(l.MAX_EXP))return r.sign()<0?new nt(0):nt.infinity();var A=r.multiplier.toDecimal(),C=Math.sign(A);A=Math.abs(A);var O=new rt(1);O.num=S.num.pow(A),O.den=S.den.pow(A),C<0&&O.invert(),N.multiplier=N.multiplier.multiply(O)}else{E=t.sign();if(r.isConstant()&&t.isConstant()&&!r.multiplier.den.equals(1)&&E<0)if(r.multiplier.den.equals(2)){var U=new nt(l.IMAGINARY);t.negate(),r.lessThan(0)&&(U.negate(),r.negate()),N=e.multiply(e.pow(t,r),U)}else{var R=t.clone();R.multiplier.negate(),N=e.pow(e.symfunction(y,[new nt(E)]),r.clone());var L=e.pow(new nt(R.multiplier.num),r.clone()),I=e.pow(new nt(R.multiplier.den),r.clone()),T=e.divide(L,I);N=e.multiply(N,T)}else if(l.PARSE2NUMBER&&r.isImaginary()){var P,_,k,F,B;R=t.clone().toLinear(),P=r.realpart(),_=r.imagpart(),k=e.pow(R.clone(),P),F=w.cos(e.multiply(_.clone(),Ue(R.clone()))),B=e.multiply(w.sin(e.multiply(_,Ue(R))),nt.imaginary()),N=e.multiply(k,e.add(F,B)),N=e.expand(e.parse(N))}else{var j=t.group===c&&E<0,V=Ot(new nt(j?S.num:Math.abs(S.num)).setPower(r.clone())),Z=Ot(new nt(S.den).setPower(r.clone()).invert());if(t.imaginary)if(d){x=Math.sign(r),A=G(r),J=A%4,N=new nt(Me(J)?-1:l.IMAGINARY),(0===J||x<0&&1===J||x>0&&3===J)&&N.negate()}else{var X=r.multiplier.multiply(rt.quick(1,2)),$=Math.pow(-1,X.num);N=Me(X.den)?new nt(-1).setPower(X,!0):new nt($)}if(E<0&&!j&&N.negate(),g&&t.group!==h){var Q=Me(r.multiplier.den),Y=Me(t.power),J=N.power.toDecimal(),K=Me(J);if(Q&&Y&&!K){if(1===J)N=e.symfunction(M,[N]);else if(W(J))N=e.multiply(e.symfunction(M,[N.clone().toLinear()]),N.clone().setPower(new rt(J-1)));else{A=N.power;N=e.symfunction(M,[N.toLinear()]).setPower(A)}l.POSITIVE_MULTIPLIERS&&N.fname===M&&(N=N.args[0])}}}}if(N=Ot(N),V&&Z&&(N=e.multiply(N,Ut(e.multiply(V,Z)))),N.fname===b){var ee=N.group===h,te=ee?N.power.multiplier.toString():N.power.toString();if(Me(te)){var re=ee?e.divide(N.power,new nt(2)):new nt(N.power.divide(new rt(2)));S=N.multiplier;N=e.pow(N.args[0],re),N.multiplier=N.multiplier.multiply(S)}}else if(!l.IGNORE_E&&N.isE()&&N.group===h&&N.power.contains("pi")&&N.power.contains(l.IMAGINARY)){var ne=r.stripVar(l.IMAGINARY);N=e.add(w.cos(ne),e.multiply(nt.imaginary(),w.sin(ne)))}return N}return z(t)&&i?t=t.map((function(t){return e.pow(t,r.clone())})):H(t)&&i&&t.eachElement((function(t){return e.pow(t,r.clone())})),t},this.comma=function(e,t){return e instanceof o||(e=o.create(e)),e.append(t),e},this.mod=function(e,t){return Z(e,t)},this.slice=function(e,t){return new i(e,t)},this.equals=function(e,t){return e.group===p||e.isLinear()||C("Cannot set equality for "+e.toString()),x[e.value]=t.clone(),t},this.percent=function(t){return e.divide(t,new nt(100))},this.assign=function(t,r){if(t instanceof o&&r instanceof o)return t.elements.map((function(t,n){return e.assign(t,r.elements[n])})),at.fromArray(r.elements);if(t.parent){var n=t.parent;return n.elements[n.getter]=r,delete n.getter,n}if(t.group!==p)throw new Xe("Cannot complete operation. Incorrect LH value for "+t);return x[t.value]=r,r},this.function_assign=function(e,t){var r=e.elements.pop();return le(r,e.elements,t)};var Rt=function(e){return new nt(!0===e?1:0)};this.eq=function(e,t){return Rt(e.equals(t))},this.gt=function(e,t){return Rt(e.gt(t))},this.gte=function(e,t){return Rt(e.gte(t))},this.lt=function(e,t){return Rt(e.lt(t))},this.lte=function(e,t){return Rt(e.lte(t))},this.factorial=function(e){return this.symfunction(S,[e])},this.dfactorial=function(e){return this.symfunction(N,[e])}}l.FUNCTION_MODULES.push(We),xe(We),Math.sign=Math.sign||function(e){return e=+e,0===e||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)},et.getExpression=function(e,t){"last"!==e&&e||(e=E.length),"first"===e&&(e=1);var r=e-1,n=E[r],i=n?new et(n):n;return i},et.prototype={text:function(e,t){var r="undefined"===typeof t;if(t=t||24,e=e||"decimals",this.symbol.text_)return this.symbol.text_(e);if(this.symbol.group===c&&("decimals"===e||"decimal"===e)){var n=this.symbol.multiplier.toDecimal(t);return r&&!W(n)&&(n=de(n,19).toString()),n}return Je(this.symbol,e)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):ot.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){var e,t=arguments[0],n=1;"string"===typeof t?e="%"===t.charAt(0)?et.getExpression(t.substr(1)).text():t:t instanceof et||D(t)?e=t.text():(e=this.symbol.text(),n--);var i=arguments[n]||{};return new et(Ae("PARSE2NUMBER",(function(){return r.parse(e,i)}),!0))},buildFunction:function(e){return ct.build(this.symbol,e)},isNumber:function(){return $(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},variables:function(){return G(this.symbol)},toString:function(){try{return Y(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){l.precision=e;var t=Je(this.symbol,"decimals");return l.precision=void 0,t},isFraction:function(){return F(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new et(this.symbol.sub(r.parse(e),r.parse(t)))},operation:function(e,t){return B(t)?t=t.symbol:D(t)||(t=r.parse(t)),new et(r[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new et(r.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(Y(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){D(e)||(e=r.parse(e));try{var t=r.subtract(this.symbol.clone(),e);return t.equals(0)}catch(n){return!1}},lt:function(e){D(e)||(e=r.parse(e));try{var t=Re(r.subtract(this.symbol.clone(),e));return t.lessThan(0)}catch(n){return!1}},gt:function(e){D(e)||(e=r.parse(e));try{var t=Re(r.subtract(this.symbol.clone(),e));return t.greaterThan(0)}catch(n){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new et(this.symbol.getNum())},denominator:function(){return new et(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}},et.prototype.toTeX=et.prototype.latex,tt.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),r=t[0]||"",n=t[1]||"";r=tt.removeLeadingZeroes(r),n=tt.removeTrailingZeroes(n);var i=r.length,s=r+n,o=tt.leadingZeroes(s).length;this.exponent=i-(o+1);var a=tt.removeLeadingZeroes(s);return this.coeff=a.charAt(0)+"."+(a.substr(1,a.length)||"0"),this},round:function(e){var t=this.copy();if(e=Number(e),0===e)t.coeff=t.coeff.charAt(0);else{var r=this.coeff.substring(0,e+1),n=this.coeff.substring(e+1,e+3),i=n.charAt(0);n.charAt(1)>4&&i++,t.coeff=r+i}return t},copy:function(){var e=new tt(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t="undefined"===typeof e?this.coeff:tt.round(this.coeff,e);return(-1===this.sign?"-":"")+t+"e"+this.exponent}},tt.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},tt.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},tt.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},tt.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},tt.round=function(e,t){var r=de(e,t),n=String(r).split(".").pop(),i=t-n.length;return i>0&&(r+=new Array(i+1).join(0)),r},tt.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),r=t[0]||"",n=t[1]||"";r=tt.removeLeadingZeroes(r),n=tt.removeTrailingZeroes(n);var i=r.length,s=r+n,o=tt.leadingZeroes(s).length;this.exponent=i-(o+1);var a=tt.removeLeadingZeroes(s);return this.coeff=a.charAt(0)+"."+(a.substr(1,a.length)||"0"),this},round:function(e){var t=this.copy();if(e=Number(e),0===e)t.coeff=t.coeff.charAt(0);else{var r=this.coeff.substring(0,e+1),n=this.coeff.substring(e+1,e+3),i=n.charAt(0);n.charAt(1)>4&&i++,t.coeff=r+i}return t},copy:function(){var e=new tt(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t="undefined"===typeof e?this.coeff:tt.round(this.coeff,e);return(-1===this.sign?"-":"")+t+"e"+this.exponent}},tt.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},tt.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},tt.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},tt.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},rt.create=function(e){if(e instanceof rt)return e;e=e.toString();var t="-"===e.charAt(0);t&&(e=e.substr(1,e.length-1));var r=new rt(e);return t&&r.negate(),r},rt.isFrac=function(e){return e instanceof rt},rt.quick=function(e,t){var r=new rt;return r.num=new n(e),r.den=new n(t),r},rt.simple=function(e){for(var t=String(T(e)),r=t.split("."),n=r.join(""),i=1,s=(r[1]||"").length,o=0;o<s;o++)i+="0";var a=rt.quick(n,i);return a.simplify()},rt.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new _e("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,r=e.den,n=this.clone(),i=n.num,s=e.num;return t.equals(r)?n.num=i.add(s):(n.num=i.multiply(r).add(s.multiply(t)),n.den=t.multiply(r)),n.simplify()},mod:function(e){var t=this.clone(),r=e.clone();return t.num=t.num.multiply(r.den),t.den=t.den.multiply(r.den),r.num=r.num.multiply(this.den),r.den=r.den.multiply(this.den),t.num=t.num.mod(r.num),t.simplify()},simplify:function(){var e=n.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new rt;return e.num=new n(this.num),e.den=new n(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||l.PRECISION,e++;for(var r=[],n=this.num.abs(),i=this.den,s=0;s<e;s++){var o=n.divide(i),a=n.subtract(o.multiply(i));if(r.push(o),a.equals(0))break;n=a.times(10)}var u=r.shift();if(0===r.length)return t+u.toString();if(s===e){var c=[];for(s=0;s<2;s++)c.unshift(r.pop());r.push(Math.round(c.join(".")))}var f=u.toString()+"."+r.join("");return t+f},toDecimal:function(e){return e||l.PRECISION?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new rt(e));var t=this.qcompare(e);return t[0].equals(t[1])},absEquals:function(e){isNaN(e)||(e=new rt(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])},greaterThan:function(e){isNaN(e)||(e=new rt(e));var t=this.qcompare(e);return t[0].gt(t[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new rt(e));var t=this.qcompare(e);return t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den;if(!this.num.equals(0)){var t=this.num.isNegative();this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return rt.quick(n.gcd(e.num,this.num),n.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return l.USE_BIG?new s(this.num.toString()).div(new s(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},nt.imaginary=function(){var e=new nt(l.IMAGINARY);return e.imaginary=!0,e},nt.infinity=function(e){var t=new nt("Infinity");return-1===e&&t.negate(),t},nt.shell=function(e,t){var r=new nt(t);return r.group=e,r.symbols={},r.length=0,r},nt.unwrapSQRT=function(e,t){var r=e.power;if(e.fname===b&&(e.isLinear()||t)){var n=e.args[0].clone();n.power=n.power.multiply(new rt(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new rt(.5)))}return e},nt.hyp=function(e,t){return e=e||new nt(0),t=t||new nt(0),r.sqrt(r.add(r.pow(e.clone(),new nt(2)),r.pow(t.clone(),new nt(2))))},nt.toPolarFormArray=function(e){var t,n,i,s;return t=e.realpart(),n=e.imagpart(),i=nt.hyp(t,n),s=t.equals(0)?r.parse("pi/2"):r.trig.atan(r.divide(n,t)),[i,s]},nt.unwrapPARENS=function(e){if(""===e.fname){var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?nt.unwrapPARENS(t):t}return e},nt.create=function(e,t){return t=void 0===t?1:t,r.parse("("+e+")^("+t+")")},nt.prototype={isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===v){var e=[],t=this.multiplier.sign();this.each((function(t){var r=t.power;if(D(r)||r.equals(1))return this.clone();e.push(r)}));var n=new rt(fe(e)),i=(t=this.multiplier.sign(),this.multiplier.clone().abs()),s=We.ifactor(i),o=new rt(1),a=new rt(1);for(var u in s){var l=new rt(s[u]);l.lessThan(n)||(l=l.divide(n).subtract(new rt(1)),a=a.multiply(new rt(u))),o=o.multiply(r.parse(ee(u)+"^"+ee(l)).multiplier)}var c=new nt(a);this.each((function(e){e=e.clone(),e.power=e.power.divide(n),c=r.multiply(c,e)}));var f=r.symfunction(y,[c]);return f.power=n,f.multiplier=t<0?o.negate():o,f}return this.clone()},equals:function(e){return D(e)||(e=new nt(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return D(e)||(e=new nt(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return D(e)||(e=new nt(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return D(e)||(e=new nt(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return D(e)||(e=new nt(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,r=this.power;if(!W(r)||r<0)return!1;if(t===c||t===p||this.isConstant(!0))return!0;var n=G(this);if(t===v&&1===n.length){var i=n[0];if(!i)return!0;for(var s in this.symbols){var o=this.symbols[s];if(o.group===m&&!o.args[0].isConstant())return!1;if(!o.contains(i)&&!o.isConstant(!0))return!1}return!0}if(this.isComposite()||t===v&&e){if(!e&&n.length>1)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(e,t){var n;return this.group!==g&&this.group!==p||this.value!==e?this.group===v&&this.isLinear()?(n=new nt(1),this.each((function(t){t.contains(e,!0)||(n=r.multiply(n,t.clone()))})),n.multiplier=n.multiplier.multiply(this.multiplier)):this.group!==d||this.isLinear()?this.group===d&&this.isLinear()?(n=new nt(0),this.each((function(t){if(!t.contains(e)){var i=t.clone();i.multiplier=i.multiplier.multiply(this.multiplier),n=r.add(n,i)}})),n.equals(0)&&(n=new nt(this.multiplier))):n=this.group===h&&this.power.contains(e,!0)?new nt(this.multiplier):this.group===m&&this.contains(e)?new nt(this.multiplier):this.clone():n=new nt(this.multiplier):n=new nt(t?0:this.multiplier),n},toArray:function(e,t){t=t||{arr:[],add:function(e,t){var n=this.arr[t];this.arr[t]=n?r.add(n,e):e}};var n=this.group;if(n===p&&this.contains(e))t.add(new nt(this.multiplier),this.power);else if(n===v){var i=this.stripVar(e),s=r.divide(this.clone(),i.clone()),o=s.isConstant()?0:s.power;t.add(i,o)}else if(n===g&&this.value===e)this.each((function(r,n){t.add(r.stripVar(e),n)}));else if(n===d)this.each((function(r){r.toArray(e,t)}));else{if(this.contains(e))throw new Be("Cannot convert to array! Exiting");t.add(this.clone(),0)}t=t.arr;for(var a=0;a<t.length;a++)t[a]||(t[a]=new nt(0));return t},hasFunc:function(e){var t=this.group===m||this.group===h;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].hasFunc(e))return!0;return!1},sub:function(e,t){e=D(e)?e.clone():r.parse(e),t=D(t)?t.clone():r.parse(t),e.group!==c&&e.group!==f||C("Cannot substitute a number. Must be a variable");var n,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==g&&e.group!==g||this.group===g&&e.group===g))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?n=t:e.power.equals(this.power)&&(n=t,i=!0),e.multiplier.equals(this.multiplier)&&(o=new rt(1)));else if(this.group===v||this.previousGroup===v)n=new nt(1),this.each((function(i){n=r.multiply(n,i.sub(e,t))}));else if(this.isComposite())if(e.isComposite()&&this.isComposite()&&this.isLinear()&&e.isLinear()){var a=function(e,t){for(var r in e.symbols){var n=e.symbols[r];if(n.isComposite()&&a(n,t)||n.equals(t))return!0}return!1};for(var u in e.symbols)if(!a(this,e.symbols[u]))return this.clone();n=r.add(r.subtract(this.clone(),e),t)}else n=new nt(0),this.each((function(i){n=r.add(n,i.sub(e,t))}));else if(this.group===h)n=r.parse(this.value).sub(e,t);else if(this.group===m){for(var l=[],p=0;p<this.args.length;p++){var d=this.args[p];D(d)||(d=r.parse(d)),l.push(d.sub(e,t))}n=r.symfunction(this.fname,l)}if(n){if(!i){var w=this.group===h?this.power.sub(e,t):r.parse(this.power);n=r.pow(n,w)}return n.multiplier=n.multiplier.multiply(o),n}return this.clone()},isMonomial:function(){if(this.group===p)return!0;if(this.group!==v)return!1;for(var e in this.symbols)if(this.symbols[e].group!==p)return!1;return!0},isPi:function(){return this.group===p&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===b},isConstant:function(e,t){if(t&&this.group===v)for(var r in this.symbols)if(this.symbols[r].isConstant(!0))return!0;if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===m){for(var n=0;n<this.args.length;n++)if(!this.args[n].isConstant(e))return!1;return!0}return e?$(this):this.value===w},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new nt(0);if(this.isComposite()){var e=new nt(0);return this.each((function(t){e=r.add(e,t.realpart())})),e}return this.isImaginary()?new nt(0):this.clone()},imagpart:function(){if(this.group===p&&this.isImaginary())return new nt(this.multiplier);if(this.isComposite()){var e=new nt(0);return this.each((function(t){e=r.add(e,t.imagpart())})),e}return this.group===v?this.stripVar(l.IMAGINARY):new nt(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===p)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==v||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"===typeof e&&(e=[e]),this.group===m&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===c&&this.multiplier.equals(1))return this;var t=this.power;if(this.group!==h&&e.group===c){var n=e.multiplier;this.group!==c||n.isInteger()||this.convert(f),this.power=t.equals(1)?n.clone():t.multiply(n),this.group===f&&W(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(c))}else this.group!==h&&(t=new nt(t),this.convert(h)),this.power=r.multiply(t,e);return this},setPower:function(e,t){if(this.group===c&&this.multiplier.equals(1))return this;if(this.group!==h||D(e)){var r=!1;D(e)&&(e.group===c?e=e.multiplier:r=!0);var n=r?h:f;this.power=e,this.group===c&&n&&this.convert(n,t)}else this.group=this.previousGroup,delete this.previousGroup,this.group===c?(this.multiplier=new rt(this.value),this.value=w):this.power=e;return this},isInverse:function(){return this.group===h?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,r=e||new nt(0),n=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=n.length;if(this.symbols)for(var s in r.symbols={},this.symbols)r.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[n[t]]&&(r[n[t]]=this[n[t]]);return r.power=this.power.clone(),r.multiplier=this.multiplier.clone(),this.isConversion&&(r.isConversion=this.isConversion),this.isUnit&&(r.isUnit=this.isUnit),r},toUnitMultiplier:function(e){return this.multiplier.num=new n(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new n(1),this},toLinear:function(){return this.setPower(new rt(1)),this},each:function(e,t){if(this.symbols)for(var r in this.symbols){var n=this.symbols[r];if(n.group===g&&t)for(var i in n.symbols)e.call(r,n.symbols[i],i);else e.call(this,n,r)}else e.call(this,this,this.value)},valueOf:function(){return this.group===c?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Je(this,"decimals")},contains:function(e,t){e=String(e);var r=this.group;if(this.value===e)return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].contains(e,t))return!0;if(r===m||this.previousGroup===m)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(r===h){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==d&&this.group!==g||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),D(this.power)?this.power.negate():this.group===v&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==c&&this.power.negate(),this},distributeMultiplier:function(e){var t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==v&&!this.multiplier.equals(1)){for(var r in this.symbols){var n=this.symbols[r];n.multiplier=n.multiplier.multiply(this.multiplier),n.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var t in this.symbols){var n=this.symbols[t];n.group===h?n.power=r.multiply(n.power,new nt(e)):this.symbols[t].power=this.symbols[t].power.multiply(e)}this.toLinear()}return this},convert:function(e,t){if(e>m){var r=this.clone();this.symbols={},e===v?r.toUnitMultiplier():this.toUnitMultiplier(),this.group===m&&(r.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[r.keyForGroup(e)]=r,this.group=e,this.length=1}else if(e===h)this.group===c&&this.multiplier.equals(1)||(this.group!==h&&(this.previousGroup=this.group),this.group===c?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Je(this,"hash"),this.group=h);else if(e===c){var n=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new nt(this.group===f?n*Math.pow(this.value,this.power):n).clone(this)}else e===f&&this.group===c&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=f);return this},insert:function(e,t){if(D(e)||C("Object "+e+" is not of type Symbol!"),this.symbols){var n=this.group;if(n>m){var i=e.keyForGroup(n),s=i in this.symbols&&this.symbols[i];if("add"===t){var o=i;s?(this.symbols[o]=r.add(s,e),this.symbols[o].multiplier.equals(0)&&(delete this.symbols[o],this.length--,0===this.length&&(this.convert(c),this.multiplier=new rt(0)))):(this.symbols[i]=e,this.length++)}else e.group===f&&W(e.power)&&e.convert(c),e.group!==h?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),s&&(e=r.multiply(qe(this.symbols,i),e),e.isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new nt(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[i]=e,this.length++);0===this.length&&this.convert(c),this.group!==d&&this.group!==v||this.updateHash()}}return this},attach:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==c)if(this.group===m){for(var e="",t=this.args,r=this.fname===y,n=0;n<t.length;n++)e+=(0===n?"":",")+Je(t[n]);var i=r?"":this.fname;this.value=i+(r?e:ee(e))}else this.group!==p&&this.group!==g&&(this.value=Je(this,"hash"))},keyForGroup:function(e){var t,r=this.group;if(r===c)t=this.value;else if(r===p||r===f)t=e===g?this.power.toDecimal():this.value;else if(r===m)t=e===g?this.power.toDecimal():Je(this,"hash");else{if(r===g)return t=e===v?Je(this,"hash"):e===d?this.power.equals(1)?this.value:ee(Je(this,"hash"))+l.POWER_OPERATOR+this.power.toDecimal():e===g?this.power.toString():this.value,t;r===d?(e===d&&(t=Je(this,"hash")),t=e===g?this.power.toDecimal():this.value):r===v?t=e===g?this.power.toDecimal():Je(this,"hash"):r===h&&(t=e===g?Je(this.power):Je(this,"hash"))}return t},collectSymbols:function(e,t,r,n){var i=[];if(this.symbols)for(var s in this.symbols){var o=this.symbols[s];!n||o.group!==g&&o.group!==d?i.push(e?e(o,t):o):i=i.concat(o.collectSymbols())}else i.push(this);return null===r&&(r=void 0),i.sort(r)},latex:function(e){return ot.latex(this,e)},text:function(e){return Je(this,e)},isOne:function(e){var t=e?"absEquals":"equals";return this.group===c?this.multiplier[t](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===d||e===g||t===g||t===d},isCombination:function(){var e=this.group,t=this.previousGroup;return e===v||t===v},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return this.multiplier.greaterThan(e)},getDenom:function(){var e,t;if(t=this.clone(),this.group===v&&this.power.lessThan(0)&&(t=r.expand(t)),t.power.lessThan(0)){var n=r.parse(t.multiplier.den);e=t.toUnitMultiplier(),e.power.negate(),e=r.multiply(n,e)}else if(t.group===v)for(var i in e=r.parse(t.multiplier.den),t.symbols)t.symbols[i].power<0&&(e=r.multiply(e,t.symbols[i].clone().invert()));else e=r.parse(t.multiplier.den);return e},getNum:function(){var e,t;return t=this.clone(),t.group===v&&t.power.lessThan(0)&&(t=r.expand(t)),t.power.greaterThan(0)&&t.group!==v?e=r.multiply(r.parse(t.multiplier.num),t.toUnitMultiplier()):t.group===v?(e=r.parse(t.multiplier.num),t.each((function(t){(t.power>0||t.group===h&&t.power.multiplier>0)&&(e=r.multiply(e,t.clone()))}))):e=r.parse(t.multiplier.num),e},toString:function(){return this.text()}};var st={convert:function(e,t){var r;if(0===e)r=[0,1];else if(e<1e-6||e>1e20){var n=this.quickConversion(Number(e));if(n[1]<=1e20){var i=Math.abs(e),s=e/i;r=this.fullConversion(i.toFixed((n[1]+"").length-1)),r[0]=r[0]*s}else r=n}else r=this.fullConversion(e);return r},quickConversion:function(e){var t=(e.toExponential()+"").split("e"),r=t[0].split(".")[1],n=(r?r.length:0)-parseInt(t[1]);return[Math.round(Math.pow(10,n)*t[0]),Math.pow(10,Math.abs(t[1])+n)]},fullConversion:function(e){var t=!1,r=0,n=1,i=1,s=0,o=0,a=e,u=1e-16;while(!t){o++,o>1e4&&(t=!0);var l=Math.floor(a),c=r+l*i,f=n+l*s,p=a-l;p<u&&(t=!0),a=1/p,r=i,n=s,i=c,s=f,(Math.abs(c/f-e)<u||o>30)&&(t=!0)}return[c,f]}},ot={parser:function(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],t=new it;for(var r in t)-1===e.indexOf(r)&&delete t[r];t.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}});var n=t.getBrackets();return n["{"].maps_to=void 0,t}(),space:"~",dot:" \\cdot ",latex:function(e,t){if(e.clone&&(e=e.clone()),e instanceof r.classes.Collection&&(e=e.elements),Y(e)){for(var n=[],i=0;i<e.length;i++){var s=e[i];D(s)||(s=r.parse(s)),n.push(this.latex(s,t))}return this.brackets(n.join(", "),"square")}if(H(e)){var o="\\begin{pmatrix}\n";for(i=0;i<e.elements.length;i++){for(var a=[],u=e.elements[i],l=0;l<u.length;l++)a.push(this.latex(u[l],t));o+=a.join(" & "),i<e.elements.length-1&&(o+="\\\\\n")}return o+="\\end{pmatrix}",o}if(z(e)){for(o="\\left[",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],t)+" "+(i!==e.elements.length-1?",\\,":"");return o+="\\right]",o}if(X(e)){for(o="\\{",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],t)+" "+(i!==e.elements.length-1?",\\,":"");return o+="\\}",o}e=e.clone();var c,p="decimal"===t||"decimals"===t,h=e.power,m=J(h),g=e.multiplier.lessThan(0);if(e.group===f&&p)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));if(e.multiplier=e.multiplier.abs(),p){var d=String(e.multiplier.toDecimal());c=[d,""]}else c=[e.multiplier.num,e.multiplier.den];var w,y=this.value(e,m,t,g);m&&h.negate(),p?(w=D(h)?ot.latex(h,t):String(h.toDecimal()),"1"===String(w)&&(w="")):w=D(h)?this.latex(h,t):this.formatFrac(h,!0);var b=["",""],M=m?1:0;b[M]=w;var S=(g?"-":"")+this.set(c,y,b,e.group===v);return S.replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,r,n){var i=e.group,s=e.previousGroup,o=["",""],a=t?1:0;if(e.isInfinity)o[a]="\\infty";else if(i===p||i===f||s===p||s===f||s===c){var u=e.value;u.replace&&(u=u.replace(/(.+)_$/,"$1\\_"));var g=String(u).split("_"),w=this.greek[g[0]];w&&(g[0]=w,u=g.join("_"));e=this.symbols[g[0]];e&&(g[0]=e,u=g.join("_")),o[a]=u}else if(i===m||s===m){for(var E=[],x=e.fname,q=0;q<e.args.length;q++){var A,C=e.args[q];A="string"===typeof C?C:this.latex(C,r),E.push(A)}if(x===b)o[a]="\\sqrt"+this.braces(E.join(","));else if(x===M)o[a]=this.brackets(E.join(","),"abs");else if(x===y)o[a]=this.brackets(E.join(","),"parens");else if("limit"===x)o[a]=" \\lim\\limits_{"+E[1]+" \\to "+E[2]+"} "+E[0];else if("integrate"===x)o[a]="\\int"+this.braces(E[0])+this.braces("d"+E[1]);else if("defint"===x)o[a]="\\int\\limits_"+this.braces(E[1])+"^"+this.braces(E[2])+" "+E[0]+" d"+E[3];else if(x===S||x===N){C=e.args[0];C.power.equals(1)&&(C.isComposite()||C.isCombination())&&(E[0]=this.brackets(E[0])),o[a]=E[0]+(x===S?"!":"!!")}else if("floor"===x)o[a]="\\left \\lfloor"+this.braces(E[0])+"\\right \\rfloor";else if("ceil"===x)o[a]="\\left \\lceil"+this.braces(E[0])+"\\right \\rceil";else if(x===l.LOG&&E.length>1)o[a]="\\mathrm"+this.braces(l.LOG)+"_"+this.braces(E[1])+this.brackets(E[0]);else if(x===l.LOG10)o[a]="\\mathrm"+this.braces(l.LOG)+"_"+this.braces(10)+this.brackets(E[0]);else if("sum"===x){var O=E[0],U=E[1],R=E[2],L=E[3];o[a]="\\sum\\limits_{"+this.braces(U)+"="+this.braces(R)+"}^"+this.braces(L)+" "+this.braces(O)}else if("product"===x){O=E[0],U=E[1],R=E[2],L=E[3];o[a]="\\prod\\limits_{"+this.braces(U)+"="+this.braces(R)+"}^"+this.braces(L)+" "+this.braces(O)}else if("nthroot"===x)o[a]="\\sqrt["+E[1]+"]"+this.braces(E[0]);else if("mod"===x)o[a]=E[0]+" \\bmod "+E[1];else if("realpart"===x)o[a]="\\operatorname{Re}"+this.brackets(E[0]);else if("imagpart"===x)o[a]="\\operatorname{Im}"+this.brackets(E[0]);else{var I=""!==x?"\\mathrm"+this.braces(x.replace(/_/g,"\\_")):"";e.isConversion?o[a]=I+this.brackets(E.join(""),"parens"):o[a]=I+this.brackets(E.join(","),"parens")}}else if(e.isComposite()){var T=e.collectSymbols().sort(i===d||s===d?function(e,t){return t.group-e.group}:function(e,t){var r=D(e.power)?-1:e.power,n=D(t.power)?-1:t.power;return n-r}),P=[],_=T.length;for(q=0;q<_;q++)P.push(ot.latex(T[q],r));u=P.join("+");o[a]=e.isLinear()&&e.multiplier.equals(1)&&!n?u:this.brackets(u,"parens")}else if(i===v||s===h||s===v){i===v&&e.distributeExponent();var k=[],F=[],B=[],G=[],j=0,V=0,Z=function(e,t,r){if(r>1&&t.length>0)for(var n=t.length,i=0;i<n;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=ot.brackets(o,"parens"))}return e};e.each((function(t){var n,i=J(t.power);i?(n=ot.latex(t.invert(),r),V++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(n=ot.brackets(n,"parens")),B.push(k.length)),k.push(n)):(n=ot.latex(t,r),j++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(n=ot.brackets(n,"parens")),G.push(F.length)),F.push(n))})),Z(F,G,j),o[0]=F.join(this.dot),Z(k,B,V),o[1]=k.join(this.dot)}return o},set:function(e,t,r,n){var i=function(e){return/^\\left\(.+\\right\)$/.test(e)};if(r&&(r=this.formatP(r)),n){var s=r[0];r[0]=""}t=this.merge(t,r);var o=e[0],a=e[1],u=t[0],l=t[1];u&&1===Number(o)&&(o=""),1===Number(a)&&(a="");var c=this.join(o,u,i(u)?"":this.dot),f=this.join(a,l,i(l)?"":this.dot);if(c&&f){var p=this.frac(c,f);return n&&s&&(p=this.brackets(p)+s),p}return c},merge:function(e,t){for(var r=[],n=0;n<2;n++)r[n]=e[n]+t[n];return r},join:function(e,t,r){return e||t?e&&!t?e:t&&!e?t:e+r+t:""},formatP:function(e){for(var t=0;t<2;t++){var r=e[t];r&&(e[t]="^"+this.braces(r))}return e},formatFrac:function(e,t){var r=e.num.toString(),n=e.den.toString();return t&&"1"===r&&"1"===n?"":"1"===n?r:this.frac(r,n)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){t=t||"parens";var r={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},n=r[t];return"\\left"+n[0]+e+"\\right"+n[1]},filterTokens:function(e){for(var t=[],r=["\\","left","right","big","Big","large","Large"],n=0,i=e.length;n<i;n++){var s=e[n];Y(s)?t.push(ot.filterTokens(s)):-1===r.indexOf(s.value)&&t.push(s)}return t},parse:function(e){var t,r,n="",i=this.filterTokens(e),s={cdot:"*",times:"*",infty:"Infinity"},o=function(){return i[++t]},a=function(){return ot.parse(o())},u=function(e){return e in s?s[e]:e};for(t=0,r=i.length;t<r;t++){var l=i[t];if("frac"===l.value){var c=a(),f=a();n+=c+"/"+f}else if(l.value in ot.symbols)n+=l.value+a();else if("int"===l.value){var p=a();t++;var h=o().value;h=u(h.substring(1,h.length)),n+="integrate"+ee(p+","+h)}else if("mathrm"===l.value){p=i[++t][0].value;n+=p+a()}else if("sum_"===l.value||"prod_"===l.value){var m="sum_"===l.value?"sum":"product",g=o();t++;var v=a();p=a();n+=m+ee([p,u(g[0]),u(g[2]),u(v)].join(","))}else if("lim_"===l.value){g=o();n+="limit"+ee([a(),u(g[0]),u(g[2])].join(","))}else Array.isArray(l)?n+=u(ot.parse(l)):n+=u(l.value.toString())}return ee(n)}};function at(e){z(e)?this.elements=e.items.slice(0):Y(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function ut(){var e,t,r,n,i=arguments,s=i.length,o=[];if(H(i))for(e=0;e<s;e++)o.push(i[e].slice(0));else for(e=0;e<s;e++)t=i[e],z(t)&&(t=t.elements),Y(t)||(t=[t]),n=t.length,r&&r!==n&&C("Unable to create Matrix. Row dimensions do not match!"),o.push(t),r=n;this.elements=o}function lt(e){if(this.elements=[],z(e)||(e=at.fromArray(arguments)),e)for(var t=e.elements,r=0,n=t.length;r<n;r++)this.add(t[r])}at.arrayPrefill=function(e,t){var r=[];t=t||0;for(var n=0;n<e;n++)r[n]=t;return r},at.fromArray=function(e){var t=new at;return t.elements=e,t},at.fromSet=function(e){return at.fromArray(e.elements)},at.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){D(t)||(t=new nt(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return Ae("SAFE",(function(){return r.pow(this.dot(this.clone()),new nt(.5))}),void 0,this)},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;do{if(Math.abs(r.subtract(this.elements[t-1],n[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new at,t=this.elements.length,r=0;r<t;r++)e.elements.push(this.elements[r].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each((function(r,n){t.push(e(r,n))})),new at(t)},each:function(e){var t,r=this.elements.length,n=r;do{t=n-r,e(this.elements[t],t+1)}while(--r)},toUnitVector:function(){return Ae("SAFE",(function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map((function(t){return r.divide(t,e)}))}),void 0,this)},angleFrom:function(e){return Ae("SAFE",(function(){var t=e.elements||e,n=this.elements.length;if(n!==t.length)return null;var i=new nt(0),s=new nt(0),o=new nt(0);this.each((function(e,n){i=r.add(i,r.multiply(e,t[n-1])),s=r.add(s,r.multiply(e,e)),o=r.add(o,r.multiply(t[n-1],t[n-1]))})),s=r.pow(s,new nt(.5)),o=r.pow(o,new nt(.5));var a=r.multiply(s,o);if(0===a.valueOf())return null;var u=r.divide(i,a),l=u.valueOf();return l<-1&&(u=-1),l>1&&(u=1),new nt(Math.acos(u))}),void 0,this)},isParallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:t<=PRECISION},isAntiparallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:Math.abs(t-Math.PI)<=PRECISION},isPerpendicularTo:function(e){var t=this.dot(e);return null===t?null:Math.abs(t)<=PRECISION},add:function(e){return Ae("SAFE",(function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map((function(e,n){return r.add(e,t[n-1])}))}),void 0,this)},subtract:function(e){return Ae("SAFE",(function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map((function(e,n){return r.subtract(e,t[n-1])}))}),void 0,this)},multiply:function(e){return this.map((function(t){return t.clone()*e.clone()}))},x:function(e){return this.multiply(e)},dot:function(e){return Ae("SAFE",(function(){var t=e.elements||e,n=new nt(0),i=this.elements.length;if(i!==t.length)return null;do{n=r.add(n,r.multiply(this.elements[i-1],t[i-1]))}while(--i);return n}),void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var n=this.elements;return Ae("SAFE",(function(){return new at([r.subtract(r.multiply(n[1],t[2]),r.multiply(n[2],t[1])),r.subtract(r.multiply(n[2],t[0]),r.multiply(n[0],t[2])),r.subtract(r.multiply(n[0],t[1]),r.multiply(n[1],t[0]))])}),void 0,this)},max:function(){var e,t=0,r=this.elements.length,n=r;do{e=n-r,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e])}while(--r);return t},magnitude:function(){var e=new nt(0);return this.each((function(t){e=r.add(e,r.pow(t,new nt(2)))})),r.sqrt(e)},indexOf:function(e){var t,r=null,n=this.elements.length,i=n;do{t=i-n,null===r&&this.elements[t].valueOf()===e.valueOf()&&(r=t+1)}while(--n);return r},text:function(e){return Je(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],r=0;r<this.elements.length;r++)t.push(ot.latex.call(ot,this.elements[r],e));return"["+t.join(", ")+"]"}},ut.identity=function(e){for(var t=new ut,r=0;r<e;r++){t.elements.push([]);for(var n=0;n<e;n++)t.set(r,n,new nt(r===n?1:0))}return t},ut.fromArray=function(e){function t(e){return ut.apply(this,e)}return t.prototype=ut.prototype,new t(e)},ut.zeroMatrix=function(e,t){for(var r=new ut,n=0;n<e;n++)r.elements.push(at.arrayPrefill(t,new nt(0)));return r},ut.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var r=new ut;return this.each((function(n,i,s){r.set(i,s,e.call(r,n),t)})),r},set:function(e,t,r,n){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=n?r:D(r)?r:new nt(r)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),r=[];if(e>this.cols()||!e)return r;for(var n=0;n<t;n++)r.push(this.elements[n][e-1]);return r},eachElement:function(e){var t,r,n=this.rows(),i=this.cols();for(t=0;t<n;t++)for(r=0;r<i;r++)e.call(this,this.elements[t][r],t,r)},determinant:function(){if(!this.isSquare())return null;var e,t=this.toRightTriangular(),n=t.elements[0][0],i=t.elements.length-1,s=i;do{e=s-i+1,n=r.multiply(n,t.elements[e][e])}while(--i);return n},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows(),r=e.rows();t!==r&&C("Cannot augment matrix. Rows don't match.");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),r=new ut,n=0;n<e;n++){r.elements[n]=[];for(var i=0;i<t;i++){var s=this.elements[n][i];r.elements[n][i]=D(s)?s.clone():s}}return r},invert:function(){return this.isSquare()||C("Matrix is not square!"),Ae("SAFE",(function(){var e,t,n,i,s,o,a,u=this.elements.length,l=u,c=ut.identity(u),f=this.augment(c).toRightTriangular(),p=f.elements[0].length,h=[];do{e=u-1,s=[],n=p,h[e]=[],o=f.elements[e][e];do{i=p-n,a=r.divide(f.elements[e][i],o.clone()),s.push(a),i>=l&&h[e].push(a)}while(--n);for(f.elements[e]=s,t=0;t<e;t++){s=[],n=p;do{i=p-n,s.push(r.subtract(f.elements[t][i].clone(),r.multiply(f.elements[e][i].clone(),f.elements[t][e].clone())))}while(--n);f.elements[t]=s}}while(--u);return ut.fromArray(h)}),void 0,this)},toRightTriangular:function(){return Ae("SAFE",(function(){var e,t,n,i,s,o=this.clone(),a=this.elements.length,u=a,l=this.elements[0].length;do{if(n=u-a,f=o.elements[n][n],0===f.valueOf())for(var c=n+1;c<u;c++)if(t=o.elements[c][n],t&&0!==t.valueOf()){e=[],i=l;do{s=l-i,e.push(r.add(o.elements[n][s].clone(),o.elements[c][s].clone()))}while(--i);o.elements[n]=e;break}var f=o.elements[n][n];if(0!==f.valueOf())for(c=n+1;c<u;c++){var p=r.divide(o.elements[c][n].clone(),o.elements[n][n].clone());e=[],i=l;do{s=l-i,e.push(s<=n?new nt(0):r.subtract(o.elements[c][s].clone(),r.multiply(o.elements[n][s].clone(),p.clone())))}while(--i);o.elements[c]=e}}while(--a);return o}),void 0,this)},transpose:function(){var e,t,r,n=this.elements.length,i=this.elements[0].length,s=new ut,o=i;do{e=i-o,s.elements[e]=[],t=n;do{r=n-t,s.elements[e][r]=this.elements[r][e].clone()}while(--t)}while(--o);return s},canMultiplyFromLeft:function(e){var t=H(e)?e.elements.length:e.length;return this.elements[0].length===t},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return Ae("SAFE",(function(){var t=e.elements||e;if(!this.canMultiplyFromLeft(t)){if(this.sameSize(e)){for(var n=new ut,i=this.rows(),s=0;s<i;s++){var o=r.multiply(new at(this.elements[s]),new at(e.elements[s]));n.elements[s]=o.elements}return n}return null}var a,u,l,c,f,p=this.elements.length,h=p,m=t[0].length,g=this.elements[0].length,v=[];do{s=h-p,v[s]=[],a=m;do{u=m-a,l=new nt(0),c=g;do{f=g-c,l=r.add(l,r.multiply(this.elements[s][f],t[f][u]))}while(--c);v[s][u]=l}while(--a)}while(--p);return ut.fromArray(v)}),void 0,this)},add:function(e,t){var n=new ut;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=r.add(i.clone(),e.elements[s][o].clone());t&&(a=t.call(n,a,i,e.elements[s][o])),n.set(s,o,a)})),n},subtract:function(e,t){var n=new ut;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=r.subtract(i.clone(),e.elements[s][o].clone());t&&(a=t.call(n,a,i,e.elements[s][o])),n.set(s,o,a)})),n},negate:function(){return this.each((function(e){return e.negate()})),this},toVector:function(){if(1===this.rows()||1===this.cols()){var e=new at;return e.elements=this.elements,e}return this},toString:function(e,t){var r=this.rows(),n=[];e=void 0===e?"\n":e;for(var i=0;i<r;i++)n.push("["+this.elements[i].map((function(e){var r=t?e.multiplier.toDecimal():e.toString();return void 0!==e?r:""})).join(",")+"]");return"matrix"+ee(n.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),r=this.elements;return ie("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var n=[];for(var i in r){for(var s=[],o=0;o<t;o++)s.push(ot.latex.call(ot,r[i][o],e));n.push(s.join(" & "))}return n.join(" \\cr ")}))}},ut.prototype.each=ut.prototype.eachElement,lt.fromArray=function(e){function t(e){return lt.apply(this,e)}return t.prototype=lt.prototype,new t(e)},lt.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var r=this.elements[t];if(e.equals(r))return!0}return!1},each:function(e){for(var t=this.elements,r=new lt,n=0,i=t.length;n<i;n++){var s=t[n];e.call(this,s,r,n)}return r},clone:function(){var e=new lt;return this.each((function(t){e.add(t.clone())})),e},union:function(e){var t=this.clone();return e.each((function(e){t.add(e)})),t},difference:function(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t},remove:function(e){for(var t=0,r=this.elements.length;t<r;t++){var n=this.elements[t];if(n.equals(e))return qe(this.elements,t),!0}return!1},intersection:function(e){var t=new lt,r=this;return e.each((function(e){r.contains(e)&&t.add(e)})),t},intersects:function(e){return this.intersection(e).elements.length>0},is_subset:function(e){for(var t=e.elements,r=0,n=t.length;r<n;r++)if(!this.contains(t[r]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var ct={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":We.gamma},gamma_incomplete:{"Math2.factorial":We.factorial},Li:{"Math2.Ei":We.Ei,"Math2.bigLog":We.bigLog,Frac:rt},Ci:{"Math2.factorial":We.factorial},Ei:{"Math2.factorial":We.factorial},Si:{"Math2.factorial":We.factorial},Shi:{"Math2.factorial":We.factorial},Chi:{isInt:W,nround:de,"Math2.num_integrate":We.num_integrate},factor:{"Math2.ifactor":We.ifactor,Symbol:nt},num_integrate:{"Math2.simpson":We.simpson,nround:de},fib:{even:Me}},reformat:{diff:function(e,t){var r="var f = "+ct.build(e.args[0].toString())+";";return t[1]+="var diff = "+We.diff.toString()+";",t[1]+=r,["diff(f)("+e.args[1].toString()+")",t]}},getProperName:function(e){var t={continued_fraction:"continuedFraction"};return t[e]||e},compileDependencies:function(e,t){var r=ct.dependencies[e],n=t&&t[1]?t[1]:"",i=t&&t[0]?t[0]:{};for(var s in r)if("object"!==typeof r[s]){var o=s.split(".");n+="var "+(o.length>1?o[1]:o[0])+"="+r[s]+";",i[s]=o.pop()}return[i,n]},getArgsDeps:function(e,t){for(var r=e.args,n=0;n<r.length;n++)e.args[n].each((function(e){e.group===m&&(t=ct.compileDependencies(e.fname,t))}));return t},build:function(e,t){e=Ae("PARSE2NUMBER",(function(){return r.parse(e)}),!0);var n=G(e),i=[],s=[],o=function(e,t){t=t||[];var n,a=[],u=e.group,l="",g=function(r){var n=r===v?"*":"+",i=[];for(var s in e.symbols){var a=e.symbols[s],u=o(a,t)[0];a.isComposite()&&(u=ee(u)),i.push(u)}var l=i.join(n);return l=l&&!e.multiplier.equals(1)?ee(l):l,l},d=function(r){var n;return r in Math?n="Math."+r:(r=ct.getProperName(r),-1===i.indexOf(r)&&(t.push("var "+r+" = "+We[r].toString()+"; "),i.push(r)),n=r),n+=ee(e.args.map((function(e){return o(e,t)[0]})).join(",")),n};if(u===c?a.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?l="-":e.multiplier.equals(1)||a.push(e.multiplier.toDecimal()),u===p||u===f)n=e.value;else if(u===m)if(s=ct.compileDependencies(e.fname,s),s=ct.getArgsDeps(e,s),ct.reformat[e.fname]){var w=ct.reformat[e.fname](e,s);s=w[1],n=w[0]}else n=d(e.fname);else if(u===h){var y=e.previousGroup;y===c||y===p?n=e.value:y===m?(n=d(e.fname),s=ct.compileDependencies(e.fname,s),s=ct.getArgsDeps(e,s)):n=g(e.previousGroup)}else n=g(e.group);if(e.group!==c&&!e.power.equals(1)){var b=o(r.parse(e.power));t.push(b[1]),n="Math.pow"+ee(n+","+b[0])}return n&&a.push(l+n),[a.join("*"),t.join("").replace(/\n+\s+/g," ")]};if(t){for(var a=0;a<n.length;a++){var u=n[a];-1===t.indexOf(u)&&C(u+" not found in argument array")}n=t}var l=o(e);for(var g in s[0]){var d=s[0][g];l[1]=l[1].replace(g,d),s[1]=s[1].replace(g,d)}var w=new Function(n,(s[1]||"")+l[1]+" return "+l[0]+";");return w}};(function(){xe(r.CONSTANTS),xe(r.functions),r.initConstants(),r.error||(r.error=C),l.LOG_FNS={log:r.functions["log"],log10:r.functions["log10"]}})();var ft={allSame:R,allNumeric:k,arguments2Array:Oe,arrayAddSlices:he,arrayClone:pe,arrayMax:ce,arrayMin:fe,arrayUnique:Ne,arraySum:j,block:Ae,build:ct.build,clearU:ye,comboSort:ge,compare:ue,convertToVector:Le,customError:O,customType:re,decompose_fn:ve,each:be,evaluate:Re,even:Me,evenFraction:Se,fillHoles:Z,firstObject:ae,format:ie,generatePrimes:Ie,getCoeffs:Ue,getU:we,importFunctions:Ce,inBrackets:ee,isArray:Y,isExpression:B,isFraction:F,isInt:W,isMatrix:H,isNegative:J,isNumericSymbol:$,isPrime:P,isReserved:U,isSymbol:D,isVariableSymbol:Q,isVector:z,keys:oe,nroots:me,remove:qe,reserveNames:xe,range:se,round:de,sameSign:ne,scientificToDecimal:T,separate:V,stringReplace:te,text:Je,validateName:I,variables:G,warn:L},pt={groups:o,Symbol:nt,Expression:et,Frac:rt,Vector:at,Matrix:ut,Parser:it,Fraction:st,Math2:We,LaTeX:ot,Utils:ft,PARSER:r,PARENTHESIS:y,Settings:l,err:C,bigInt:n,exceptions:Qe},ht=function(e,t,n,s){var o=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(o)return i.setFunction(o[1],o[2].split(","),o[3]);e instanceof et&&(e=e.toString());var a=Y(n),u="expand",c=a?-1!==n.indexOf("numer"):"numer"===n;(a?-1!==n.indexOf(u):n===u)&&(e=ie("{0}({1})",u,e));var f=Ae("PARSE2NUMBER",(function(){return r.parse(e,t)}),c||l.PARSE2NUMBER);return s?E[s-1]=f:E.push(f),new et(f)};return ht.rpn=function(e){return r.tokenize(r.toRPN(e))},ht.convertToLaTeX=function(e,t){return r.toTeX(e,t)},ht.convertFromLaTeX=function(e){var t=ot.parse(r.tokenize(e));return new et(r.parse(t))},ht.version=function(e){if(e)try{return pt[e].version}catch(r){return"No module named "+e+" found!"}return t},ht.getWarnings=function(){return A},ht.setConstant=function(e,t){if(I(e),!U(e))if("delete"===t||""===t)delete r.CONSTANTS[e];else{if(isNaN(t))throw new Be("Constant must be a number!");r.CONSTANTS[e]=t}return this},ht.getConstant=function(e){return String(r.constant[e])},ht.setFunction=le,ht.getCore=function(){return pt},ht.getExpression=ht.getEquation=et.getExpression,ht.reserved=function(e){return e?q:q.join(", ")},ht.clear=function(e,t){if("all"===e)E=[];else if("last"===e)E.pop();else if("first"===e)E.shift();else{var r=e?e-1:E.length;!0===t?E[r]=void 0:qe(E,r)}return this},ht.flush=function(){return this.clear("all"),this},ht.expressions=function(e,t,r){for(var n=e?{}:[],i=0;i<E.length;i++){var s=t?ot.latex(E[i],r):Je(E[i],r);e?n[i+1]=s:n.push(s)}return n},ht.register=function(e){var t=this.getCore();if(Y(e))for(var n=0;n<e.length;n++)e&&this.register(e[n]);else if(e&&-1===l.exclude.indexOf(e.name)){if(e.dependencies)for(n=0;n<e.dependencies.length;n++)if(!t[e.dependencies[n]])throw new Error(ie("{0} requires {1} to be loaded!",e.name,e.dependencies[n]));var i=e.parent,s=e.build.call(t);if(i){t[i]||(t[e.parent]={});var o="nerdamer"===i?this:t[i];o[e.name]=s}e.visible&&(r.functions[e.name]=[s,e.numargs])}},ht.validateName=I,ht.validVarName=function(e){try{return I(e),-1===q.indexOf(e)}catch(t){return!1}},ht.supported=function(){return oe(r.functions)},ht.numEquations=ht.numExpressions=function(){return E.length},ht.setVar=function(e,t){return I(e),e in r.CONSTANTS&&C("Cannot set value for constant "+e),"delete"===t||""===t?delete x[e]:x[e]=D(t)?t:r.parse(t),this},ht.getVar=function(e){return x[e]},ht.clearVars=function(){return x={},this},ht.load=function(e){return e.call(this),this},ht.getVars=function(e,t){e=e||"text";var r={};if("object"===e)r=x;else for(var n in x)"latex"===e?r[n]=x[n].latex(t):"text"===e&&(r[n]=x[n].text(t));return r},ht.set=function(e,t){if("object"===typeof e)for(var n in e)ht.set(n,e[n]);var i=["SAFE"];-1!==i.indexOf(e)&&C("Cannot modify setting: "+e),"PRECISION"===e?s.set({precision:t}):"USE_LN"===e&&!0===t?(l.LOG="LN",l.LOG10="log",r.functions["log"]=l.LOG_FNS.log10,r.functions["log"][0]=function(e){return e.isConstant()?new nt(Math.log10(e)):r.symfunction(l.LOG10,[e])},r.functions["LN"]=l.LOG_FNS.log,delete r.functions["log10"]):l[e]=t},ht.get=function(e){return l[e]},ht.api=function(e){var t=function(e){return function(){for(var t=[].slice.call(arguments),n=0;n<t.length;n++)t[n]=r.parse(t[n]);return new et(Ae("PARSE2NUMBER",(function(){return r.callfunction(e,t)})))}};for(var n in r.functions)n in ht&&!e||(ht[n]=t(n))},ht.replaceFunction=function(e,t,n){var i=r.functions[e],s="undefined"===typeof n?i[1]:n;r.functions[e]=[t.call(void 0,i[0],pt),s]},ht.setOperator=function(e,t){r.setOperator(e,t)},ht.getOperator=function(e){return r.getOperator(e)},ht.aliasOperator=function(e,t){r.aliasOperator(e,t)},ht.tree=function(e){return r.tree(r.toRPN(r.tokenize(e)))},ht.htmlTree=function(e,t){var r=this.tree(e);return'<div class="tree">\n    <ul>\n        <li>\n'+r.toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},ht.addPeeker=function(e,t){r.peekers[e]&&r.peekers[e].push(t)},ht.removePeeker=function(e,t){qe(r.peekers[e],t)},ht.parse=function(e){return String(e).split(";").map((function(e){return r.parse(e)}))},ht.api(),ht}({bigInt:function(){var i=function(e){"use strict";var t=1e7,r=7,n=9007199254740992,s=f(n),o=Math.log(n);function a(e,t){return"undefined"===typeof e?a[0]:"undefined"!==typeof t?10===+t?ne(e):Y(e,t):ne(e)}function u(e,t){this.value=e,this.sign=t,this.isSmall=!1}function l(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-n<e&&e<n}function f(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function p(e){h(e);var r=e.length;if(r<4&&I(e,s)<0)switch(r){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){var t=e.length;while(0===e[--t]);e.length=t+1}function m(e){var t=new Array(e),r=-1;while(++r<e)t[r]=0;return t}function g(e){return e>0?Math.floor(e):Math.ceil(e)}function v(e,r){var n,i,s=e.length,o=r.length,a=new Array(s),u=0,l=t;for(i=0;i<o;i++)n=e[i]+r[i]+u,u=n>=l?1:0,a[i]=n-u*l;while(i<s)n=e[i]+u,u=n===l?1:0,a[i++]=n-u*l;return u>0&&a.push(u),a}function d(e,t){return e.length>=t.length?v(e,t):v(t,e)}function w(e,r){var n,i,s=e.length,o=new Array(s),a=t;for(i=0;i<s;i++)n=e[i]-a+r,r=Math.floor(n/a),o[i]=n-r*a,r+=1;while(r>0)o[i++]=r%a,r=Math.floor(r/a);return o}function y(e,r){var n,i,s=e.length,o=r.length,a=new Array(s),u=0,l=t;for(n=0;n<o;n++)i=e[n]-u-r[n],i<0?(i+=l,u=1):u=0,a[n]=i;for(n=o;n<s;n++){if(i=e[n]-u,!(i<0)){a[n++]=i;break}i+=l,a[n]=i}for(;n<s;n++)a[n]=e[n];return h(a),a}function b(e,t,r){var n;return I(e,t)>=0?n=y(e,t):(n=y(t,e),r=!r),n=p(n),"number"===typeof n?(r&&(n=-n),new l(n)):new u(n,r)}function M(e,r,n){var i,s,o=e.length,a=new Array(o),c=-r,f=t;for(i=0;i<o;i++)s=e[i]+c,c=Math.floor(s/f),s%=f,a[i]=s<0?s+f:s;return a=p(a),"number"===typeof a?(n&&(a=-a),new l(a)):new u(a,n)}function S(e,r){var n,i,s,o,a,u=e.length,l=r.length,c=u+l,f=m(c),p=t;for(s=0;s<u;++s){o=e[s];for(var g=0;g<l;++g)a=r[g],n=o*a+f[s+g],i=Math.floor(n/p),f[s+g]=n-i*p,f[s+g+1]+=i}return h(f),f}function N(e,r){var n,i,s=e.length,o=new Array(s),a=t,u=0;for(i=0;i<s;i++)n=e[i]*r+u,u=Math.floor(n/a),o[i]=n-u*a;while(u>0)o[i++]=u%a,u=Math.floor(u/a);return o}function E(e,t){var r=[];while(t-- >0)r.push(0);return r.concat(e)}function x(e,t){var r=Math.max(e.length,t.length);if(r<=30)return S(e,t);r=Math.ceil(r/2);var n=e.slice(r),i=e.slice(0,r),s=t.slice(r),o=t.slice(0,r),a=x(i,o),u=x(n,s),l=x(d(i,n),d(o,s)),c=d(d(a,E(y(y(l,a),u),r)),E(u,2*r));return h(c),c}function q(e,t){return-.012*e-.012*t+15e-6*e*t>0}function A(e,r,n){return new u(e<t?N(r,e):S(r,f(e)),n)}function C(e){var r,n,i,s,o,a=e.length,u=m(a+a),l=t;for(i=0;i<a;i++){s=e[i],n=0-s*s;for(var c=i;c<a;c++)o=e[c],r=s*o*2+u[i+c]+n,n=Math.floor(r/l),u[i+c]=r-n*l;u[i+a]=n}return h(u),u}function O(e,r){var n,i,s,o,a,u,l,c=e.length,f=r.length,h=t,g=m(r.length),v=r[f-1],d=Math.ceil(h/(2*v)),w=N(e,d),y=N(r,d);for(w.length<=c&&w.push(0),y.push(0),v=y[f-1],i=c-f;i>=0;i--){for(n=h-1,w[i+f]!==v&&(n=Math.floor((w[i+f]*h+w[i+f-1])/v)),s=0,o=0,u=y.length,a=0;a<u;a++)s+=n*y[a],l=Math.floor(s/h),o+=w[i+a]-(s-l*h),s=l,o<0?(w[i+a]=o+h,o=-1):(w[i+a]=o,o=0);while(0!==o){for(n-=1,s=0,a=0;a<u;a++)s+=w[i+a]-h+y[a],s<0?(w[i+a]=s+h,s=0):(w[i+a]=s,s=1);o+=s}g[i]=n}return w=R(w,d)[0],[p(g),p(w)]}function U(e,r){var n,i,s,o,a,u=e.length,l=r.length,c=[],f=[],m=t;while(u)if(f.unshift(e[--u]),h(f),I(f,r)<0)c.push(0);else{i=f.length,s=f[i-1]*m+f[i-2],o=r[l-1]*m+r[l-2],i>l&&(s=(s+1)*m),n=Math.ceil(s/o);do{if(a=N(r,n),I(a,f)<=0)break;n--}while(n);c.push(n),f=y(f,a)}return c.reverse(),[p(c),p(f)]}function R(e,r){var n,i,s,o,a=e.length,u=m(a),l=t;for(s=0,n=a-1;n>=0;--n)o=s*l+e[n],i=g(o/r),s=o-i*r,u[n]=0|i;return[u,0|s]}function L(e,r){var n,i,s=ne(r),o=e.value,c=s.value;if(0===c)throw new Error("Cannot divide by zero");if(e.isSmall)return s.isSmall?[new l(g(o/c)),new l(o%c)]:[a[0],e];if(s.isSmall){if(1===c)return[e,a[0]];if(-1==c)return[e.negate(),a[0]];var h=Math.abs(c);if(h<t){n=R(o,h),i=p(n[0]);var m=n[1];return e.sign&&(m=-m),"number"===typeof i?(e.sign!==s.sign&&(i=-i),[new l(i),new l(m)]):[new u(i,e.sign!==s.sign),new l(m)]}c=f(h)}var v=I(o,c);if(-1===v)return[a[0],e];if(0===v)return[a[e.sign===s.sign?1:-1],a[0]];n=o.length+c.length<=200?O(o,c):U(o,c),i=n[0];var d=e.sign!==s.sign,w=n[1],y=e.sign;return"number"===typeof i?(d&&(i=-i),i=new l(i)):i=new u(i,d),"number"===typeof w?(y&&(w=-w),w=new l(w)):w=new u(w,y),[i,w]}function I(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var r=e.length-1;r>=0;r--)if(e[r]!==t[r])return e[r]>t[r]?1:-1;return 0}function T(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function P(e,t){var r,n,s,o=e.prev(),u=o,l=0;while(u.isEven())u=u.divide(2),l++;e:for(n=0;n<t.length;n++)if(!e.lesser(t[n])&&(s=i(t[n]).modPow(u,e),!s.equals(a[1])&&!s.equals(o))){for(r=l-1;0!=r;r--){if(s=s.square().mod(e),s.isUnit())return!1;if(s.equals(o))continue e}return!1}return!0}u.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.add=function(e){var t=ne(e);if(this.sign!==t.sign)return this.subtract(t.negate());var r=this.value,n=t.value;return t.isSmall?new u(w(r,Math.abs(n)),this.sign):new u(d(r,n),this.sign)},u.prototype.plus=u.prototype.add,l.prototype.add=function(e){var t=ne(e),r=this.value;if(r<0!==t.sign)return this.subtract(t.negate());var n=t.value;if(t.isSmall){if(c(r+n))return new l(r+n);n=f(Math.abs(n))}return new u(w(n,Math.abs(r)),r<0)},l.prototype.plus=l.prototype.add,u.prototype.subtract=function(e){var t=ne(e);if(this.sign!==t.sign)return this.add(t.negate());var r=this.value,n=t.value;return t.isSmall?M(r,Math.abs(n),this.sign):b(r,n,this.sign)},u.prototype.minus=u.prototype.subtract,l.prototype.subtract=function(e){var t=ne(e),r=this.value;if(r<0!==t.sign)return this.add(t.negate());var n=t.value;return t.isSmall?new l(r-n):M(n,Math.abs(r),r>=0)},l.prototype.minus=l.prototype.subtract,u.prototype.negate=function(){return new u(this.value,!this.sign)},l.prototype.negate=function(){var e=this.sign,t=new l(-this.value);return t.sign=!e,t},u.prototype.abs=function(){return new u(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},u.prototype.multiply=function(e){var r,n=ne(e),i=this.value,s=n.value,o=this.sign!==n.sign;if(n.isSmall){if(0===s)return a[0];if(1===s)return this;if(-1===s)return this.negate();if(r=Math.abs(s),r<t)return new u(N(i,r),o);s=f(r)}return q(i.length,s.length)?new u(x(i,s),o):new u(S(i,s),o)},u.prototype.times=u.prototype.multiply,l.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new l(e.value*this.value):A(Math.abs(e.value),f(Math.abs(this.value)),this.sign!==e.sign)},u.prototype._multiplyBySmall=function(e){return 0===e.value?a[0]:1===e.value?this:-1===e.value?this.negate():A(Math.abs(e.value),this.value,this.sign!==e.sign)},l.prototype.multiply=function(e){return ne(e)._multiplyBySmall(this)},l.prototype.times=l.prototype.multiply,u.prototype.square=function(){return new u(C(this.value),!1)},l.prototype.square=function(){var e=this.value*this.value;return c(e)?new l(e):new u(C(f(Math.abs(this.value))),!1)},u.prototype.divmod=function(e){var t=L(this,e);return{quotient:t[0],remainder:t[1]}},l.prototype.divmod=u.prototype.divmod,u.prototype.divide=function(e){return L(this,e)[0]},l.prototype.over=l.prototype.divide=u.prototype.over=u.prototype.divide,u.prototype.mod=function(e){return L(this,e)[1]},l.prototype.remainder=l.prototype.mod=u.prototype.remainder=u.prototype.mod,u.prototype.pow=function(e){var t,r,n,i=ne(e),s=this.value,o=i.value;if(0===o)return a[1];if(0===s)return a[0];if(1===s)return a[1];if(-1===s)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(s,o)))return new l(g(t));r=this,n=a[1];while(1){if(!0&o&&(n=n.times(r),--o),0===o)break;o/=2,r=r.square()}return n},l.prototype.pow=u.prototype.pow,u.prototype.modPow=function(e,t){if(e=ne(e),t=ne(t),t.isZero())throw new Error("Cannot take modPow with modulus 0");var r=a[1],n=this.mod(t);while(e.isPositive()){if(n.isZero())return a[0];e.isOdd()&&(r=r.multiply(n).mod(t)),e=e.divide(2),n=n.square().mod(t)}return r},l.prototype.modPow=u.prototype.modPow,u.prototype.compareAbs=function(e){var t=ne(e),r=this.value,n=t.value;return t.isSmall?1:I(r,n)},l.prototype.compareAbs=function(e){var t=ne(e),r=Math.abs(this.value),n=t.value;return t.isSmall?(n=Math.abs(n),r===n?0:r>n?1:-1):-1},u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=ne(e),r=this.value,n=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:I(r,n)*(this.sign?-1:1)},u.prototype.compareTo=u.prototype.compare,l.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=ne(e),r=this.value,n=t.value;return t.isSmall?r==n?0:r>n?1:-1:r<0!==t.sign?r<0?-1:1:r<0?1:-1},l.prototype.compareTo=l.prototype.compare,u.prototype.equals=function(e){return 0===this.compare(e)},l.prototype.eq=l.prototype.equals=u.prototype.eq=u.prototype.equals,u.prototype.notEquals=function(e){return 0!==this.compare(e)},l.prototype.neq=l.prototype.notEquals=u.prototype.neq=u.prototype.notEquals,u.prototype.greater=function(e){return this.compare(e)>0},l.prototype.gt=l.prototype.greater=u.prototype.gt=u.prototype.greater,u.prototype.lesser=function(e){return this.compare(e)<0},l.prototype.lt=l.prototype.lesser=u.prototype.lt=u.prototype.lesser,u.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},l.prototype.geq=l.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals,u.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},l.prototype.leq=l.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals,u.prototype.isEven=function(){return 0===(1&this.value[0])},l.prototype.isEven=function(){return 0===(1&this.value)},u.prototype.isOdd=function(){return 1===(1&this.value[0])},l.prototype.isOdd=function(){return 1===(1&this.value)},u.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return this.value>0},u.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},u.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},u.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},u.prototype.isDivisibleBy=function(e){var t=ne(e),r=t.value;return 0!==r&&(1===r||(2===r?this.isEven():this.mod(t).equals(a[0])))},l.prototype.isDivisibleBy=u.prototype.isDivisibleBy,u.prototype.isPrime=function(t){var r=T(this);if(r!==e)return r;var n=this.abs(),s=n.bitLength();if(s<=64)return P(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var o=Math.log(2)*s,a=Math.ceil(!0===t?2*Math.pow(o,2):o),u=[],l=0;l<a;l++)u.push(i(l+2));return P(n,u)},l.prototype.isPrime=u.prototype.isPrime,u.prototype.isProbablePrime=function(t){var r=T(this);if(r!==e)return r;for(var n=this.abs(),s=t===e?5:t,o=[],a=0;a<s;a++)o.push(i.randBetween(2,n.minus(2)));return P(n,o)},l.prototype.isProbablePrime=u.prototype.isProbablePrime,u.prototype.modInv=function(e){var t,r,n,s=i.zero,o=i.one,a=ne(e),u=this.abs();while(!u.equals(i.zero))t=a.divide(u),r=s,n=a,s=o,a=u,o=r.subtract(t.multiply(o)),u=n.subtract(t.multiply(u));if(!a.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===s.compare(0)&&(s=s.add(e)),this.isNegative()?s.negate():s},l.prototype.modInv=u.prototype.modInv,u.prototype.next=function(){var e=this.value;return this.sign?M(e,1,this.sign):new u(w(e,1),this.sign)},l.prototype.next=function(){var e=this.value;return e+1<n?new l(e+1):new u(s,!1)},u.prototype.prev=function(){var e=this.value;return this.sign?new u(w(e,1),!0):M(e,1,this.sign)},l.prototype.prev=function(){var e=this.value;return e-1>-n?new l(e-1):new u(s,!0)};var _=[1];while(2*_[_.length-1]<=t)_.push(2*_[_.length-1]);var k=_.length,F=_[k-1];function D(e){return("number"===typeof e||"string"===typeof e)&&+Math.abs(e)<=t||e instanceof u&&e.value.length<=1}function B(e,t,r){t=ne(t);var n=e.isNegative(),s=t.isNegative(),o=n?e.not():e,a=s?t.not():t,u=0,l=0,c=null,f=null,p=[];while(!o.isZero()||!a.isZero())c=L(o,F),u=c[1].toJSNumber(),n&&(u=F-1-u),f=L(a,F),l=f[1].toJSNumber(),s&&(l=F-1-l),o=c[0],a=f[0],p.push(r(u,l));for(var h=0!==r(n?1:0,s?1:0)?i(-1):i(0),m=p.length-1;m>=0;m-=1)h=h.multiply(F).add(i(p[m]));return h}u.prototype.shiftLeft=function(e){if(!D(e))throw new Error(String(e)+" is too large for shifting.");if(e=+e,e<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;while(e>=k)t=t.multiply(F),e-=k-1;return t.multiply(_[e])},l.prototype.shiftLeft=u.prototype.shiftLeft,u.prototype.shiftRight=function(e){var t;if(!D(e))throw new Error(String(e)+" is too large for shifting.");if(e=+e,e<0)return this.shiftLeft(-e);var r=this;while(e>=k){if(r.isZero()||r.isNegative()&&r.isUnit())return r;t=L(r,F),r=t[1].isNegative()?t[0].prev():t[0],e-=k-1}return t=L(r,_[e]),t[1].isNegative()?t[0].prev():t[0]},l.prototype.shiftRight=u.prototype.shiftRight,u.prototype.not=function(){return this.negate().prev()},l.prototype.not=u.prototype.not,u.prototype.and=function(e){return B(this,e,(function(e,t){return e&t}))},l.prototype.and=u.prototype.and,u.prototype.or=function(e){return B(this,e,(function(e,t){return e|t}))},l.prototype.or=u.prototype.or,u.prototype.xor=function(e){return B(this,e,(function(e,t){return e^t}))},l.prototype.xor=u.prototype.xor;var G=1<<30,j=(t&-t)*(t&-t)|G;function V(e){var r=e.value,n="number"===typeof r?r|G:r[0]+r[1]*t|j;return n&-n}function Z(e,t){if(t.compareTo(e)<=0){var r=Z(e,t.square(t)),n=r.p,s=r.e,o=n.multiply(t);return o.compareTo(e)<=0?{p:o,e:2*s+1}:{p:n,e:2*s}}return{p:i(1),e:0}}function z(e,t){return e=ne(e),t=ne(t),e.greater(t)?e:t}function H(e,t){return e=ne(e),t=ne(t),e.lesser(t)?e:t}function X(e,t){if(e=ne(e).abs(),t=ne(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;var r,n,i=a[1];while(e.isEven()&&t.isEven())r=Math.min(V(e),V(t)),e=e.divide(r),t=t.divide(r),i=i.multiply(r);while(e.isEven())e=e.divide(V(e));do{while(t.isEven())t=t.divide(V(t));e.greater(t)&&(n=t,t=e,e=n),t=t.subtract(e)}while(!t.isZero());return i.isUnit()?e:e.multiply(i)}function $(e,t){return e=ne(e).abs(),t=ne(t).abs(),e.divide(X(e,t)).multiply(t)}function Q(e,r){e=ne(e),r=ne(r);var n=H(e,r),i=z(e,r),s=i.subtract(n).add(1);if(s.isSmall)return n.add(Math.floor(Math.random()*s));for(var o=s.value.length-1,a=[],c=!0,f=o;f>=0;f--){var h=c?s.value[f]:t,m=g(Math.random()*h);a.unshift(m),m<h&&(c=!1)}return a=p(a),n.add("number"===typeof a?new l(a):new u(a,!1))}u.prototype.bitLength=function(){var e=this;return e.compareTo(i(0))<0&&(e=e.negate().subtract(i(1))),0===e.compareTo(i(0))?i(0):i(Z(e,i(2)).e).add(i(1))},l.prototype.bitLength=u.prototype.bitLength;var Y=function(e,t){for(var r=e.length,n=Math.abs(t),i=0;i<r;i++){var s=e[i].toLowerCase();if("-"!==s&&/[a-z0-9]/.test(s)){if(/[0-9]/.test(s)&&+s>=n){if("1"===s&&1===n)continue;throw new Error(s+" is not a valid digit in base "+t+".")}if(s.charCodeAt(0)-87>=n)throw new Error(s+" is not a valid digit in base "+t+".")}}if(2<=t&&t<=36&&r<=o/Math.log(t)){var a=parseInt(e,t);if(isNaN(a))throw new Error(s+" is not a valid digit in base "+t+".");return new l(parseInt(e,t))}t=ne(t);var u=[],c="-"===e[0];for(i=c?1:0;i<e.length;i++){s=e[i].toLowerCase();var f=s.charCodeAt(0);if(48<=f&&f<=57)u.push(ne(s));else if(97<=f&&f<=122)u.push(ne(s.charCodeAt(0)-87));else{if("<"!==s)throw new Error(s+" is not a valid character");var p=i;do{i++}while(">"!==e[i]);u.push(ne(e.slice(p+1,i)))}}return W(u,t,c)};function W(e,t,r){var n,i=a[0],s=a[1];for(n=e.length-1;n>=0;n--)i=i.add(e[n].times(s)),s=s.times(t);return r?i.negate():i}function J(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function K(e,t){if(t=i(t),t.isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}var n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};var s,o=[],a=e;while(a.isNegative()||a.compareAbs(t)>=0){s=a.divmod(t),a=s.quotient;var u=s.remainder;u.isNegative()&&(u=t.minus(u).abs(),a=a.next()),o.push(u.toJSNumber())}return o.push(a.toJSNumber()),{value:o.reverse(),isNegative:n}}function ee(e,t){var r=K(e,t);return(r.isNegative?"-":"")+r.value.map(J).join("")}function te(e){if(c(+e)){var t=+e;if(t===g(t))return new l(t);throw new Error("Invalid integer: "+e)}var n="-"===e[0];n&&(e=e.slice(1));var i=e.split(/e/i);if(i.length>2)throw new Error("Invalid integer: "+i.join("e"));if(2===i.length){var s=i[1];if("+"===s[0]&&(s=s.slice(1)),s=+s,s!==g(s)||!c(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");var o=i[0],a=o.indexOf(".");if(a>=0&&(s-=o.length-a-1,o=o.slice(0,a)+o.slice(a+1)),s<0)throw new Error("Cannot include negative exponent part for integers");o+=new Array(s+1).join("0"),e=o}var f=/^([0-9][0-9]*)$/.test(e);if(!f)throw new Error("Invalid integer: "+e);var p=[],m=e.length,v=r,d=m-v;while(m>0)p.push(+e.slice(d,m)),d-=v,d<0&&(d=0),m-=v;return h(p),new u(p,n)}function re(e){if(c(e)){if(e!==g(e))throw new Error(e+" is not an integer.");return new l(e)}return te(e.toString())}function ne(e){return"number"===typeof e?re(e):"string"===typeof e?te(e):e}u.prototype.toArray=function(e){return K(this,e)},l.prototype.toArray=function(e){return K(this,e)},u.prototype.toString=function(t){if(t===e&&(t=10),10!==t)return ee(this,t);var r,n=this.value,i=n.length,s=String(n[--i]),o="0000000";while(--i>=0)r=String(n[i]),s+=o.slice(r.length)+r;var a=this.sign?"-":"";return a+s},l.prototype.toString=function(t){return t===e&&(t=10),10!=t?ee(this,t):String(this.value)},u.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},u.prototype.valueOf=function(){return parseInt(this.toString(),10)},u.prototype.toJSNumber=u.prototype.valueOf,l.prototype.valueOf=function(){return this.value},l.prototype.toJSNumber=l.prototype.valueOf;for(var ie=0;ie<1e3;ie++)a[ie]=new l(ie),ie>0&&(a[-ie]=new l(-ie));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=z,a.min=H,a.gcd=X,a.lcm=$,a.isInstance=function(e){return e instanceof u||e instanceof l},a.randBetween=Q,a.fromArray=function(e,t,r){return W(e.map(ne),ne(t||10),r)},a}();return e.hasOwnProperty("exports")&&(e.exports=i),r=[],n=function(){return i}.apply(t,r),void 0===n||(e.exports=n),i}(),bigDec:function(e){"use strict";var t,r,n,i=9e15,s=1e9,o="0123456789abcdef",a="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",u="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",l={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-i,maxE:i,crypto:!1},c=!0,f="[DecimalError] ",p=f+"Invalid argument: ",h=f+"Precision limit exceeded",m=f+"crypto unavailable",g=Math.floor,v=Math.pow,d=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,w=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,y=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,b=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,M=1e7,S=7,N=a.length-1,E=u.length-1,x={name:"[object Decimal]"};function q(e){var t,r,n,i=e.length-1,s="",o=e[0];if(i>0){for(s+=o,t=1;t<i;t++)n=e[t]+"",(r=S-n.length)&&(s+=k(r)),s+=n;o=e[t],(r=S-(n=o+"").length)&&(s+=k(r))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function A(e,t,r){if(e!==~~e||e<t||e>r)throw Error(p+e)}function C(e,t,r,n){var i,s,o,a;for(s=e[0];s>=10;s/=10)--t;return--t<0?(t+=S,i=0):(i=Math.ceil((t+1)/S),t%=S),s=v(10,S-t),a=e[i]%s|0,null==n?t<3?(0==t?a=a/100|0:1==t&&(a=a/10|0),o=r<4&&99999==a||r>3&&49999==a||5e4==a||0==a):o=(r<4&&a+1==s||r>3&&a+1==s/2)&&(e[i+1]/s/100|0)==v(10,t-2)-1||(a==s/2||0==a)&&0==(e[i+1]/s/100|0):t<4?(0==t?a=a/1e3|0:1==t?a=a/100|0:2==t&&(a=a/10|0),o=(n||r<4)&&9999==a||!n&&r>3&&4999==a):o=((n||r<4)&&a+1==s||!n&&r>3&&a+1==s/2)&&(e[i+1]/s/1e3|0)==v(10,t-3)-1,o}function O(e,t,r){for(var n,i,s=[0],a=0,u=e.length;a<u;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=o.indexOf(e.charAt(a++)),n=0;n<s.length;n++)s[n]>r-1&&(void 0===s[n+1]&&(s[n+1]=0),s[n+1]+=s[n]/r|0,s[n]%=r)}return s.reverse()}x.absoluteValue=x.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),R(e)},x.ceil=function(){return R(new this.constructor(this),this.e+1,2)},x.comparedTo=x.cmp=function(e){var t,r,n,i,s=this,o=s.d,a=(e=new s.constructor(e)).d,u=s.s,l=e.s;if(!o||!a)return u&&l?u!==l?u:o===a?0:!o^u<0?1:-1:NaN;if(!o[0]||!a[0])return o[0]?u:a[0]?-l:0;if(u!==l)return u;if(s.e!==e.e)return s.e>e.e^u<0?1:-1;for(t=0,r=(n=o.length)<(i=a.length)?n:i;t<r;++t)if(o[t]!==a[t])return o[t]>a[t]^u<0?1:-1;return n===i?0:n>i^u<0?1:-1},x.cosine=x.cos=function(){var e,t,r=this,i=r.constructor;return r.d?r.d[0]?(e=i.precision,t=i.rounding,i.precision=e+Math.max(r.e,r.sd())+S,i.rounding=1,r=function(e,t){var r,n,i=t.d.length;i<32?(r=Math.ceil(i/3),n=Math.pow(4,-r).toString()):(r=16,n="2.3283064365386962890625e-10"),e.precision+=r,t=H(e,1,t.times(n),new e(1));for(var s=r;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=r,t}(i,X(i,r)),i.precision=e,i.rounding=t,R(2==n||3==n?r.neg():r,e,t,!0)):new i(1):new i(NaN)},x.cubeRoot=x.cbrt=function(){var e,t,r,n,i,s,o,a,u,l,f=this,p=f.constructor;if(!f.isFinite()||f.isZero())return new p(f);for(c=!1,(s=f.s*Math.pow(f.s*f,1/3))&&Math.abs(s)!=1/0?n=new p(s.toString()):(r=q(f.d),(s=((e=f.e)-r.length+1)%3)&&(r+=1==s||-2==s?"0":"00"),s=Math.pow(r,1/3),e=g((e+1)/3)-(e%3==(e<0?-1:2)),(n=new p(r=s==1/0?"5e"+e:(r=s.toExponential()).slice(0,r.indexOf("e")+1)+e)).s=f.s),o=(e=p.precision)+3;;)if(l=(u=(a=n).times(a).times(a)).plus(f),n=U(l.plus(f).times(a),l.plus(u),o+2,1),q(a.d).slice(0,o)===(r=q(n.d)).slice(0,o)){if("9999"!=(r=r.slice(o-3,o+1))&&(i||"4999"!=r)){+r&&(+r.slice(1)||"5"!=r.charAt(0))||(R(n,e+1,1),t=!n.times(n).times(n).eq(f));break}if(!i&&(R(a,e+1,0),a.times(a).times(a).eq(f))){n=a;break}o+=4,i=1}return c=!0,R(n,e,p.rounding,t)},x.decimalPlaces=x.dp=function(){var e,t=this.d,r=NaN;if(t){if(r=((e=t.length-1)-g(this.e/S))*S,e=t[e])for(;e%10==0;e/=10)r--;r<0&&(r=0)}return r},x.dividedBy=x.div=function(e){return U(this,new this.constructor(e))},x.dividedToIntegerBy=x.divToInt=function(e){var t=this.constructor;return R(U(this,new t(e),0,1,1),t.precision,t.rounding)},x.equals=x.eq=function(e){return 0===this.cmp(e)},x.floor=function(){return R(new this.constructor(this),this.e+1,3)},x.greaterThan=x.gt=function(e){return this.cmp(e)>0},x.greaterThanOrEqualTo=x.gte=function(e){var t=this.cmp(e);return 1==t||0===t},x.hyperbolicCosine=x.cosh=function(){var e,t,r,n,i,s=this,o=s.constructor,a=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return a;r=o.precision,n=o.rounding,o.precision=r+Math.max(s.e,s.sd())+4,o.rounding=1,(i=s.d.length)<32?(e=Math.ceil(i/3),t=Math.pow(4,-e).toString()):(e=16,t="2.3283064365386962890625e-10"),s=H(o,1,s.times(t),new o(1),!0);for(var u,l=e,c=new o(8);l--;)u=s.times(s),s=a.minus(u.times(c.minus(u.times(c))));return R(s,o.precision=r,o.rounding=n,!0)},x.hyperbolicSine=x.sinh=function(){var e,t,r,n,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,r=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,(n=i.d.length)<3)i=H(s,2,i,i,!0);else{e=(e=1.4*Math.sqrt(n))>16?16:0|e,i=H(s,2,i=i.times(Math.pow(5,-e)),i,!0);for(var o,a=new s(5),u=new s(16),l=new s(20);e--;)o=i.times(i),i=i.times(a.plus(o.times(u.times(o).plus(l))))}return s.precision=t,s.rounding=r,R(i,t,r,!0)},x.hyperbolicTangent=x.tanh=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+7,n.rounding=1,U(r.sinh(),r.cosh(),n.precision=e,n.rounding=t)):new n(r.s)},x.inverseCosine=x.acos=function(){var e,t=this,r=t.constructor,n=t.abs().cmp(1),i=r.precision,s=r.rounding;return-1!==n?0===n?t.isNeg()?P(r,i,s):new r(0):new r(NaN):t.isZero()?P(r,i+4,s).times(.5):(r.precision=i+6,r.rounding=1,t=t.asin(),e=P(r,i+4,s).times(.5),r.precision=i,r.rounding=s,e.minus(t))},x.inverseHyperbolicCosine=x.acosh=function(){var e,t,r=this,n=r.constructor;return r.lte(1)?new n(r.eq(1)?0:NaN):r.isFinite()?(e=n.precision,t=n.rounding,n.precision=e+Math.max(Math.abs(r.e),r.sd())+4,n.rounding=1,c=!1,r=r.times(r).minus(1).sqrt().plus(r),c=!0,n.precision=e,n.rounding=t,r.ln()):new n(r)},x.inverseHyperbolicSine=x.asinh=function(){var e,t,r=this,n=r.constructor;return!r.isFinite()||r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+2*Math.max(Math.abs(r.e),r.sd())+6,n.rounding=1,c=!1,r=r.times(r).plus(1).sqrt().plus(r),c=!0,n.precision=e,n.rounding=t,r.ln())},x.inverseHyperbolicTangent=x.atanh=function(){var e,t,r,n,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=s.precision,t=s.rounding,n=i.sd(),Math.max(n,e)<2*-i.e-1?R(new s(i),e,t,!0):(s.precision=r=n-i.e,i=U(i.plus(1),new s(1).minus(i),r+e,1),s.precision=e+4,s.rounding=1,i=i.ln(),s.precision=e,s.rounding=t,i.times(.5))):new s(NaN)},x.inverseSine=x.asin=function(){var e,t,r,n,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),r=s.precision,n=s.rounding,-1!==t?0===t?((e=P(s,r+4,n).times(.5)).s=i.s,e):new s(NaN):(s.precision=r+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=r,s.rounding=n,i.times(2)))},x.inverseTangent=x.atan=function(){var e,t,r,n,i,s,o,a,u,l=this,f=l.constructor,p=f.precision,h=f.rounding;if(l.isFinite()){if(l.isZero())return new f(l);if(l.abs().eq(1)&&p+4<=E)return(o=P(f,p+4,h).times(.25)).s=l.s,o}else{if(!l.s)return new f(NaN);if(p+4<=E)return(o=P(f,p+4,h).times(.5)).s=l.s,o}for(f.precision=a=p+10,f.rounding=1,e=r=Math.min(28,a/S+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(c=!1,t=Math.ceil(a/S),n=1,u=l.times(l),o=new f(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(n+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(n+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return r&&(o=o.times(2<<r-1)),c=!0,R(o,f.precision=p,f.rounding=h,!0)},x.isFinite=function(){return!!this.d},x.isInteger=x.isInt=function(){return!!this.d&&g(this.e/S)>this.d.length-2},x.isNaN=function(){return!this.s},x.isNegative=x.isNeg=function(){return this.s<0},x.isPositive=x.isPos=function(){return this.s>0},x.isZero=function(){return!!this.d&&0===this.d[0]},x.lessThan=x.lt=function(e){return this.cmp(e)<0},x.lessThanOrEqualTo=x.lte=function(e){return this.cmp(e)<1},x.logarithm=x.log=function(e){var t,r,n,i,s,o,a,u,l=this.constructor,f=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(r=(e=new l(e)).d,e.s<0||!r||!r[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(r=this.d,this.s<0||!r||!r[0]||this.eq(1))return new l(r&&!r[0]?-1/0:1!=this.s?NaN:r?0:1/0);if(t)if(r.length>1)s=!0;else{for(i=r[0];i%10==0;)i/=10;s=1!==i}if(c=!1,o=j(this,a=f+5),n=t?T(l,a+10):j(e,a),C((u=U(o,n,a,1)).d,i=f,p))do{if(o=j(this,a+=10),n=t?T(l,a+10):j(e,a),u=U(o,n,a,1),!s){+q(u.d).slice(i+1,i+15)+1==1e14&&(u=R(u,f+1,0));break}}while(C(u.d,i+=10,p));return c=!0,R(u,f,p)},x.minus=x.sub=function(e){var t,r,n,i,s,o,a,u,l,f,p,h,m=this,v=m.constructor;if(e=new v(e),!m.d||!e.d)return m.s&&e.s?m.d?e.s=-e.s:e=new v(e.d||m.s!==e.s?m:NaN):e=new v(NaN),e;if(m.s!=e.s)return e.s=-e.s,m.plus(e);if(l=m.d,h=e.d,a=v.precision,u=v.rounding,!l[0]||!h[0]){if(h[0])e.s=-e.s;else{if(!l[0])return new v(3===u?-0:0);e=new v(m)}return c?R(e,a,u):e}if(r=g(e.e/S),f=g(m.e/S),l=l.slice(),s=f-r){for((p=s<0)?(t=l,s=-s,o=h.length):(t=h,r=f,o=l.length),s>(n=Math.max(Math.ceil(a/S),o)+2)&&(s=n,t.length=1),t.reverse(),n=s;n--;)t.push(0);t.reverse()}else{for((p=(n=l.length)<(o=h.length))&&(o=n),n=0;n<o;n++)if(l[n]!=h[n]){p=l[n]<h[n];break}s=0}for(p&&(t=l,l=h,h=t,e.s=-e.s),o=l.length,n=h.length-o;n>0;--n)l[o++]=0;for(n=h.length;n>s;){if(l[--n]<h[n]){for(i=n;i&&0===l[--i];)l[i]=M-1;--l[i],l[n]+=M}l[n]-=h[n]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--r;return l[0]?(e.d=l,e.e=I(l,r),c?R(e,a,u):e):new v(3===u?-0:0)},x.modulo=x.mod=function(e){var t,r=this,n=r.constructor;return e=new n(e),!r.d||!e.s||e.d&&!e.d[0]?new n(NaN):!e.d||r.d&&!r.d[0]?R(new n(r),n.precision,n.rounding):(c=!1,9==n.modulo?(t=U(r,e.abs(),0,3,1)).s*=e.s:t=U(r,e,0,n.modulo,1),t=t.times(e),c=!0,r.minus(t))},x.naturalExponential=x.exp=function(){return G(this)},x.naturalLogarithm=x.ln=function(){return j(this)},x.negated=x.neg=function(){var e=new this.constructor(this);return e.s=-e.s,R(e)},x.plus=x.add=function(e){var t,r,n,i,s,o,a,u,l,f,p=this,h=p.constructor;if(e=new h(e),!p.d||!e.d)return p.s&&e.s?p.d||(e=new h(e.d||p.s===e.s?p:NaN)):e=new h(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(l=p.d,f=e.d,a=h.precision,u=h.rounding,!l[0]||!f[0])return f[0]||(e=new h(p)),c?R(e,a,u):e;if(s=g(p.e/S),n=g(e.e/S),l=l.slice(),i=s-n){for(i<0?(r=l,i=-i,o=f.length):(r=f,n=s,o=l.length),i>(o=(s=Math.ceil(a/S))>o?s+1:o+1)&&(i=o,r.length=1),r.reverse();i--;)r.push(0);r.reverse()}for((o=l.length)-(i=f.length)<0&&(i=o,r=f,f=l,l=r),t=0;i;)t=(l[--i]=l[i]+f[i]+t)/M|0,l[i]%=M;for(t&&(l.unshift(t),++n),o=l.length;0==l[--o];)l.pop();return e.d=l,e.e=I(l,n),c?R(e,a,u):e},x.precision=x.sd=function(e){var t,r=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(p+e);return r.d?(t=_(r.d),e&&r.e+1>t&&(t=r.e+1)):t=NaN,t},x.round=function(){var e=this,t=e.constructor;return R(new t(e),e.e+1,t.rounding)},x.sine=x.sin=function(){var e,t,r=this,i=r.constructor;return r.isFinite()?r.isZero()?new i(r):(e=i.precision,t=i.rounding,i.precision=e+Math.max(r.e,r.sd())+S,i.rounding=1,r=function(e,t){var r,n=t.d.length;if(n<3)return H(e,2,t,t);r=(r=1.4*Math.sqrt(n))>16?16:0|r,t=t.times(Math.pow(5,-r)),t=H(e,2,t,t);for(var i,s=new e(5),o=new e(16),a=new e(20);r--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(i,X(i,r)),i.precision=e,i.rounding=t,R(n>2?r.neg():r,e,t,!0)):new i(NaN)},x.squareRoot=x.sqrt=function(){var e,t,r,n,i,s,o=this,a=o.d,u=o.e,l=o.s,f=o.constructor;if(1!==l||!a||!a[0])return new f(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(c=!1,0==(l=Math.sqrt(+o))||l==1/0?(((t=q(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=g((u+1)/2)-(u<0||u%2),n=new f(t=l==1/0?"1e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new f(l.toString()),r=(u=f.precision)+3;;)if(n=(s=n).plus(U(o,s,r+2,1)).times(.5),q(s.d).slice(0,r)===(t=q(n.d)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(R(n,u+1,1),e=!n.times(n).eq(o));break}if(!i&&(R(s,u+1,0),s.times(s).eq(o))){n=s;break}r+=4,i=1}return c=!0,R(n,u,f.rounding,e)},x.tangent=x.tan=function(){var e,t,r=this,i=r.constructor;return r.isFinite()?r.isZero()?new i(r):(e=i.precision,t=i.rounding,i.precision=e+10,i.rounding=1,(r=r.sin()).s=1,r=U(r,new i(1).minus(r.times(r)).sqrt(),e+10,0),i.precision=e,i.rounding=t,R(2==n||4==n?r.neg():r,e,t,!0)):new i(NaN)},x.times=x.mul=function(e){var t,r,n,i,s,o,a,u,l,f=this,p=f.constructor,h=f.d,m=(e=new p(e)).d;if(e.s*=f.s,!(h&&h[0]&&m&&m[0]))return new p(!e.s||h&&!h[0]&&!m||m&&!m[0]&&!h?NaN:h&&m?0*e.s:e.s/0);for(r=g(f.e/S)+g(e.e/S),(u=h.length)<(l=m.length)&&(s=h,h=m,m=s,o=u,u=l,l=o),s=[],n=o=u+l;n--;)s.push(0);for(n=l;--n>=0;){for(t=0,i=u+n;i>n;)a=s[i]+m[n]*h[i-n-1]+t,s[i--]=a%M|0,t=a/M|0;s[i]=(s[i]+t)%M|0}for(;!s[--o];)s.pop();return t?++r:s.shift(),e.d=s,e.e=I(s,r),c?R(e,p.precision,p.rounding):e},x.toBinary=function(e,t){return $(this,2,e,t)},x.toDecimalPlaces=x.toDP=function(e,t){var r=this,n=r.constructor;return r=new n(r),void 0===e?r:(A(e,0,s),void 0===t?t=n.rounding:A(t,0,8),R(r,e+r.e+1,t))},x.toExponential=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=L(n,!0):(A(e,0,s),void 0===t?t=i.rounding:A(t,0,8),r=L(n=R(new i(n),e+1,t),!0,e+1)),n.isNeg()&&!n.isZero()?"-"+r:r},x.toFixed=function(e,t){var r,n,i=this,o=i.constructor;return void 0===e?r=L(i):(A(e,0,s),void 0===t?t=o.rounding:A(t,0,8),r=L(n=R(new o(i),e+i.e+1,t),!1,e+n.e+1)),i.isNeg()&&!i.isZero()?"-"+r:r},x.toFraction=function(e){var t,r,n,i,s,o,a,u,l,f,h,m,g=this,d=g.d,w=g.constructor;if(!d)return new w(g);if(l=r=new w(1),n=u=new w(0),o=(s=(t=new w(n)).e=_(d)-g.e-1)%S,t.d[0]=v(10,o<0?S+o:o),null==e)e=s>0?t:l;else{if(!(a=new w(e)).isInt()||a.lt(l))throw Error(p+a);e=a.gt(t)?s>0?t:l:a}for(c=!1,a=new w(q(d)),f=w.precision,w.precision=s=d.length*S*2;h=U(a,t,0,1,1),1!=(i=r.plus(h.times(n))).cmp(e);)r=n,n=i,i=l,l=u.plus(h.times(i)),u=i,i=t,t=a.minus(h.times(i)),a=i;return i=U(e.minus(r),n,0,1,1),u=u.plus(i.times(l)),r=r.plus(i.times(n)),u.s=l.s=g.s,m=U(l,n,s,1).minus(g).abs().cmp(U(u,r,s,1).minus(g).abs())<1?[l,n]:[u,r],w.precision=f,c=!0,m},x.toHexadecimal=x.toHex=function(e,t){return $(this,16,e,t)},x.toNearest=function(e,t){var r=this,n=r.constructor;if(r=new n(r),null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:A(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(c=!1,r=U(r,e,0,t,1).times(e),c=!0,R(r)):(e.s=r.s,r=e),r},x.toNumber=function(){return+this},x.toOctal=function(e,t){return $(this,8,e,t)},x.toPower=x.pow=function(e){var t,r,n,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(v(+a,l));if((a=new u(a)).eq(1))return a;if(n=u.precision,s=u.rounding,e.eq(1))return R(a,n,s);if((t=g(e.e/S))>=e.d.length-1&&(r=l<0?-l:l)<=9007199254740991)return i=F(u,a,r,n),e.s<0?new u(1).div(i):R(i,n,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(r=v(+a,l))&&isFinite(r)?new u(r+"").e:g(l*(Math.log("0."+q(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?o/0:0):(c=!1,u.rounding=a.s=1,r=Math.min(12,(t+"").length),(i=G(e.times(j(a,n+r)),n)).d&&C((i=R(i,n+5,1)).d,n,s)&&(t=n+10,+q((i=R(G(e.times(j(a,t+r)),t),t+5,1)).d).slice(n+1,n+15)+1==1e14&&(i=R(i,n+1,0))),i.s=o,c=!0,u.rounding=s,R(i,n,s))},x.toPrecision=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=L(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(A(e,1,s),void 0===t?t=i.rounding:A(t,0,8),r=L(n=R(new i(n),e,t),e<=n.e||n.e<=i.toExpNeg,e)),n.isNeg()&&!n.isZero()?"-"+r:r},x.toSignificantDigits=x.toSD=function(e,t){var r=this.constructor;return void 0===e?(e=r.precision,t=r.rounding):(A(e,1,s),void 0===t?t=r.rounding:A(t,0,8)),R(new r(this),e,t)},x.toString=function(){var e=this,t=e.constructor,r=L(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+r:r},x.truncated=x.trunc=function(){return R(new this.constructor(this),this.e+1,1)},x.valueOf=x.toJSON=function(){var e=this,t=e.constructor,r=L(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+r:r};var U=function(){function e(e,t,r){var n,i=0,s=e.length;for(e=e.slice();s--;)n=e[s]*t+i,e[s]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,s;if(r!=n)s=r>n?1:-1;else for(i=s=0;i<r;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function n(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&e.length>1;)e.shift()}return function(i,s,o,a,u,l){var c,f,p,h,m,v,d,w,y,b,N,E,x,q,A,C,O,U,L,I,T=i.constructor,P=i.s==s.s?1:-1,_=i.d,k=s.d;if(!(_&&_[0]&&k&&k[0]))return new T(i.s&&s.s&&(_?!k||_[0]!=k[0]:k)?_&&0==_[0]||!k?0*P:P/0:NaN);for(l?(m=1,f=i.e-s.e):(l=M,m=S,f=g(i.e/m)-g(s.e/m)),L=k.length,O=_.length,b=(y=new T(P)).d=[],p=0;k[p]==(_[p]||0);p++);if(k[p]>(_[p]||0)&&f--,null==o?(q=o=T.precision,a=T.rounding):q=u?o+(i.e-s.e)+1:o,q<0)b.push(1),v=!0;else{if(q=q/m+2|0,p=0,1==L){for(h=0,k=k[0],q++;(p<O||h)&&q--;p++)A=h*l+(_[p]||0),b[p]=A/k|0,h=A%k|0;v=h||p<O}else{for((h=l/(k[0]+1)|0)>1&&(k=e(k,h,l),_=e(_,h,l),L=k.length,O=_.length),C=L,E=(N=_.slice(0,L)).length;E<L;)N[E++]=0;(I=k.slice()).unshift(0),U=k[0],k[1]>=l/2&&++U;do{h=0,(c=t(k,N,L,E))<0?(x=N[0],L!=E&&(x=x*l+(N[1]||0)),(h=x/U|0)>1?(h>=l&&(h=l-1),1==(c=t(d=e(k,h,l),N,w=d.length,E=N.length))&&(h--,n(d,L<w?I:k,w,l))):(0==h&&(c=h=1),d=k.slice()),(w=d.length)<E&&d.unshift(0),n(N,d,E,l),-1==c&&(c=t(k,N,L,E=N.length))<1&&(h++,n(N,L<E?I:k,E,l)),E=N.length):0===c&&(h++,N=[0]),b[p++]=h,c&&N[0]?N[E++]=_[C]||0:(N=[_[C]],E=1)}while((C++<O||void 0!==N[0])&&q--);v=void 0!==N[0]}b[0]||b.shift()}if(1==m)y.e=f,r=v;else{for(p=1,h=b[0];h>=10;h/=10)p++;y.e=p+f*m-1,R(y,u?o+y.e+1:o,a,v)}return y}}();function R(e,t,r,n){var i,s,o,a,u,l,f,p,h,m=e.constructor;e:if(null!=t){if(!(p=e.d))return e;for(i=1,a=p[0];a>=10;a/=10)i++;if((s=t-i)<0)s+=S,o=t,u=(f=p[h=0])/v(10,i-o-1)%10|0;else if((h=Math.ceil((s+1)/S))>=(a=p.length)){if(!n)break e;for(;a++<=h;)p.push(0);f=u=0,i=1,o=(s%=S)-S+1}else{for(f=a=p[h],i=1;a>=10;a/=10)i++;u=(o=(s%=S)-S+i)<0?0:f/v(10,i-o-1)%10|0}if(n=n||t<0||void 0!==p[h+1]||(o<0?f:f%v(10,i-o-1)),l=r<4?(u||n)&&(0==r||r==(e.s<0?3:2)):u>5||5==u&&(4==r||n||6==r&&(s>0?o>0?f/v(10,i-o):0:p[h-1])%10&1||r==(e.s<0?8:7)),t<1||!p[0])return p.length=0,l?(t-=e.e+1,p[0]=v(10,(S-t%S)%S),e.e=-t||0):p[0]=e.e=0,e;if(0==s?(p.length=h,a=1,h--):(p.length=h+1,a=v(10,S-s),p[h]=o>0?(f/v(10,i-o)%v(10,o)|0)*a:0),l)for(;;){if(0==h){for(s=1,o=p[0];o>=10;o/=10)s++;for(o=p[0]+=a,a=1;o>=10;o/=10)a++;s!=a&&(e.e++,p[0]==M&&(p[0]=1));break}if(p[h]+=a,p[h]!=M)break;p[h--]=0,a=1}for(s=p.length;0===p[--s];)p.pop()}return c&&(e.e>m.maxE?(e.d=null,e.e=NaN):e.e<m.minE&&(e.e=0,e.d=[0])),e}function L(e,t,r){if(!e.isFinite())return V(e);var n,i=e.e,s=q(e.d),o=s.length;return t?(r&&(n=r-o)>0?s=s.charAt(0)+"."+s.slice(1)+k(n):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+k(-i-1)+s,r&&(n=r-o)>0&&(s+=k(n))):i>=o?(s+=k(i+1-o),r&&(n=r-i-1)>0&&(s=s+"."+k(n))):((n=i+1)<o&&(s=s.slice(0,n)+"."+s.slice(n)),r&&(n=r-o)>0&&(i+1===o&&(s+="."),s+=k(n))),s}function I(e,t){var r=e[0];for(t*=S;r>=10;r/=10)t++;return t}function T(e,t,r){if(t>N)throw c=!0,r&&(e.precision=r),Error(h);return R(new e(a),t,1,!0)}function P(e,t,r){if(t>E)throw Error(h);return R(new e(u),t,r,!0)}function _(e){var t=e.length-1,r=t*S+1;if(t=e[t]){for(;t%10==0;t/=10)r--;for(t=e[0];t>=10;t/=10)r++}return r}function k(e){for(var t="";e--;)t+="0";return t}function F(e,t,r,n){var i,s=new e(1),o=Math.ceil(n/S+4);for(c=!1;;){if(r%2&&Q((s=s.times(t)).d,o)&&(i=!0),0===(r=g(r/2))){r=s.d.length-1,i&&0===s.d[r]&&++s.d[r];break}Q((t=t.times(t)).d,o)}return c=!0,s}function D(e){return 1&e.d[e.d.length-1]}function B(e,t,r){for(var n,i=new e(t[0]),s=0;++s<t.length;){if(!(n=new e(t[s])).s){i=n;break}i[r](n)&&(i=n)}return i}function G(e,t){var r,n,i,s,o,a,u,l=0,f=0,p=0,h=e.constructor,m=h.rounding,g=h.precision;if(!e.d||!e.d[0]||e.e>17)return new h(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(c=!1,u=g):u=t,a=new h(.03125);e.e>-2;)e=e.times(a),p+=5;for(u+=n=Math.log(v(2,p))/Math.LN10*2+5|0,r=s=o=new h(1),h.precision=u;;){if(s=R(s.times(e),u,1),r=r.times(++f),q((a=o.plus(U(s,r,u,1))).d).slice(0,u)===q(o.d).slice(0,u)){for(i=p;i--;)o=R(o.times(o),u,1);if(null!=t)return h.precision=g,o;if(!(l<3&&C(o.d,u-n,m,l)))return R(o,h.precision=g,m,c=!0);h.precision=u+=10,r=s=a=new h(1),f=0,l++}o=a}}function j(e,t){var r,n,i,s,o,a,u,l,f,p,h,m=1,g=e,v=g.d,d=g.constructor,w=d.rounding,y=d.precision;if(g.s<0||!v||!v[0]||!g.e&&1==v[0]&&1==v.length)return new d(v&&!v[0]?-1/0:1!=g.s?NaN:v?0:g);if(null==t?(c=!1,f=y):f=t,d.precision=f+=10,n=(r=q(v)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=T(d,f+2,y).times(s+""),g=j(new d(n+"."+r.slice(1)),f-10).plus(l),d.precision=y,null==t?R(g,y,w,c=!0):g;for(;n<7&&1!=n||1==n&&r.charAt(1)>3;)n=(r=q((g=g.times(e)).d)).charAt(0),m++;for(s=g.e,n>1?(g=new d("0."+r),s++):g=new d(n+"."+r.slice(1)),p=g,u=o=g=U(g.minus(1),g.plus(1),f,1),h=R(g.times(g),f,1),i=3;;){if(o=R(o.times(h),f,1),q((l=u.plus(U(o,new d(i),f,1))).d).slice(0,f)===q(u.d).slice(0,f)){if(u=u.times(2),0!==s&&(u=u.plus(T(d,f+2,y).times(s+""))),u=U(u,new d(m),f,1),null!=t)return d.precision=y,u;if(!C(u.d,f-10,w,a))return R(u,d.precision=y,w,c=!0);d.precision=f+=10,l=o=g=U(p.minus(1),p.plus(1),f,1),h=R(g.times(g),f,1),i=a=1}u=l,i+=2}}function V(e){return String(e.s*e.s/0)}function Z(e,t){var r,n,i;for((r=t.indexOf("."))>-1&&(t=t.replace(".","")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),n=0;48===t.charCodeAt(n);n++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(n,i)){if(i-=n,e.e=r=r-n-1,e.d=[],n=(r+1)%S,r<0&&(n+=S),n<i){for(n&&e.d.push(+t.slice(0,n)),i-=S;n<i;)e.d.push(+t.slice(n,n+=S));t=t.slice(n),n=S-t.length}else n-=i;for(;n--;)t+="0";e.d.push(+t),c&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function z(e,r){var n,i,s,o,a,u,l,f,h;if("Infinity"===r||"NaN"===r)return+r||(e.s=NaN),e.e=NaN,e.d=null,e;if(w.test(r))n=16,r=r.toLowerCase();else if(d.test(r))n=2;else{if(!y.test(r))throw Error(p+r);n=8}for((o=r.search(/p/i))>0?(l=+r.slice(o+1),r=r.substring(2,o)):r=r.slice(2),a=(o=r.indexOf("."))>=0,i=e.constructor,a&&(o=(u=(r=r.replace(".","")).length)-o,s=F(i,new i(n),o,2*o)),o=h=(f=O(r,n,M)).length-1;0===f[o];--o)f.pop();return o<0?new i(0*e.s):(e.e=I(f,h),e.d=f,c=!1,a&&(e=U(e,s,4*u)),l&&(e=e.times(Math.abs(l)<54?Math.pow(2,l):t.pow(2,l))),c=!0,e)}function H(e,t,r,n,i){var s,o,a,u,l=e.precision,f=Math.ceil(l/S);for(c=!1,u=r.times(r),a=new e(n);;){if(o=U(a.times(u),new e(t++*t++),l,1),a=i?n.plus(o):n.minus(o),n=U(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(n)).d[f]){for(s=f;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=n,n=o,o=s}return c=!0,o.d.length=f+1,o}function X(e,t){var r,i=t.s<0,s=P(e,e.precision,1),o=s.times(.5);if((t=t.abs()).lte(o))return n=i?4:1,t;if((r=t.divToInt(s)).isZero())n=i?3:2;else{if((t=t.minus(r.times(s))).lte(o))return n=D(r)?i?2:3:i?4:1,t;n=D(r)?i?1:4:i?3:2}return t.minus(s).abs()}function $(e,t,n,i){var a,u,l,c,f,p,h,m,g,v=e.constructor,d=void 0!==n;if(d?(A(n,1,s),void 0===i?i=v.rounding:A(i,0,8)):(n=v.precision,i=v.rounding),e.isFinite()){for(d?(a=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):a=t,(l=(h=L(e)).indexOf("."))>=0&&(h=h.replace(".",""),(g=new v(1)).e=h.length-l,g.d=O(L(g),10,a),g.e=g.d.length),u=f=(m=O(h,10,a)).length;0==m[--f];)m.pop();if(m[0]){if(l<0?u--:((e=new v(e)).d=m,e.e=u,m=(e=U(e,g,n,i,0,a)).d,u=e.e,p=r),l=m[n],c=a/2,p=p||void 0!==m[n+1],p=i<4?(void 0!==l||p)&&(0===i||i===(e.s<0?3:2)):l>c||l===c&&(4===i||p||6===i&&1&m[n-1]||i===(e.s<0?8:7)),m.length=n,p)for(;++m[--n]>a-1;)m[n]=0,n||(++u,m.unshift(1));for(f=m.length;!m[f-1];--f);for(l=0,h="";l<f;l++)h+=o.charAt(m[l]);if(d){if(f>1)if(16==t||8==t){for(l=16==t?4:3,--f;f%l;f++)h+="0";for(f=(m=O(h,a,t)).length;!m[f-1];--f);for(l=1,h="1.";l<f;l++)h+=o.charAt(m[l])}else h=h.charAt(0)+"."+h.slice(1);h=h+(u<0?"p":"p+")+u}else if(u<0){for(;++u;)h="0"+h;h="0."+h}else if(++u>f)for(u-=f;u--;)h+="0";else u<f&&(h=h.slice(0,u)+"."+h.slice(u))}else h=d?"0p+0":"0";h=(16==t?"0x":2==t?"0b":8==t?"0o":"")+h}else h=V(e);return e.s<0?"-"+h:h}function Q(e,t){if(e.length>t)return e.length=t,!0}function Y(e){return new this(e).abs()}function W(e){return new this(e).acos()}function J(e){return new this(e).acosh()}function K(e,t){return new this(e).plus(t)}function ee(e){return new this(e).asin()}function te(e){return new this(e).asinh()}function re(e){return new this(e).atan()}function ne(e){return new this(e).atanh()}function ie(e,t){e=new this(e),t=new this(t);var r,n=this.precision,i=this.rounding,s=n+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(r=t.s<0?P(this,n,i):new this(0)).s=e.s:!e.d||t.isZero()?(r=P(this,s,1).times(.5)).s=e.s:t.s<0?(this.precision=s,this.rounding=1,r=this.atan(U(e,t,s,1)),t=P(this,s,1),this.precision=n,this.rounding=i,r=e.s<0?r.minus(t):r.plus(t)):r=this.atan(U(e,t,s,1)):(r=P(this,s,1).times(t.s>0?.25:.75)).s=e.s:r=new this(NaN),r}function se(e){return new this(e).cbrt()}function oe(e){return R(e=new this(e),e.e+1,2)}function ae(e){if(!e||"object"!=typeof e)throw Error(f+"Object expected");var t,r,n,o=!0===e.defaults,a=["precision",1,s,"rounding",0,8,"toExpNeg",-i,0,"toExpPos",0,i,"maxE",0,i,"minE",-i,0,"modulo",0,9];for(t=0;t<a.length;t+=3)if(r=a[t],o&&(this[r]=l[r]),void 0!==(n=e[r])){if(!(g(n)===n&&n>=a[t+1]&&n<=a[t+2]))throw Error(p+r+": "+n);this[r]=n}if(r="crypto",o&&(this[r]=l[r]),void 0!==(n=e[r])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(p+r+": "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(m);this[r]=!0}else this[r]=!1}return this}function ue(e){return new this(e).cos()}function le(e){return new this(e).cosh()}function ce(e,t){return new this(e).div(t)}function fe(e){return new this(e).exp()}function pe(e){return R(e=new this(e),e.e+1,3)}function he(){var e,t,r=new this(0);for(c=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)r.d&&(r=r.plus(t.times(t)));else{if(t.s)return c=!0,new this(1/0);r=t}return c=!0,r.sqrt()}function me(e){return e instanceof t||e&&"[object Decimal]"===e.name||!1}function ge(e){return new this(e).ln()}function ve(e,t){return new this(e).log(t)}function de(e){return new this(e).log(2)}function we(e){return new this(e).log(10)}function ye(){return B(this,arguments,"lt")}function be(){return B(this,arguments,"gt")}function Me(e,t){return new this(e).mod(t)}function Se(e,t){return new this(e).mul(t)}function Ne(e,t){return new this(e).pow(t)}function Ee(e){var t,r,n,i,o=0,a=new this(1),u=[];if(void 0===e?e=this.precision:A(e,1,s),n=Math.ceil(e/S),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));o<n;)(i=t[o])>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:u[o++]=i%1e7;else{if(!crypto.randomBytes)throw Error(m);for(t=crypto.randomBytes(n*=4);o<n;)(i=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((127&t[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,o):(u.push(i%1e7),o+=4);o=n/4}else for(;o<n;)u[o++]=1e7*Math.random()|0;for(n=u[--o],e%=S,n&&e&&(i=v(10,S-e),u[o]=(n/i|0)*i);0===u[o];o--)u.pop();if(o<0)r=0,u=[0];else{for(r=-1;0===u[0];r-=S)u.shift();for(n=1,i=u[0];i>=10;i/=10)n++;n<S&&(r-=S-n)}return a.e=r,a.d=u,a}function xe(e){return R(e=new this(e),e.e+1,this.rounding)}function qe(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ae(e){return new this(e).sin()}function Ce(e){return new this(e).sinh()}function Oe(e){return new this(e).sqrt()}function Ue(e,t){return new this(e).sub(t)}function Re(e){return new this(e).tan()}function Le(e){return new this(e).tanh()}function Ie(e){return R(e=new this(e),e.e+1,1)}return(t=function e(t){var r,n,i;function s(e){var t,r,n,i=this;if(!(i instanceof s))return new s(e);if(i.constructor=s,e instanceof s)return i.s=e.s,void(c?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"==(n=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,r=e;r>=10;r/=10)t++;return void(c?t>s.maxE?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):Z(i,e.toString())}if("string"!==n)throw Error(p+e);return 45===e.charCodeAt(0)?(e=e.slice(1),i.s=-1):i.s=1,b.test(e)?Z(i,e):z(i,e)}if(s.prototype=x,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=ae,s.clone=e,s.isDecimal=me,s.abs=Y,s.acos=W,s.acosh=J,s.add=K,s.asin=ee,s.asinh=te,s.atan=re,s.atanh=ne,s.atan2=ie,s.cbrt=se,s.ceil=oe,s.cos=ue,s.cosh=le,s.div=ce,s.exp=fe,s.floor=pe,s.hypot=he,s.ln=ge,s.log=ve,s.log10=we,s.log2=de,s.max=ye,s.min=be,s.mod=Me,s.mul=Se,s.pow=Ne,s.random=Ee,s.round=xe,s.sign=qe,s.sin=Ae,s.sinh=Ce,s.sqrt=Oe,s.sub=Ue,s.tan=Re,s.tanh=Le,s.trunc=Ie,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],r=0;r<i.length;)t.hasOwnProperty(n=i[r++])||(t[n]=this[n]);return s.config(t),s}(l)).default=t.Decimal=t,a=new t(a),u=new t(u),t}()});e.exports=i}).call(this,r("62e4")(e))},4016:function(e,t,r){if("undefined"===typeof n){var n=r("15f6");r("aec1")}(function(){"use strict";var e=n.getCore(),t=e.PARSER,r=e.Frac,i=e.Settings,s=e.Utils.isSymbol,o=e.groups.FN,a=e.Symbol,u=e.Utils.text,l=e.Utils.inBrackets,c=e.Utils.isInt,f=e.Utils.format,p=e.Utils.even,h=e.Utils.evaluate,m=e.groups.N,g=e.groups.S,v=(o=e.groups.FN,e.groups.PL),d=e.groups.CP,w=e.groups.CB,y=e.groups.EX,b=e.groups.P,M=i.LOG,S="exp",N="abs",E="sqrt",x="sin",q="cos",A="tan",C="sec",O="csc",U="cot",R="asin",L="acos",I="atan",T="asec",P="acsc",_="acot",k="sinh",F="cosh",D="tanh",B="csch",G="sech",j="coth",V="asech",Z="acsch",z="acoth";function H(e){this.message=e||""}H.prototype=new Error,a.prototype.hasIntegral=function(){return this.containsFunction("integrate")},a.prototype.fnTransform=function(){if(this.group!==o)return this;var e,r=this.args[0],n=new a(this.multiplier),i=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case k:e=t.parse(f("(e^({0})-e^(-({0})))/2",r));break;case F:e=t.parse(f("(e^({0})+e^(-({0})))/2",r));break;case D:e=t.parse(f("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",r));break;case A:e=t.parse(f("sin({0})/cos({0})",r));break;case O:e=t.parse(f("1/sin({0})",r));break;case C:e=t.parse(f("1/cos({0})",r));break;default:e=i}else if(this.power.equals(2))switch(this.fname){case x:e=t.parse(f("1/2-cos(2*({0}))/2",r));break;case q:e=t.parse(f("1/2+cos(2*({0}))/2",r));break;case A:e=t.parse(f("sin({0})^2/cos({0})^2",r));break;case F:e=t.parse(f("1/2+cosh(2*({0}))/2",r));break;case k:e=t.parse(f("-1/2+cosh(2*({0}))/2",r));break;case D:e=t.parse(f("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",r));break;case C:e=t.parse(f("(1-cos(2*({0})))/(1+cos(2*({0})))+1",r));break;default:e=i}else e=this.fname===C?t.parse(f("1/cos({0})^({1})",this.args[0],this.power)):this.fname===O?t.parse(f("1/sin({0})^({1})",this.args[0],this.power)):this.fname===A?this.power.lessThan(0)?t.parse(f("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):t.parse(f("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===x&&this.power.lessThan(0)?t.parse(f("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===q&&this.power.lessThan(0)?t.parse(f("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===x&&this.power.equals(3)?t.parse(f("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===q&&this.power.equals(3)?t.parse(f("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):i;return t.multiply(e,n)},e.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},e.Utils.toCommonDenominator=function(r){if(r.isComposite()&&r.isLinear()){var n=new a(r.multiplier),i=new a(1),s=new a(0);r.each((function(e){i=t.multiply(i,e.getDenom())}),!0),r.each((function(e){var r=e.getNum(),n=e.getDenom(),o=t.multiply(r,t.divide(i.clone(),n));s=t.add(s,o)}));var o=t.multiply(n,e.Algebra.divide(t.expand(s),t.expand(i)));return o}return r},e.Utils.in_inverse_trig=function(e){var t=[R,L,I,P,T,_];return-1!==t.indexOf(e)},e.Utils.in_trig=function(e){var t=[q,x,A,C,O,U];return-1!==t.indexOf(e)},e.Utils.in_htrig=function(e){var t=[k,F,D,Z,V,z];return-1!==t.indexOf(e)};var X=e.Utils.all_functions=function(e){for(var t=0,r=e.length;t<r;t++)if(e[t].group!==o)return!1;return!0},$=e.Utils.cosAsinBtranform=function(e,r){var n,i;return n=e.args[0],i=r.args[0],t.parse(f("(sin(({0})+({1}))-sin(({0})-({1})))/2",n,i))},Q=e.Utils.cosAsinAtranform=function(e,r){return 1!==Number(r.power)?t.multiply(e,r):(n=e.args[0],t.parse(f("(sin(2*({0})))/2",n)));var n},Y=e.Utils.cosAsinBtranform=function(e,r){var n,i;return n=e.args[0],i=r.args[0],t.parse(f("(cos(({0})+({1}))-cos(({0})-({1})))/2",n,i))},W=e.Utils.trigTransform=function(e){for(var r,n,i={},s=new a(1),u=0,l=e.length;u<l;u++)if(r=e[u],r.group===o){var c=r.fname;c===q&&i[x]?(n=i[x].args[0].toString()!==r.args[0].toString()?$(r,i[x]):Q(r,i[x]),delete i[x],s=t.multiply(s,n)):c===x&&i[q]?(n=i[q].args[0].toString()!==r.args[0].toString()?$(r,i[q]):Q(r,i[q]),delete i[q],s=t.multiply(s,n)):c===x&&i[x]?(i[x].args[0].toString()!==r.args[0].toString()?(n=Y(r,i[x]),delete i[x]):(n=t.multiply(r,i[x]),delete i[x]),s=n):i[c]=r}else s=t.multiply(s,r);for(var f in i)s=t.multiply(s,i[f]);return s};e.Settings.integration_depth=10;var J=e.Calculus={version:"1.4.5",sum:function(r,n,i,s){if(n.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(n)+" provided");var o;if(n=n.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";i=Number(i),s=Number(s),o=e.Utils.block(l,(function(){for(var o=r.text(),u={"~":!0},l=new e.Symbol(0),c=i;c<=s;c++){u[n]=new a(c);var f=t.parse(o,u);l=t.add(l,f)}return l}))}else o=t.symfunction("sum",arguments);return o},product:function(r,n,i,s){if(n.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(n)+" provided");var o;if(n=n.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";o=e.Utils.block(l,(function(){i=Number(i),s=Number(s.multiplier);for(var o=r.text(),u={},l=new e.Symbol(1),c=i;c<=s;c++)u[n]=new a(c),l=t.multiply(l,t.parse(o,u));return l}))}else o=t.symfunction("product",arguments);return o},diff:function(n,c,f){if(e.Utils.isVector(n)){var p=new e.Vector([]);return n.each((function(e){p.elements.push(J.diff(e,c))})),p}var h=s(c)?c.text():c;if(f=s(f)?f.multiplier:f||1,void 0===h&&(h=e.Utils.variables(n)[0]),n.group===o&&n.fname===E){var S=n.args[0],k=n.power.clone();S.group===m&&S.group===b||(S.power=s(S.power)?t.multiply(S.power,t.multiply(new a(.5)),k):S.power.multiply(new r(.5)).multiply(k),S.multiplier=S.multiplier.multiply(n.multiplier)),n=S}if(n.group!==o||s(n.power))n=$(n);else{var F=$(t.parse(n)),H=J.diff(n.args[0].clone(),h);n=t.multiply(F,H)}return f>1&&(f--,n=J.diff(n,c,f)),n;function X(e){return(e.value===h||e.contains(h,!0))&&(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new r(1)),e.power.equals(0)&&(e=a(e.multiplier))),e}function $(e){var n,f,p=e.group;if(p===m||p===g&&e.value!==h||p===b)e=a(0);else if(p===g)e=X(e);else{if(p===w){var S=e.multiplier.clone();e.toUnitMultiplier();var E=t.multiply(Y(e),X(e));return E.multiplier=E.multiplier.multiply(S),E}if(p===o&&e.power.equals(1))switch(e.fname){case M:f=e.clone(),e=e.args[0].clone(),e.power=e.power.negate(),e.multiplier=f.multiplier.divide(e.multiplier);break;case q:e.fname=x,e.multiplier.negate();break;case x:e.fname=q;break;case A:e.fname=C,e.power=new r(2);break;case C:e=Q(e,A);break;case O:e=Q(e,"-cot");break;case U:e.fname=O,e.multiplier.negate(),e.power=new r(2);break;case R:e=t.parse("(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case L:e=t.parse("-(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case I:e=t.parse("(1+("+u(e.args[0])+")^2)^(-1)");break;case N:S=e.multiplier.clone(),e.toUnitMultiplier(),n=e.args[0].clone(),n.toUnitMultiplier(),e=t.parse(l(u(e.args[0]))+"/abs"+l(u(n))),e.multiplier=S;break;case"parens":e=a(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case D:e.fname=G,e.power=new r(2);break;case G:e=Q(e,"-tanh");break;case B:var k=String(e.args[0]);return t.parse("-coth("+k+")*csch("+k+")");case j:k=String(e.args[0]);return t.parse("-csch("+k+")^2");case"asinh":e=t.parse("(sqrt(1+("+u(e.args[0])+")^2))^(-1)");break;case"acosh":e=t.parse("(sqrt(-1+("+u(e.args[0])+")^2))^(-1)");break;case"atanh":e=t.parse("(1-("+u(e.args[0])+")^2)^(-1)");break;case V:k=String(e.args[0]);e=t.parse("-1/(sqrt(1/("+k+")^2-1)*("+k+")^2)");break;case z:e=t.parse("-1/(("+e.args[0]+")^2-1)");break;case Z:k=String(e.args[0]);e=t.parse("-1/(sqrt(1/("+k+")^2+1)*("+k+")^2)");break;case T:k=String(e.args[0]);e=t.parse("1/(sqrt(1-1/("+k+")^2)*("+k+")^2)");break;case P:k=String(e.args[0]);e=t.parse("-1/(sqrt(1-1/("+k+")^2)*("+k+")^2)");break;case _:e=t.parse("-1/(("+e.args[0]+")^2+1)");break;case"S":k=String(e.args[0]);e=t.parse("sin((pi*("+k+")^2)/2)");break;case"C":k=String(e.args[0]);e=t.parse("cos((pi*("+k+")^2)/2)");break;case"Si":k=e.args[0];e=t.parse("sin("+k+")/("+k+")");break;case"Shi":k=e.args[0];e=t.parse("sinh("+k+")/("+k+")");break;case"Ci":k=e.args[0];e=t.parse("cos("+k+")/("+k+")");break;case"Chi":k=e.args[0];e=t.parse("cosh("+k+")/("+k+")");break;case"Ei":k=e.args[0];e=t.parse("e^("+k+")/("+k+")");break;case"Li":k=e.args[0];e=t.parse("1/"+i.LOG+"("+k+")");break;case"erf":e=t.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var F=String(e.args[0]),H=String(e.args[1]);e=t.parse("("+H+")/(("+H+")^2+("+F+")^2)");break;case"sign":e=new a(0);break;case i.LOG10:e=t.parse("1/(("+e.args[0]+")*"+i.LOG+"(10))");break;default:e=t.symfunction("diff",[e,c])}else if(p===y||p===o&&s(e.power)){var W;W=p===y?e.value:p===o&&e.contains(h)?e.fname+l(u(e.args[0])):e.value+l(u(e.args[0])),t.multiply(t.parse(M+l(W)),e.power.clone()),n=J.diff(t.multiply(t.parse(M+l(W)),e.power.clone()),h),e=t.multiply(e,n)}else if(p!==o||e.power.equals(1)){if(p===d||p===v){var K=new a(0);for(var ee in e.symbols)K=t.add(K,J.diff(e.symbols[ee].clone(),h));e=t.multiply(X(e.clone()),K)}}else n=e.clone(),n.toLinear(),n.toUnitMultiplier(),e=t.multiply(X(e.clone()),$(n))}return e.updateHash(),e}function Q(e,r,n){return t.multiply(e,t.parse(r+l(n||u(e.args[0]))))}function Y(e){for(var r=e.collectSymbols(),n=new a(0),i=r.length,s=0;s<i;s++){for(var o=J.diff(r[s].clone(),h),u=0;u<i;u++)s!==u&&(o=t.multiply(o,r[u].clone()));n=t.add(n,o)}return n}},integration:{u_substitution:function(r,n){function i(e,r,i){var s=i?i(e,r):t.divide(e.clone(),J.diff(r,n));return s.contains(n,!0)?null:s}function s(e,r){var n=J.integrate(t.symfunction(e,[new a(h)]),h,0);return n=n.sub(new a(h),r),n.updateHash(),n}var u,l=r[0].clone(),c=r[1].clone(),f=l.group,p=c.group,h="__u__";if(f===o&&p!==o){var m=l.args[0];if(u=i(c,m.clone()),u)return t.multiply(u,s(l.fname,m));if(u=i(c,l),u)return J.integration.poly_integrate(l)}else if(p===o&&f!==o){m=c.args[0];if(u=i(l,m.clone()),u)return t.multiply(u,s(c.fname,m))}else if(f===o&&p===o){if(u=i(l.clone(),c.clone()),u)return t.multiply(J.integration.poly_integrate(c),u);if(u=i(c.clone(),l.clone()),u)return t.multiply(J.integration.poly_integrate(c),u)}else{if(f===y&&p!==y){var g=l.power;if(u=i(c,g.clone()),!u){var v=J.integration.decompose_arg(g.clone(),n),d=J.diff(v[2].clone(),n),w=J.integration.decompose_arg(d.clone(),n);if(t.multiply(v[1],w[1]).power.equals(c.power)){var b=t.divide(v[0].clone(),w[0].clone()),M=t.multiply(b.clone(),t.pow(new a(l.value),t.multiply(v[0],new a(h))));return M=t.multiply(M,new a(h)),J.integration.by_parts(M,h,0,{}).sub(h,v[1].clone())}}var S=J.integrate(l.sub(g.clone(),new a(h)),h,0),N=t.multiply(S.sub(new a(h),g),u);return N}if(p===y&&f!==y){g=c.power;u=i(l,g.clone());S=J.integrate(c.sub(g,new a(h)),h,0);return t.multiply(S.sub(new a(h),g),u)}if(l.isComposite()||c.isComposite()){var E=function(r,i){var s=e.Algebra.Factor.factor(r),o=e.Algebra.Factor.factor(J.diff(i,n)),a=t.divide(s,o);return a},x=l.isComposite()?l.clone().toLinear():l.clone(),q=c.isComposite()?c.clone().toLinear():c.clone();if(u=i(x.clone(),q.clone(),E),u)return t.multiply(J.integration.poly_integrate(c),u);if(u=i(q.clone(),x.clone(),E),u)return t.multiply(J.integration.poly_integrate(l),u)}}},poly_integrate:function(e){var r=e.power.toString(),n=e.multiplier.toDecimal(),i=e.toUnitMultiplier().toLinear();return-1===Number(r)?t.multiply(new a(n),t.symfunction(M,[i])):t.parse(f("({0})*({1})^(({2})+1)/(({2})+1)",n,i,r))},stop:function(t){throw t=t||"Unable to compute integral!",e.Utils.warn(t),new H(t)},partial_fraction:function(r,n,i,o){var u,l;return s(n)||(n=t.parse(n)),u=new a(0),l=e.Algebra.PartFrac.partfrac(r,n),l.group===w&&l.isLinear()?l.each((function(e){u=t.add(u,J.integrate(e,n,i,o))})):u=t.add(u,J.integrate(l,n,i,o)),u},get_udv:function(r){var n=[[],[],[],[],[]],i=function(t){var r=t.group;if(r===o){var i=t.fname;e.Utils.in_trig(i)||e.Utils.in_htrig(i)?n[3].push(t):e.Utils.in_inverse_trig(i)?n[1].push(t):i===M?n[0].push(t):J.integration.stop()}else r===g||t.isComposite()&&t.isLinear()||r===w&&t.isLinear()?n[2].push(t):r===y||t.isComposite()&&!t.isLinear()?n[4].push(t):J.integration.stop()};r.group===w?r.each((function(e){i(a.unwrapSQRT(e,!0))})):i(r);for(var s,u=new a(1),l=0;l<5;l++){var c,f=n[l],p=f.length;if(p>0){if(p>1){c=new a(1);for(var h=0;h<p;h++)c=t.multiply(c,f[h].clone())}else c=f[0].clone();s?u=t.multiply(u,c):(s=c,s.multiplier=s.multiplier.multiply(r.multiplier))}}return[s,u]},trig_sub:function(r,n,i,s,o,a){o=o||J.integration.decompose_arg(r.clone().toLinear(),n);o[3],o[2];var u=o[0],c=o[1];if(c.power.equals(2)&&u.greaterThan(0)){var f=e.Utils.getU(r),p=t.parse(A+l(f)),h=t.parse(C+l(f)+"^2"),m=t.multiply(r.sub(c,p),h),g=J.integrate(m,f,i,s).sub(p,c);return e.Utils.clearU(p),g}},by_parts:function(r,n,i,s){var o,u,l,c,f,p,h,m,g,v,d,w;if(s.previous=s.previous||[],o=J.integration.get_udv(r),u=o[0],l=o[1],c=a.unwrapSQRT(t.expand(J.diff(u.clone(),n)),!0),d=c.clone().stripVar(n),c=t.divide(c,d.clone()),f=J.integrate(l.clone(),n,i||0),p=t.multiply(f.clone(),c),w=p.toString(),-1!==s.previous.indexOf(w)&&e.Utils.in_trig(u.fname)&&l.isE())return s.is_cyclic=!0,new a(1);if(s.previous.push(w),h=t.multiply(u,f),v=p.multiplier.clone(),p.toUnitMultiplier(),g=t.multiply(J.integrate(p.clone(),n,i,s),d),g.multiplier=g.multiplier.multiply(v),m=t.subtract(h,g),s.is_cyclic&&(s.previous.pop(),0===s.previous.length)){m=t.expand(m);var y=new a(0);m.each((function(e){e.contains(n)||(y=t.add(y,e.clone()))})),m=t.divide(t.subtract(m,y.clone()),t.subtract(new a(1),y))}return m},decompose_arg:e.Utils.decompose_fn},integrate:function(n,u,h,m){if(!u){var b=e.Utils.variables(n);1===b.length&&(u=b[0]),u=u||"x"}if(e.Utils.isVector(n)){var $=new e.Vector([]);return n.each((function(e){$.elements.push(J.integrate(e,u))})),$}return isNaN(u)||t.error("variable expected but received "+u),n.isConstant(!0)?t.multiply(n.clone(),t.parse(u)):(m=m||{},e.Utils.block("PARSE2NUMBER",(function(){h=h||0;var b,$=s(u)?u.toString():u,Q=a.unwrapSQRT(n.clone(),!0),Y=Q.group;try{if(++h>e.Settings.integration_depth&&J.integration.stop("Maximum depth reached. Exiting!"),Q.contains($,!0)){if(Y===g)b=J.integration.poly_integrate(Q,$,h);else if(Y===y)if(Q.previousGroup===o&&"sqrt"!==Q.fname&&Q.fname!==i.PARENTHESIS&&J.integration.stop(),Q.contains($)&&Q.previousGroup!==o)if(Q.power.contains($))J.integration.stop();else{var K=J.diff(Q.clone().toLinear(),$);K.contains($)&&J.integration.stop(),b=J.integration.poly_integrate(Q,$,h)}else{var ee=J.diff(Q.power.clone(),$);if(ee.contains($)){var te=ee.stripVar($),re=t.divide(ee.clone(),te.clone());if(re.group===g&&re.isLinear())return te.multiplier=te.multiplier.divide(new r(2)),t.parse(f("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",te,$,Q.multiplier));J.integration.stop()}if(Q.isE())ee.isLinear()?b=Q:ee.isE()&&ee.power.group===g&&ee.power.power.equals(1)?b=t.multiply(t.symfunction("Ei",[Q.power.clone()]),Q.power):J.integration.stop();else{var ne=t.symfunction(M,[t.parse(Q.value)]);b=t.divide(Q,ne)}b=t.divide(b,ee)}else if(Q.isComposite()&&Q.isLinear()){var ie=t.parse(Q.multiplier);Q.toUnitMultiplier(),b=new a(0),Q.each((function(e){b=t.add(b,J.integrate(e,$,h))})),b=t.multiply(ie,b)}else if(Y===d)if(Q.power.greaterThan(1)&&(Q=t.expand(Q)),Q.power.equals(1))b=new a(0),Q.each((function(e){b=t.add(b,J.integrate(e,$,h))}),!0);else{var se=Number(Q.power);ie=Q.multiplier.clone();Q.toUnitMultiplier();var oe=Q.clone().toLinear(),ae=J.integration.decompose_arg(oe,$),ue=ae[3],le=ae[2];ee=ae[0],re=ae[1];if(-1===se&&re.group!==v&&re.power.equals(2)){var ce=!c(ue)||ue>0;if(re.group===g&&re.power.equals(2)&&ce){var fe=function(e){var r=new a(1);return e.each((function(e){r=t.multiply(r,"abs"===e.fname?e.args[0]:e)})),r},pe=ee.clone(),he=ue.clone();pe=t.pow(pe,new a(.5)),he=t.pow(he,new a(.5));ne=t.multiply(fe(he),fe(pe));var me=t.symfunction(I,[t.divide(t.multiply(ee,re.toLinear()),ne.clone())]);b=t.divide(me,ne)}else if(re.group===g&&re.isLinear())b=t.divide(J.integration.poly_integrate(Q),ee);else if(re.power.equals(4)){var ge,ve,de,we,ye,be,Me=l;pe=t.parse(E+Me(ee)+"*"+$+"^2"),he=t.parse(E+Me(2)+"*"+Me(ee)+"^"+Me("1/4")+"*"+Me(ue)+"^"+Me("1/4")+"*"+$),ge=t.parse(E+Me(ue)),Pe=t.add(t.add(pe.clone(),he.clone()),ge.clone()),st=t.add(t.subtract(pe,he),ge),ve=t.parse(E+Me(2)+"*"+Me(ue)+"^"+Me("3/4")),de=t.parse(E+Me(ue)+"*"+Me(ue)+"^"+Me("1/4")+"*"+$),we=t.parse("2*"+Me(ue)+"*"+E+Me(2)+"*"+Me(ue)+"^"+Me("1/4")),ye=t.divide(t.subtract(ve.clone(),de.clone()),t.multiply(we.clone(),st)),be=t.divide(t.add(ve,de),t.multiply(we,Pe.clone())),b=t.add(J.integrate(ye,$,h,m),J.integrate(be,$,h,m))}else b=J.integration.partial_fraction(Q,$,h)}else if(-.5===se)if(re.group===g&&re.power.equals(2))if(le.multiplier.lessThan(0)&&!ue.multiplier.lessThan(0))if(ee.negate(),ue.isConstant()&&ee.isConstant()){ne=t.symfunction(E,[ee.clone()]);var Se=t.symfunction(E,[t.multiply(ee.clone(),ue)]);b=t.divide(t.symfunction(R,[t.divide(le.toLinear(),Se)]),ne)}else{var Ne=t.symfunction(E,[ee]),Ee=t.multiply(Ne.clone(),re.clone().toLinear());b=t.divide(t.symfunction(I,[t.divide(Ee,t.symfunction(E,[oe.clone()]))]),Ne)}else J.integration.stop();else J.integration.stop();else if(re.isLinear()&&re.group!==v)b=t.divide(J.integration.poly_integrate(Q),ee);else{if(re.power.equals(2)&&ee.greaterThan(0)){var xe,qe,Ae,Ce,Oe,Ue;xe=t.parse(E+l(ee)),qe=t.parse(E+l(ue)),Ae=t.multiply(xe.clone(),qe.clone()).invert(),Ce=t.pow(ue,new a(Q.power)),Ue=e.Utils.getU(Q),Be=t.multiply(Ae,re.clone().toLinear()),Oe=t.parse(I+l(Be));var Re=2*(Math.abs(Q.power)-1),Le=J.integrate(t.parse(q+l(Ue)+"^"+Re));return e.Utils.clearU(Ue),t.multiply(Le.sub(Ue,Oe),Ce)}if(Q.group===w||Q.power.lessThan(0)){me=Q.clone().toLinear();var Ie=e.Algebra.Factor.factor(me),Te=Ie.toString()!==me.toString();if(e.Algebra.degree(me,t.parse($)).equals(2)&&!Te)try{var Pe,_e,ke;ke=e.Algebra.sqComplete(me,$),Be=e.Utils.getU(me),Pe=ke.f.sub(ke.a,Be),_e=t.pow(Pe,t.parse(Q.power)),b=J.integrate(_e,Be).sub(Be,ke.a)}catch(rr){J.integration.stop()}else b=J.integration.partial_fraction(Q,$,h,m)}else b=J.integration.by_parts(Q,$,h,m)}b.multiplier=b.multiplier.multiply(ie)}else if(Y===o){var Fe=Q.args[0];ie=Q.multiplier.clone();Q.toUnitMultiplier();ae=J.integration.decompose_arg(Fe,$),ee=ae[0],re=ae[1];var De=Q.fname;if(De===M||De===R||De===L||De===I&&re.isLinear()){se=Q.power.toString();if(c(se)&&(h-=se),Fe.isComposite()){var Be=e.Utils.getU(Q),Ge=(me=t.pow(t.parse(M+l(Be)),new a(se)),J.diff(Fe,$)),je=t.multiply(me,Ge);Le=J.integrate(je,Be,h,m);b=t.multiply(t.parse(ie),Le.sub(Be,Fe))}else b=t.multiply(t.parse(ie),J.integration.by_parts(Q,$,h,m))}else{if(De===A&&Q.power.lessThan(0)){var Ve=Q.clone();return Ve.power.negate(),Ve.fname=U,t.multiply(t.parse(ie),J.integrate(Ve,$,h))}if(!ee.contains($,!0)&&Q.isLinear())if(De===N){re=t.divide(Fe.clone(),ee.clone());if(re.group!==g||re.power.lessThan(0))J.integration.stop();else if(e.Utils.even(re.power))b=J.integrate(Fe,$,h);else{var Ze=J.integrate(re,$,h);Ze.power=Ze.power.subtract(new r(1)),b=t.multiply(t.multiply(t.symfunction(N,[re.toLinear()]),Ze),ee)}}else{var ze=Q.args[0].group,He=J.integration.decompose_arg(Fe,$);switch((ze!==d&&ze!==g&&ze!==w||!He[1].power.equals(1)||Fe.hasFunc())&&J.integration.stop(),De){case q:b=t.symfunction(x,[Fe]);break;case x:b=t.symfunction(q,[Fe]),b.negate();break;case A:b=t.parse(f(i.LOG+"(sec({0}))",Fe));break;case C:b=t.parse(f(i.LOG+"(tan({0})+sec({0}))",Fe));break;case O:b=t.parse(f("-"+i.LOG+"(csc({0})+cot({0}))",Fe));break;case U:b=t.parse(f(i.LOG+"(sin({0}))",Fe));break;case k:b=t.symfunction(F,[Fe]);break;case F:b=t.symfunction(k,[Fe]);break;case D:b=t.parse(f(i.LOG+"(cosh({0}))",Fe));break;case T:b=J.integration.by_parts(Q,$,h,m);break;case P:b=J.integration.by_parts(Q,$,h,m);break;case _:b=J.integration.by_parts(Q,$,h,m);break;case V:b=J.integration.by_parts(Q,$,h,m);break;case Z:b=J.integration.by_parts(Q,$,h,m);break;case z:b=J.integration.by_parts(Q,$,h,m);break;case G:b=t.parse(f("atan(sinh({0}))",Fe));break;case B:b=t.parse(f(i.LOG+"(tanh(({0})/2))",Fe));break;case j:b=t.parse(f(i.LOG+"(sinh({0}))",Fe));break;case S:b=J.integrate(t.parse(f("e^({0})",Fe)),$,h);break;case"S":Fe=Q.args[0].clone();var Xe=J.integration.decompose_arg(Fe,$),$e=Xe[1],Qe=Xe[0],Ye=Xe[3];b=t.parse(f("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",Qe,Ye,re));break;case"C":Fe=Q.args[0].clone(),Xe=J.integration.decompose_arg(Fe,$),$e=Xe[1],Qe=Xe[0],Ye=Xe[3];b=t.parse(f("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",Qe,Ye,$e));break;case"erf":Fe=Q.args[0].clone(),Xe=J.integration.decompose_arg(Fe,$),$e=Xe[1],Qe=Xe[0];b=t.parse(f("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",Qe,$e,Fe));break;case"sign":b=t.multiply(Q.clone(),Fe.clone());break;default:J.integration.stop()}b=t.divide(b,ee)}else if(re.isLinear())if(De===q||De===x){se=Number(Q.power);if(se<0)Q.fname=De===x?O:C,Q.invert().updateHash(),b=J.integrate(Q,$,h);else{Fe=Q.args[0];var We=Q.clone(),Je=Q.clone(),Ke=new a((se-1)/se),et=t.multiply(ee.clone(),new a(se)).invert();We.power=We.power.subtract(new r(1)),Je.power=Je.power.subtract(new r(2));K=t.symfunction(De===q?x:q,[Fe.clone()]);De===x&&K.negate(),b=t.add(t.multiply(t.multiply(et,We),K),t.multiply(Ke,J.integrate(t.parse(Je),$,h)))}}else if(De===A||De===U){if(Q.args[0].isLinear($)){Re=Q.power.subtract(new r(1)).toString();var tt=Q.clone().toUnitMultiplier(),rt=t.parse(f((De===U?"-":"")+"1/({2}*{0})*{3}({1})^({0})",Re,Fe,ee,De));tt.power=tt.power.subtract(new r(2)),tt.power.equals(0)&&(tt=t.parse(tt)),b=t.subtract(rt,J.integrate(tt,$,h))}}else if(De===C||De===O){var nt=Q.power.subtract(new r(1)).toString(),it=Q.power.subtract(new r(2)).toString(),st=De===C?A:U,ot=(tt=Q.clone().toUnitMultiplier(),f((De===O?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",ee,nt,it,Fe,De,st));rt=t.parse(ot);tt.power=tt.power.subtract(new r(2)),tt.power.equals(0)&&(tt=t.parse(tt)),b=t.add(rt,t.multiply(new a(it/nt),J.integrate(tt,$,h)))}else De!==F&&De!==k||!Q.power.equals(2)?J.integration.stop():b=J.integrate(Q.fnTransform(),$,h);else J.integration.stop();b.multiplier=b.multiplier.multiply(ie)}}else if(Y===v)b=J.integration.partial_fraction(Q,$,h);else if(Y===w){var at=Q.getDenom();at.group===g&&(Q=t.expand(Q));var ut=Q.stripVar($),lt=t.divide(Q.clone(),ut.clone());if(ut.contains($)&&(lt=t.multiply(lt,ut),ut=new a(1)),lt.group!==w){if(lt.equals(1))return J.integrate(t.expand(Q),$,h);lt.clone().toLinear().isPoly(!0)&&e.Utils.variables(lt).length>1&&(lt=e.Algebra.Factor.factor(lt)),b=J.integrate(lt,$,h)}else{var ct=lt.collectSymbols().sort((function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group})).map((function(e){var r=a.unwrapSQRT(e,!0);return r.fname===S?t.parse(f("({1})*e^({0})",r.args[0],r.multiplier)):r})),ft=ct.length;if(Q.power<0){if(2===ft)return J.integrate(t.expand(Q),$,h,m)}else if(2===ft){try{b=J.integration.u_substitution(ct,$)}catch(rr){}if(!b){var pt=ct[0].group,ht=ct[1].group,mt=ct[0],gt=ct[1],vt=mt.fname,dt=gt.fname;if(Q=t.multiply(mt.clone(),gt.clone()),pt===o&&ht===o)if(vt===M||dt===M)b=J.integration.by_parts(Q.clone(),$,h,m);else{ct.sort((function(e,t){return t.fname>e.fname}));var wt=mt.args[0];(!wt.isLinear()||wt.group!==d&&wt.group!==w&&wt.group!==g)&&J.integration.stop();ae=J.integration.decompose_arg(wt,$);re=ae[1],ee=ae[0],re.isLinear()||J.integration.stop();var yt=gt.args[0];if(wt.equals(yt))if(vt===x&&dt===q||vt===q&&dt===x)if(mt.power.lessThan(0)&&J.integration.stop(),vt===x&&mt.power.add(gt.power).equals(0))mt.fname=A,mt.updateHash(),b=J.integrate(mt,$,h);else if(p(mt.power)&&dt===q&&gt.power.lessThan(0)){Re=Number(mt.power)/2;var bt=t.parse(f("(1-cos({0})^2)^({1})",mt.args[0],Re));b=J.integrate(t.expand(t.multiply(bt,gt.clone())),$,h,m)}else if(p(mt.power)&&dt===x&&gt.power.lessThan(0)){Re=Number(mt.power)/2,bt=t.parse(f("(1-sin({0})^2)^({1})",mt.args[0],Re));b=J.integrate(t.expand(t.multiply(bt,gt.clone())),$,h,m)}else{var Mt=e.Utils.even(mt.power),St=e.Utils.even(gt.power);if(b=new a(0),Mt&&St){var Nt=function(e){var r,n=e.power,i=n/2;return r=e.fname===q?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+i:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+i,t.parse(r)};ee=Nt(mt),ue=Nt(gt),K=t.multiply(ee,ue),Ve=t.expand(K);return Ve.each((function(e){b=t.add(b,J.integrate(e,$,h))})),t.multiply(b,ut)}Mt?(Be=mt,tt=gt):(Be=gt,tt=mt);var Et=Be.fname===q?-1:1,xt=(Re=tt.power,(Re-1)/2),qt=t.parse("(1-"+Be.fname+e.Utils.inBrackets(wt)+"^2)^"+xt),Ve=t.expand(t.multiply(new a(Et),t.multiply(Be.clone(),qt)));Ve.each((function(e){b=t.add(b,J.integration.poly_integrate(e.clone()))}))}else if(vt===C&&dt===A&&re.isLinear()&&gt.isLinear())b=t.parse(f("sec({0})^({1})/({1})",mt.args[0],mt.power));else if(vt===A&&dt===C&&re.isLinear())if(mt.isLinear()&&gt.isLinear())b=t.divide(t.symfunction(C,[wt.clone()]),ee);else if(p(mt.power)){se=Number(mt.power)/2,K=t.parse(f("(sec({0})^2-1)^({1})",mt.args[0],se));b=J.integrate(t.expand(t.multiply(K,gt)),$,h)}else J.integration.stop();else if(vt===C&&dt===q)mt.fname=q,mt.invert().updateHash(),b=J.integrate(t.multiply(mt,gt),$,h);else if(vt===x&&dt===O)gt.fname=x,gt.invert().updateHash(),b=J.integrate(t.multiply(mt,gt),$,h);else if(vt!==A||dt!==q&&dt!==x||!gt.power.lessThan(0)){K=t.multiply(mt.fnTransform(),gt.fnTransform());b=J.integrate(t.expand(K),$,h)}else{var K=t.multiply(mt.fnTransform(),gt);b=J.integrate(t.expand(K),$,h)}else if(vt!==x&&vt!==q||dt!==x&&dt!==q)J.integration.stop();else{var At=W(ct);b=J.integrate(t.expand(At),$,h)}}else if(pt===o&&ht===g){var Ct=mt.isLinear();if(mt.fname===q&&Ct&&gt.power.equals(-1))b=t.symfunction("Ci",[mt.args[0]]);else if(mt.fname===q&&gt.power.equals(-1))b=J.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===F&&Ct&&gt.power.equals(-1))b=t.symfunction("Chi",[mt.args[0]]);else if(mt.fname===F&&gt.power.equals(-1))b=J.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===x&&Ct&&gt.power.equals(-1))b=t.symfunction("Si",[mt.args[0]]);else if(mt.fname===x&&gt.power.equals(-1))b=J.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===k&&Ct&&gt.power.equals(-1))b=t.symfunction("Shi",[mt.args[0]]);else if(mt.fname===k&&gt.power.equals(-1))b=J.integrate(t.multiply(mt.fnTransform(),gt.clone()),$,h);else if(mt.fname===M&&gt.power.equals(-1))b=J.integration.poly_integrate(mt,$,h);else if("erf"===mt.fname){if(gt.power.equals(1)){Xe=J.integration.decompose_arg(mt.args[0],$),Qe=Xe[0],$e=Xe[1],Fe=mt.args[0].toString();b=t.parse(f("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",Qe,$e,Fe))}}else b=J.integration.by_parts(Q,$,h,m)}else if(pt===y&&ht===g){re=vt===M?J.integration.decompose_arg(mt.args[0],$)[1]:null;b=mt.isE()&&(mt.power.group===g||mt.power.group===w)&&gt.power.equals(-1)?t.symfunction("Ei",[mt.power.clone()]):vt===M&&re.value===gt.value?J.integration.poly_integrate(mt,$,h):J.integration.by_parts(Q,$,h,m)}else if(pt===v&&ht===g){if(gt.value===mt.value&&mt.power.equals(-1)){var Ot=Math.min.apply(null,e.Utils.keys(mt.symbols)),Ut=Math.min(Ot,gt.power),Rt=gt.clone();Rt.power=new r(Ut),gt=t.divide(gt,Rt.clone());K=new a(0);mt.each((function(e){K=t.add(K,t.divide(e.clone(),Rt.clone()))})),K.multiplier=mt.multiplier,Q=t.divide(gt,K)}b=J.integration.partial_fraction(Q,$,h)}else if(pt===d&&ht===g){me=mt.clone().toLinear();var Lt=e.Algebra.degree(me,t.parse($)).equals(1);if(mt.power.equals(-.5)){ae=J.integration.decompose_arg(mt.clone().toLinear(),$),ee=ae[0].negate(),re=ae[1],ue=ae[3];var It=Number(mt.power),Tt=Number(gt.power);if(c(Tt)&&e.Utils.even(Tt)&&re.power.equals(2)){var Pt=t.divide(t.multiply(t.pow(ue.clone(),new a(2)),t.symfunction(E,[t.divide(ue.clone(),ee.clone())])),t.pow(ee.clone(),new a(2)));Pt=t.multiply(Pt,t.symfunction(E,[ue]).invert());var _t=t.parse("sin(u)");_t.power=_t.power.multiply(gt.power);Le=J.integrate(_t,"u",h);var kt=t.parse(R+"("+E+"("+ee+"/"+ue+")*"+$+")");b=t.multiply(Pt,Le.sub(new a("u"),kt))}else if(-.5===It){var Ft=function(e,r){var n=t.parse(J.integrate(e,$,h,m).sub($,f(r,$)));if(!n.hasIntegral())return n};-1===Tt?b=Ft(t.expand(t.expand(t.pow(t.multiply(mt.invert(),gt.invert()),new a(2)))).invert(),"sqrt(1-1/({0})^2)"):-2===Tt&&(b=Ft(t.sqrt(t.expand(t.divide(t.pow(Q,new a(2)).invert(),t.pow(new a($),new a(2))).negate())).invert(),"sqrt(1-1/({0})^2)"))}}else if(mt.power.equals(-1)&&gt.isLinear()&&Lt)b=J.integration.partial_fraction(Q,$,h);else if(!mt.power.lessThan(0)&&c(mt.power)){var Dt=t.expand(mt);b=new a(0),Dt.each((function(e){e.group===v?e.each((function(e){b=t.add(b,J.integrate(t.multiply(gt.clone(),e),$,h))})):b=t.add(b,J.integrate(t.multiply(gt.clone(),e),$,h))}))}else if(mt.power.lessThan(-2))b=J.integration.by_parts(Q,$,h,m);else if(mt.power.lessThan(0)&&gt.power.greaterThan(1)){ae=J.integration.decompose_arg(mt.clone().toLinear(),$),ee=ae[0].negate(),re=ae[1],ue=ae[3],oe=mt.clone().toLinear();if(re.group!==v&&re.isLinear()){se=Number(gt.power),Ge="_u_",Be=new a(Ge);var Bt=t.expand(t.divide(t.pow(t.subtract(Be.clone(),ue.clone()),new a(se)),Be.clone())),Gt={};Gt[Ge]=oe;var jt=t.parse(Bt,Gt);b=J.integrate(jt,$,0)}else if(gt.power.greaterThan(re.power)||gt.power.equals(re.power)){var Vt=new e.Algebra.Classes.Factors;mt=e.Algebra.Factor.coeffFactor(mt.invert(),Vt);var Zt=e.Algebra.divide(gt,mt);Zt.group!==w?(b=new a(0),Zt.each((function(e){b=t.add(b,J.integrate(e,$,h))})),Vt.each((function(e){b=t.divide(b,e)})),b=t.expand(b)):b=J.integration.by_parts(Q,$,h,m)}else b=J.integration.partial_fraction(Q,$,h)}else if(mt.power.den.equals(2)){Xe=J.integration.decompose_arg(mt.clone().toLinear(),$),ee=Xe[3],re=Xe[1],ue=Xe[0],Xe[2];if(re.power.equals(2)&&ue.lessThan(0)){ee.equals(1)||(ut=t.multiply(ut,t.pow(ee,new a(2))));Be=$,Pt=t.divide(t.pow(ue.clone().negate(),new a(.5)),t.pow(ee,new a(.5))),Ge=t.symfunction(q,[new a(Be)]);var zt=t.pow(t.symfunction(q,[new a(Be)]),new a(mt.power.num)),Ht=t.pow(t.symfunction(x,[new a(Be)]),new a(gt.power)),Xt=t.multiply(t.multiply(zt,Ge),Ht);Le=J.integrate(Xt,Be,h);b=Le.sub(Be,t.symfunction(R,[t.multiply(new a($),Pt)]))}else b=J.integration.partial_fraction(Q,$,h,m)}else Lt&&(b=J.integration.partial_fraction(Q,$,h))}else if(mt.isComposite()&&gt.isComposite())if(b=new a(0),mt.power.greaterThan(0)&&gt.power.greaterThan(0)){Ve=t.expand(Q);Ve.each((function(e){b=t.add(b,J.integrate(e,$,h))}),!0)}else{It=Number(mt.power),Tt=Number(gt.power);if(It<0&&Tt>0){K=mt;mt=gt,gt=K}-1===It&&-1===Tt?b=J.integration.partial_fraction(Q,$):mt.each((function(e){var r=t.multiply(e,gt.clone()),n=J.integrate(r,$,h);b=t.add(b,n)}))}else if(pt===d&&ct[0].power.greaterThan(0))mt=t.expand(mt),b=new a(0),mt.each((function(e){b=t.add(b,J.integrate(t.multiply(e,gt.clone()),$,h))}),!0);else if(pt===o&&ht===y&&e.Utils.in_htrig(mt.fname))mt=mt.fnTransform(),b=J.integrate(t.expand(t.multiply(mt,gt)),$,h);else if(pt===o&&ht===d||ht===o&&pt===d){if(ht===o&&pt===d){K=mt;mt=gt,gt=K}var $t,Qt,Yt;if(Ge=a.unwrapSQRT(J.diff(mt.clone(),$),!0),$t=a.unwrapSQRT(gt,!0),Ge.power.equals($t.power)){if(se=new a(gt.power),Qt=Ge.clone().toLinear(),Yt=gt.clone().toLinear(),Ke=e.Algebra.divide(Qt.toLinear(),Yt),Ke.isConstant()){var Wt=t.pow(Ke,se.negate());b=t.multiply(Wt,J.integration.poly_integrate(mt.clone()))}}else b=J.integration.by_parts(Q,$,h,m)}else{var Jt=mt.clone().toLinear(),Kt=gt.clone().toLinear();b=pt===y&&ht===y&&mt.power.contains($)&&gt.power.contains($)&&!Jt.contains($)&&!Kt.contains($)?t.parse(f("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",Jt.toString(),Kt.toString(),mt.power.multiplier.toString(),gt.power.multiplier.toString(),$)):J.integration.by_parts(Q,$,h,m)}}}else if(3===ft&&(ct[2].group===g&&ct[2].power.lessThan(2)||ct[0].group===d)){var er=ct[0];if(er.group===d){er.power.greaterThan(1)&&(er=t.expand(er));tt=t.multiply(ct[1],ct[2]);b=new a(0),er.each((function(e){var r=t.multiply(e,tt.clone()),n=J.integrate(r,$,h);b=t.add(b,n)}),!0)}else b=J.integration.by_parts(Q,$,h,m)}else if(X(ct)){K=new a(1);var tr=0;for(ft=ct.length;tr<ft;tr++)K=t.multiply(K,ct[tr].fnTransform());K=t.expand(K),b=J.integrate(K,$,h)}else{At=W(ct);b=J.integrate(t.expand(At),$,h)}}b=t.multiply(b,ut)}}else b=t.multiply(Q.clone(),t.parse($));if(b)return b}catch(nr){if(!(nr instanceof H||nr instanceof e.exceptions.DivisionByZero))throw nr}return t.symfunction("integrate",[n,u])}),!1))},defint:function(r,n,i,s){s=s||"x";var o,u=function(e,r,n){try{return t.parse(e,r)}catch(i){return J.Limit.limit(e,s,n)}},l=e.Utils.variables(r),c=J.integrate(r,s);if(1===l.length&&(s=l[0]),c.hasIntegral())if(1===l.length&&n.isConstant()&&i.isConstant()){var f=e.Utils.build(r);o=new a(e.Math2.num_integrate(f,Number(n),Number(i)))}else o=t.symfunction("defint",[r,n,i,s]);else{var p,h,m={},g={};m[s]=i,g[s]=n,p=u(c,m,i,s),h=u(c,g,n,s),o=t.subtract(p,h)}return o},Limit:{interval:function(e,r){return t.parse(f("[{0}, {1}]",e,r))},diverges:function(){return J.Limit.interval("-Infinity","Infinity")},divide:function(r,n,i,s){r.clone(),n.clone();var o,u=function(t){if(e.Utils.isVector(t)){for(var r=0;r<t.elements.length;r++)if(!t.elements[r].isInfinity)return!1;return!0}return t.isInfinity},l=function(t,r){return!e.Utils.isVector(t)&&t.equals(r)};do{var c=h(J.Limit.limit(r,i,s)),f=h(J.Limit.limit(n,i,s)),p=u(c)&&u(f)||l(c,0)&&l(f,0);if(p){var m=J.diff(r.clone(),i),g=J.diff(n.clone(),i),v=t.expand(t.divide(m,g));r=v.getNum(),n=v.getDenom()}}while(p);return o=c.isInfinity&&f.equals(0)?c:c.equals(0)&&f.isInfinity?c:c.isInfinity?c:f.isInfinity?new a(0):f.equals(0)?J.Limit.diverges():t.divide(c,f),o},rewriteToLog:function(e){var r=e.power.clone();return e.toLinear(),t.pow(new a("e"),t.multiply(r,t.symfunction(i.LOG+"",[e])))},getSubbed:function(e,t,r){var n;e.group===y&&(e=J.rewriteToLog(e));try{n=e.sub(t,r)}catch(i){n=e}return n},isInterval:function(t){return e.Utils.isVector(t)},isConvergent:function(e){return!(J.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction("limit"))},limit:function(r,n,s){var u=t.parse(r.multiplier);r.toUnitMultiplier();try{var l;if(r.isConstant(!0))l=r;else{var c={};c[n]=s;try{var p=t.parse(r.sub(n,s),c);(p.isConstant(!0)||p.isInfinity)&&(l=p)}catch(z){}if(!l){var m=r.getNum(),v=r.getDenom();if(v.isConstant(!0)){if(r.group===y){var d=r.clone().toLinear(),b=(r.power.clone(),d.getNum()),S=d.getDenom(),N=e.Utils.decompose_fn(S,n,!0);if(b.group===g&&b.multiplier.isOne()&&N.ax.group===g&&N.b.isConstant(!0)&&N.a.isOne()&&N.b.isConstant(!0))l=t.parse(f("(1/e^({0}))",N.b));else{var E=J.Limit.rewriteToLog(r.clone()),C=E.power.clone(),O=E.clone().toLinear(),U=J.Limit.limit(O,n,s),R=J.Limit.limit(C,n,s);l=t.pow(U,R)}}else if(r.group===o&&1===r.args.length){var L=J.Limit.limit(r.args[0],n,s);if(e.Utils.isVector(L))return l=L.map((function(e){var i=r.clone();return i.args[0]=e,J.Limit.limit(t.symfunction(r.fname,[e]),n,s)})),t.multiply(u,l);if(L.isConstant(!0)){var I,T=t.symfunction(r.fname,[L]);try{h(T),I=!0}catch(z){I=!1}}if(I)l=T;else if(J.Limit.isConvergent(L))if(r.fname===M)switch(L.toString()){case"0":l=a.infinity().negate();break;case"Infinity":l=a.infinity();break;case"-Infinity":l=a.infinity();break}else if(r.fname!==q&&r.fname!==x||!s.isInfinity){if(r.fname===A){var P=r.args[0],_=P.getNum(),k=P.getDenom(),F=_.toUnitMultiplier();(s.isInfinity||F.equals("pi")&&k.equals(2))&&(l=divergent())}else if(r.fname===i.FACTORIAL&&L.isInfinity)return a.infinity()}else l=J.Limit.interval(-1,1)}else if(r.group===g){if(r.power>0)return t.parse(r,c);l=e.Utils.even(r.power)?a.infinity():J.Limit.diverges()}else if(r.group===w)if(r=t.expand(r),r.group!==w)l=J.Limit.limit(r,n,s);else{var D,B,G=r.collectSymbols().sort((function(e,t){return e.group-t.group}));d=G.pop();D=h(J.Limit.limit(d,n,s));while(G.length){var j=G.pop();B=h(J.Limit.limit(j,n,s)),D.isInfinity||!J.Limit.isConvergent(D)&&B.equals(0)||D.equals(0)&&J.Limit.isConvergent(B)?(j.invert(),D=J.Limit.divide(d,j,n,s)):(D=t.multiply(D,B),d=t.multiply(d,j))}l=D}else if(r.isComposite()){var V,Z=r.clone();r.isLinear()||(r=t.expand(r)),l=new a(0),r.each((function(i){try{V=J.Limit.limit(i,n,s)}catch(z){V=J.Limit.diverges()}try{l=t.add(l,V)}catch(z){r=e.Utils.toCommonDenominator(Z),l=J.Limit.limit(r,n,s)}}))}}else l=J.Limit.divide(m,v,n,s)}}l||(l=t.symfunction("limit",arguments))}catch(z){l=t.symfunction("limit",arguments)}return t.multiply(u,l)}},Fresnel:{S:function(e){return e.isConstant(!0)?J.defint(t.parse("sin(pi*x^2/2)"),a(0),e,"x"):t.symfunction("S",arguments)},C:function(e){return e.isConstant(!0)?J.defint(t.parse("cos(pi*x^2/2)"),a(0),e,"x"):t.symfunction("C",arguments)}}};n.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return J.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return J.sum}},{name:"product",visible:!0,numargs:4,build:function(){return J.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return J.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return J.defint}},{name:"S",visible:!0,numargs:1,build:function(){return J.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return J.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return J.Limit.limit}}]),n.api()})()},"62e4":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},aec1:function(e,t,r){var n=r("15f6");r("4016"),function(){"use strict";var e=n.getCore(),t=e.PARSER,r=e.groups.N,i=e.groups.P,s=e.groups.S,o=e.groups.EX,a=e.groups.FN,u=e.groups.PL,l=e.groups.CP,c=e.groups.CB,f=e.Utils.keys,p=e.Utils.variables,h=e.Utils.format,m=e.Utils.round,g=e.Frac,v=e.Utils.isInt,d=e.Symbol,w=e.Settings.CONST_HASH,y=e.Utils.importFunctions(),b=e.Utils.evaluate;function M(r,n,i){if(e.Utils.isSymbol(r))this.parse(r),this.variable=this.variable||n;else if(isNaN(r))"string"===typeof r&&this.parse(t.parse(r));else{if(i=i||0,void 0===n)throw new e.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[i]=r,this.fill(r)}}function S(){this.factors={},this.length=0}function N(t,r,n){this.terms=r||[],this.coeff=t,this.map=n,this.sum=new e.Frac(0),this.image=void 0}M.fromArray=function(t,r){if("undefined"===typeof r)throw new e.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var n=new M;return n.coeffs=t,n.variable=r,n},M.fit=function(e,t,r,n,i,s){var o=new Array(i+1),a=r-t;o[0]=t,o[i]=e,a-=e*Math.pow(n,i);for(var u=i-1;u>0;u--){var l=Math.pow(n,u),c=a/l,f=Math.sign(c),p=f*Math.floor(Math.abs(c));a-=p*l,o[u]=p}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new g(o[u]);return M.fromArray(o,s)},M.prototype={parse:function(n,i){if(this.variable=p(n)[0],!n.isPoly())throw e.exceptions.NerdamerTypeError("Polynomial Expected! Received "+e.Utils.text(n));if(i=i||[],n.power.absEquals(1)||(n=t.expand(n)),n.group===e.groups.N)i[0]=n.multiplier;else if(n.group===e.groups.S)i[n.power.toDecimal()]=n.multiplier;else for(var s in n.symbols){var o=n.symbols[s],a=o.power;if(e.Utils.isSymbol(a))throw new e.exceptions.NerdamerTypeError("power cannot be a Symbol");a=o.group===r?0:a.toDecimal(),o.symbols?this.parse(o,i):i[a]=o.multiplier}this.coeffs=i,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,r=0;r<t;r++)void 0===this.coeffs[r]&&(this.coeffs[r]=new g(e));return this},trim:function(){var e=this.coeffs.length;while(e--){var t=this.coeffs[e],r=t.equals(0);if(!t||!r)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,r=0;r<t;r++){var n=this.coeffs[r];if(n<0){for(var i,s=r;s<t;s++)if(this.coeffs[s]>0){i=this.coeffs[s];break}if(i){for(s;s>r;s--)this.coeffs[s]=this.coeffs[s].subtract(new g(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new g(e));n=this.coeffs[r]}}var o=n.mod(e),a=n.subtract(o).divide(e);if(!a.equals(0)){var u=r+1,l=this.coeffs[u]||new g(0);l=l.add(a),this.coeffs[u]=new g(l),this.coeffs[r]=new g(o)}}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),r=0;r<t;r++){var n=this.coeffs[r]||new g(0),i=e.coeffs[r]||new g(0);this.coeffs[r]=n.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),r=0;r<t;r++){var n=this.coeffs[r]||new g(0),i=e.coeffs[r]||new g(0);this.coeffs[r]=n.subtract(i)}return this},divide:function(t){for(var r=this.variable,n=e.Utils.arrayClone(this.coeffs),i=e.Utils.arrayClone(t.coeffs),s=n.length,o=i.length-1,a=[],u=0;u<s;u++){var l=s-(u+1),c=l-o,f=n[l].divide(i[o]);if(c<0)break;a[c]=f;for(var p=0;p<=o;p++)n[p+c]=n[p+c].subtract(i[p].multiply(f))}var h=M.fromArray(n,r||"x").trim(),m=M.fromArray(a,r||"x");return[m,h]},multiply:function(e){for(var t=this.coeffs.length,r=e.coeffs.length,n=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<r;o++){var a=i+o,u=e.coeffs[o],l=n[a]||new g(0);n[a]=l.add(s.multiply(u))}return this.coeffs=n,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++){var r=this.coeffs[t];if(!r.equals(0))return!1}return!0},sub:function(e){for(var t=new g(0),r=this.coeffs.length,n=0;n<r;n++){var i=this.coeffs[n];i.equals(0)||(t=t.add(i.multiply(new g(Math.pow(e,n)))))}return t},clone:function(){var e=new M;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,r=0;r<t;r++)this.coeffs[r]=this.coeffs[r].divide(e);return this},gcd:function(t){var r,n=this.coeffs.length-1,i=t.coeffs.length-1;if(n<i)return t.gcd(this);var s=this;while(!t.isZero()){var o=t.clone();s=s.clone(),r=s.divide(o),t=r[1],s=o}var a=e.Math2.QGCD.apply(null,s.coeffs);if(!a.equals(1))for(var u=s.coeffs.length,l=0;l<u;l++)s.coeffs[l]=s.coeffs[l].divide(a);return s},diff:function(){for(var e=[],t=this.coeffs.length,r=1;r<t;r++)e.push(this.coeffs[r].multiply(new g(r)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,r=0;r<t;r++){var n=new g(r+1);e[n]=this.coeffs[r].divide(n)}return this.coeffs=e,this},gcf:function(t){for(var r=function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t},n=[],i=0;i<this.coeffs.length;i++){var s=this.coeffs[i];s.equals(0)||-1!==n.indexOf(s)||n.push(s)}var o=[e.Math2.QGCD.apply(void 0,n),r(this.coeffs)].toDecimal();if(t){var a=[];a[o[1]-1]=o[0],o=M.fromArray(a,this.variable).fill()}return o},quad:function(e){var t=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var r=this.coeffs[2]||0,n=this.coeffs[1]||0,i=this.coeffs[0],s=n*n-4*r*i;return s<0&&!e?t:(t[0]=(-n+Math.sqrt(s))/(2*r),t[1]=(-n-Math.sqrt(s))/(2*r),t)},squareFree:function(){var e=this.clone(),t=1,r=e.clone().diff(),n=e.clone().gcd(r),i=e.divide(n)[0],s=M.fromArray([new g(1)],e.variable);while(!n.equalsNumber(1)){var o=i.gcd(n),a=i.divide(o)[0];if(!a.equalsNumber(1)&&t>1){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,i=o,n=n.divide(o)[0]}return[s,i,t]},toSymbol:function(){var r=this.coeffs.length,n=this.variable;if(0===r)return new e.Symbol(0);for(var i=r-1,s="",o=0;o<r;o++){var a=o===i?"":"+",u=this.coeffs[o];u.equals(0)||(s+=u+"*"+n+"^"+o+a)}return t.parse(s)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},d.prototype.coeffs=function(e,r){r&&!this.isPoly(!0)&&t.error("Polynomial expected when requesting coefficients with order"),e=e||[];var n=this.clone().distributeMultiplier();if(n.isComposite())for(var i in n.symbols){var s=n.symbols[i];s.isComposite()?s.clone().distributeMultiplier().coeffs(e,r):r?e[s.isConstant()?0:s.power.toDecimal()]=s.multiplier:e.push(s.multiplier)}else if(r)e[n.isConstant(!0)?0:n.power.toDecimal()]=n.multiplier;else if(n.group===c&&n.isImaginary()){var o=new d(n.multiplier);n.each((function(e){(e.isConstant(!0)||e.imaginary)&&(o=t.multiply(o,e))})),e.push(o)}else e.push(n.multiplier);if(r)for(var a=0;a<e.length;a++)void 0===e[a]&&(e[a]=new d(0));return e},d.prototype.tBase=function(e){if("undefined"===typeof e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],r=this.collectSymbols(null,null,null,!0),n=r.length,i=0;i<n;i++){var s=r[i],o=s.group,a=new N(s.multiplier,[],e);if(o===c)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},d.prototype.altVar=function(e){var t=this.multiplier.toString(),r=this.power.toString();return("1"===t?"":t+"*")+e+("1"===r?"":"^"+r)},d.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var r=this.symbols[t],n=e.symbols[t];if(!n)return!1;if(r.value!==n.value)return!1}return!0},d.prototype.groupTerms=function(r){var n,i,s;r=String(r);var o=[];return this.each((function(a){if(a.group===u){s=a.groupTerms(r);for(var l=0;l<s.length;l++){var c=s[l];c&&(o[l]=c)}}else n=e.Utils.decompose_fn(a,r,!0),i=n.x.value===r?Number(n.x.power):0,o[i]=t.add(o[i]||new d(0),n.a)})),o},d.prototype.collectFactors=function(){var e=[];return this.group===c?this.each((function(t){e.push(t.clone())})):e.push(this.clone()),e},S.prototype.getNumberSymbolics=function(){var e=0;return this.each((function(t){t.isConstant(!0)||e++})),e},S.prototype.add=function(r){if(r.equals(0))return this;if(r.equals(-1)&&this.length>0){var n=e.Utils.firstObject(this.factors,null,!0);return this.add(t.symfunction(e.Settings.PARENTHESIS,[n.obj]).negate()),delete this.factors[n.key],this.length--,this}if(r.group===c){var i=this;r.multiplier.equals(1)||i.add(new d(r.multiplier)),r.each((function(e){i.add(e)}))}else{this.preAdd&&(r=this.preAdd(r)),this.pFactor&&(r=t.pow(r,new d(this.pFactor)));var s=r.isConstant();if(s&&r.equals(1))return this;var o=s?r.value:r.text();o in this.factors?(this.factors[o]=t.multiply(this.factors[o],r),this.factors[o].equals(1)&&(delete this.factors[o],this.length--)):(this.factors[o]=r,this.length++)}return this},S.prototype.toSymbol=function(){for(var r=new d(1),n=Object.values(this.factors).sort((function(e,t){return e.group>t.group})),i=0,s=n.length;i<s;i++){var o=n[i],a=o.power.equals(1)?t.symfunction(e.PARENTHESIS,[o]):o;r=t.multiply(r,a)}return""===r.fname&&(r=d.unwrapPARENS(r)),r},S.prototype.merge=function(e){for(var r in e)r in this.factors?this.factors[r]=t.multiply(this.factors[r],e[r]):this.factors[r]=e[r];return this},S.prototype.each=function(t){for(var r in this.factors){var n=this.factors[r];n.fname===e.PARENTHESIS&&n.isLinear()&&(n=n.args[0]),t.call(this,n,r)}return this},S.prototype.count=function(){return f(this.factors).length},S.prototype.clean=function(){try{var t=e.Settings.CONST_HASH;this.factors[t].lessThan(0)&&(this.factors[t].equals(-1)?delete this.factors[t]:this.factors[t].negate(),this.each((function(e){e.negate()})))}catch(r){}},S.prototype.toString=function(){return this.toSymbol().toString()},N.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},N.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var r=this.terms[t];this.getRevMap();r.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},N.prototype.len=function(){return"undefined"===typeof this.count&&this.updateCount(),this.count},N.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var r=new d(this.coeff),n=0;n<this.terms.length;n++){var i=e[n],s=this.terms[n];if(!s.equals(0)&&i!==w){var o=new d(i);o.power=s,r=t.multiply(r,o)}}return r},N.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e={};for(var t in this.map)e[this.map[t]]=t;return this.rev_map=e,e},N.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},N.prototype.getImg=function(){return this.image||this.generateImage(),this.image},N.prototype.fill=function(){for(var t=this.map.length,r=0;r<t;r++)"undefined"===typeof this.terms[r]?this.terms[r]=new e.Frac(0):this.sum=this.sum.add(this.terms[r]);return this},N.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),r=this.terms.length,n=new N(t,[],this.map),i=0;i<r;i++)n.terms[i]=this.terms[i].subtract(e.terms[i]),n.sum=n.sum.add(n.terms[i]);return n},N.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),r=this.terms.length,n=new N(t,[],this.map),i=0;i<r;i++)n.terms[i]=this.terms[i].add(e.terms[i]),n.sum=n.sum.add(n.terms[i]);return n},N.prototype.isZero=function(){return this.coeff.equals(0)},N.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},e.Utils.toMapObj=function(e){for(var t=0,r={},n=0;n<e.length;n++){var i=e[n];"undefined"===typeof r[i]&&(r[i]=t,t++)}return r.length=t,r},e.Utils.filledArray=function(e,t,r){var n=[];while(t--)n[t]=r?new r(e):e;return n},e.Utils.arrSum=function(e){for(var t=0,r=e.length,n=0;n<r;n++)t+=e[n];return t},e.Utils.haveIntersection=function(e,t){var r;return t.length>e.length&&(r=t,t=e,e=r),e.some((function(e){return t.indexOf(e)>-1}))},e.Utils.subFunctions=function(t,r){r=r||{};var n=[];return t.each((function(t){if(t.group===a||t.previousGroup===a){var i=e.Utils.text(t,"hash"),s=r[i];if(s)n.push(t.altVar(s));else{var o=t.fname+f(r).length;r[i]=o,n.push(t.altVar(o))}}else t.group===c||t.group===u||t.group===l?n.push(e.Utils.subFunctions(t,r)):n.push(t.text())})),t.group===l||t.group===u?t.altVar(e.Utils.inBrackets(n.join("+"))):t.group===c?t.altVar(e.Utils.inBrackets(n.join("*"))):t.text()},e.Utils.getFunctionsSubs=function(e){var r={};for(var n in e)r[e[n]]=t.parse(n);return r};var E=e.Algebra={version:"1.4.5",init:void 0,proots:function(r,n){n=n||7;var i=0,o=[],a=function(e,t,r){for(var n=U(e,t,r).concat(o),s=0;s<i;s++)n.unshift(0);return n};if(r instanceof d&&r.isPoly()){if(r.distributeMultiplier(),r.group===u){var l=e.Utils.arrayMin(f(r.symbols)),c=r.symbols[l].clone().toUnitMultiplier();r=t.expand(t.divide(r,c)),o.push(0)}if(r.group===e.groups.S)return[0];if(r.group===e.groups.PL){var p=f(r.symbols),h=e.Utils.arrayMin(p);r=e.PARSER.divide(r,e.PARSER.parse(r.value+"^"+h))}for(var g=f(r.symbols).sort().pop(),v=r.group===e.groups.PL?r.symbols:r.symbols[g],y=v.group,b=(p=y===s?[v.power.toDecimal()]:f(v.symbols),[]),M=e.Utils.arrayMax(p),S=1;S<=M;S++){var N=0;-1!==p.indexOf(S+"")&&(N=y===s?v.multiplier:v.symbols[S].multiplier),b.unshift(N)}return b.push(r.symbols[w].multiplier),v.group===s&&(b[0]=v.multiplier),a(b,p,M)}if(e.Utils.isArray(r)){var E=r,x=(b=[],p=[],0);for(S=0;S<E.length;S++){for(var q=E[S][0],A=E[S][1],C=A-x-1,O=0;O<C;O++)b.unshift(0);b.unshift(q),0!==A&&p.push(A),x=A}M=Math.max.apply(void 0,p);return a(b,p,M)}throw new e.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!");function U(t,r,i){var s=100,o=t.slice(0);if(t.unshift(i),i>s)throw new e.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to "+s+". ");var a=[],u={};for(u.Degree=i,S=0;S<i;S++)a.push(0);var l=a.slice(0);function c(e,t,r,n,i,s){i[0]=s.b=n[0],i[1]=s.a=-t*s.b+n[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+r*s.b)+n[o],s.b=s.a,s.a=i[o]}function f(e,t,r,n,i,s,o,a,u){var l=new Object,f=3;return l.b=l.a=0,c(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])?f:(i.h=a*n,Math.abs(i.d)>=Math.abs(i.c)?(f=2,i.e=r/i.d,i.f=i.c/i.d,i.g=o*n,i.a3=i.e*(i.g+r)+i.h*(n/i.d),i.a1=-r+i.f*n,i.a7=i.h+(i.f+o)*r):(f=1,i.e=r/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*r+(i.g+i.h/i.c)*n,i.a1=-r*(i.d/i.c)+n,i.a7=i.g*i.d+i.h*i.f+r),f)}function p(e,t,r,n,i,s,o,a,u){var l;if(3!=r)if(l=1==r?i:n,Math.abs(s.a1)>10*e*Math.abs(l)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-u[0]*s.a7+u[1];for(c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3+u[c]}else{o[0]=0,o[1]=-u[0]*s.a7;for(c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3}else{o[1]=o[0]=0;for(var c=2;c<t;c++)o[c]=a[c-2]}}function h(e,t,r,n,i,s,o,a,u,l,c,f,p,h,m,g,v){var d,w,y,b,M,S,N,E,x;t.b=t.a=0,3!=e&&(2!=e?(d=r+p*o+f*l,w=a+(p+h*l)*u):(d=(r+c)*l+f,w=(l+p)*a+h*u),y=-m[g-1]/v[g],b=-(m[g-2]+y*v[g-1])/v[g],M=h*b*n,S=y*s,N=y*y*i,E=-(S+N)+M,x=-E+w+y*d,0!=x&&(t.a=-(p*(N+S)+h*(y*n+b*s))/x+p,t.b=h*(1+E/x)))}function g(e,t,r,n){var i,s,o;n.sr=n.si=n.lr=n.li=0,0!=e?0!=r?(i=t/2,Math.abs(i)<Math.abs(r)?(o=r>=0?e:-e,o=-o+i*(i/Math.abs(r)),s=Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(r))):(o=-e/i*(r/i)+1,s=Math.sqrt(Math.abs(o))*Math.abs(i)),o>=0?(s=i>=0?-s:s,n.lr=(-i+s)/e,n.sr=0!=n.lr?r/n.lr/e:n.sr):(n.lr=n.sr=-i/e,n.si=Math.abs(s/e),n.li=-n.si)):n.lr=-t/e:n.sr=0!=t?-r/t:n.sr}function v(e,t,r,n,i,s,o,a,u,l,m,v){var d,w,y,b,M,S,N,E,x,q,A,C,O=new Object,U=0,R=0;r.NZ=0,S=n,E=i;do{if(O.li=O.lr=O.si=O.sr=0,g(1,S,E,O),r.szr=O.sr,r.szi=O.si,r.lzr=O.lr,r.lzi=O.li,Math.abs(Math.abs(r.szr)-Math.abs(r.lzr))>.01*Math.abs(r.lzr))break;for(c(o,S,E,u,s,a),w=Math.abs(-r.szr*a.b+a.a)+Math.abs(r.szi*a.b),q=Math.sqrt(Math.abs(E)),d=2*Math.abs(s[0]),M=-r.szr*a.b,A=1;A<t;A++)d=d*q+Math.abs(s[A]);if(d=d*q+Math.abs(M+a.a),d=(9*d+2*Math.abs(M)-7*(Math.abs(a.a+M)+q*Math.abs(a.b)))*e,w<=20*d){r.NZ=2;break}if(U++,U>20)break;if(U>=2&&b<=.01&&w>=y&&!R){for(b=b<e?Math.sqrt(e):Math.sqrt(b),S-=S*b,E+=E*b,c(o,S,E,u,s,a),A=0;A<5;A++)C=f(e,t,a.a,a.b,m,v,S,E,l),p(e,t,C,a.a,a.b,m,v,l,s);R=1,U=0}y=w,C=f(e,t,a.a,a.b,m,v,S,E,l),p(e,t,C,a.a,a.b,m,v,l,s),C=f(e,t,a.a,a.b,m,v,S,E,l),h(C,a,a.a,m.a1,m.a3,m.a7,a.b,m.c,m.d,m.f,m.g,m.h,S,E,v,t,u),N=a.a,x=a.b,0!=x&&(b=Math.abs((-E+x)/x),S=N,E=x)}while(0!=x)}function d(e,t,r,n,i,s,o,a,u){var l,c,f,p,h,m,g,v,d,w,y,b=n-1;for(t.NZ=y=d=0,g=r.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(f=Math.abs(m),p=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*p+Math.abs(o[w]);if(f<=20*e*(2*l-f)){t.NZ=1,t.szr=g,t.szi=0;break}if(y++,y>10)break;if(y>=2&&Math.abs(v)<=.001*Math.abs(-v+g)&&f>h){d=1,t.a=g;break}for(h=f,u[0]=c=a[0],w=1;w<n;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(v=-m/c,a[0]=o[0],w=1;w<n;w++)a[w]=v*u[w-1]+o[w];else for(a[0]=0,w=1;w<n;w++)a[w]=u[w-1];for(c=a[0],w=1;w<n;w++)c=c*g+a[w];v=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0,g+=v}return d}function w(e,t,r,n,i,s,o,a,u,l,m,g){var w,y,b,M,S,N,E,x,q,A,C,O,U,R,L,I,T,P,_,k,F,D,B,G,j,V=new Object,Z=new Object,z=new Array(t),H=new Array(t),X=1;for(g.NZ=0,M=b=.25,S=n,x=i,V.b=V.a=0,c(u,m,i,a,l,V),w=V.a,y=V.b,Z.h=Z.g=Z.f=Z.e=Z.d=Z.c=Z.a7=Z.a3=Z.a1=0,B=f(e,o,w,y,Z,s,m,i,z),k=0;k<r;k++){if(P=1,p(e,o,B,w,y,Z,s,z,l),B=f(e,o,w,y,Z,s,m,i,z),h(B,V,w,Z.a1,Z.a3,Z.a7,y,Z.c,Z.d,Z.f,Z.g,Z.h,m,i,s,o,a),L=V.a,T=I=V.b,A=0!=s[o-1]?-a[o]/s[o-1]:0,C=U=1,0!=k&&3!=B&&(U=0!=T?Math.abs((T-x)/T):U,C=0!=A?Math.abs((A-S)/A):C,R=U<E?U*E:1,O=C<N?C*N:1,G=R<M?1:0,F=O<b?1:0,F||G)){for(_=0;_<o;_++)H[_]=s[_];for(q=A,D=j=0;;){if(P&&0==(P=0)&&F&&(!G||O<R));else{if(v(e,o,g,L,I,l,u,V,a,z,Z,s),w=V.a,y=V.b,g.NZ>0)return;if(X=j=1,M*=.25,D||!F)X=0;else for(_=0;_<o;_++)s[_]=H[_]}if(0!=X){if(V.a=q,X=d(e,g,V,o,a,u,l,s,z),q=V.a,g.NZ>0)return;if(D=1,b*=.25,0!=X){L=-(q+q),I=q*q;continue}}for(_=0;_<o;_++)s[_]=H[_];if(!G||j)break}c(u,m,i,a,l,V),w=V.a,y=V.b,B=f(e,o,w,y,Z,s,m,i,z)}x=T,S=A,E=U,N=C}}function y(e,t,r,n){var i,s,o,a,u,l,c,f,p,h,m,v,d,y,b,M,S,N,E,x,q,A,C,O,U=e.Degree,R=.017453292519943295,L=Math.LN2,I=e.Degree+1,T=new Array(I),P=new Array(I),_=new Array(I),k=new Array(I),F=new Object,D=new Object;v=1;do{s=v,v/=2,d=1+v}while(d>1);var B=Number.MIN_VALUE/s,G=Math.cos(94*R),j=Math.sin(94*R),V=Math.sqrt(.5),Z=-V;D.NZ=E=0,D.szr=D.szi=D.lzr=D.lzi=0;while(0==t[U])r[E]=n[E]=0,U--,E++;C=U+1;while(U>=1){if(U<=2){U<2?(r[e.Degree-1]=-t[1]/t[0],n[e.Degree-1]=0):(F.li=F.lr=F.si=F.sr=0,g(t[0],t[1],t[2],F),r[e.Degree-2]=F.sr,n[e.Degree-2]=F.si,r[e.Degree-1]=F.lr,n[e.Degree-1]=F.li);break}for(c=0,f=Number.MAX_VALUE,z=0;z<C;z++)h=Math.abs(t[z]),h>c&&(c=h),0!=h&&h<f&&(f=h);if(p=B/f,(p<=1&&c>=10||p>1&&Number.MAX_VALUE/p>=c)&&(p=0==p?Number.MIN_VALUE:p,q=Math.floor(Math.log(p)/L+.5),u=Math.pow(2,q),1!=u))for(z=0;z<C;z++)t[z]*=u;for(var z=0;z<C;z++)P[z]=Math.abs(t[z]);P[U]=-P[U],A=U-1,h=Math.exp((Math.log(-P[U])-Math.log(P[0]))/U),0!=P[A]&&(m=-P[U]/P[A],h=m<h?m:h),m=h;do{h=m,m=.1*h,l=P[0];for(z=1;z<C;z++)l=l*m+P[z]}while(l>0);a=h;do{o=l=P[0];for(z=1;z<U;z++)l=h*l+P[z],o=h*o+l;l=h*l+P[U],a=l/o,h-=a}while(Math.abs(a/h)>.005);i=h;for(z=1;z<U;z++)T[z]=(U-z)*t[z]/U;for(T[0]=t[0],v=t[U],d=t[A],O=0==T[A]?1:0,x=0;x<5;x++)if(y=T[A],O){for(z=0;z<A;z++)E=A-z,T[E]=T[E-1];T[0]=0,O=0==T[A]?1:0}else{M=-v/y;for(z=0;z<A;z++)E=A-z,T[E]=M*T[E-1]+t[E];T[0]=t[0],O=Math.abs(T[A])<=Math.abs(d)*s*10?1:0}for(z=0;z<U;z++)k[z]=T[z];for(x=1;x<=20;x++){if(N=-j*Z+G*V,Z=j*V+G*Z,V=N,b=i*V,S=-2*b,w(s,I,20*x,b,i,T,U,t,C,_,S,D),0!=D.NZ){E=e.Degree-U,r[E]=D.szr,n[E]=D.szi,C-=D.NZ,U=C-1;for(z=0;z<C;z++)t[z]=_[z];1!=D.NZ&&(r[E+1]=D.lzr,n[E+1]=D.lzi);break}for(z=0;z<U;z++)T[z]=k[z]}if(x>20){e.Degree-=U;break}}}y(u,o,l,a);var b=a.length;for(S=0;S<b;S++){var M=m(a[S],n+8),N=m(l[S],n+8);N=n-String(N).length>2?N:l[S];var E=M<0?"-":"";0===N&&(N=""),0===M&&(M=""),M=1===Math.abs(M)?E+"i":M?M+"*i":"";var x=N&&M?N+"+"+M:N+M;l[S]=x.replace(/\+\-/g,"-")}return l}},roots:function(r){if(r.isConstant(!0,!0))return e.Utils.nroots(r);var n=E.proots(r).map((function(e){return t.parse(e)}));return e.Vector.fromArray(n)},froot:function(t,r,n){var i=function(r){var i=1e-12,s=n||e.Utils.build(e.Calculus.diff(t.clone())),o=t instanceof Function?t:e.Utils.build(t),a=1e4,u=!1,l=0;while(!u){var c=r-o(r)/s(r),f=Math.abs(c)-Math.abs(r),p=Math.abs(f);r=c,p<i?u=!0:l>a&&(r=null,u=!0),l++}return r};return i(Number(r))},quad:function(e,r,n){var i=function(e,r,n,i){return t.parse("-("+r+"+"+i+"*sqrt(("+r+")^2-4*("+e+")*("+n+")))/(2*"+e+")")};return[i(e,r,n,1),i(e,r,n,-1)]},sumProd:function(e,t){return E.quad(-t,e,-1).map((function(e){return e.invert()}))},coeffs:function(e,r,n){r=String(r),e=t.expand(e),n=n||[new d(0)],e.group===o&&e.contains(r,!0)&&t.error("Unable to get coefficients using expression "+e.toString());var i=p(e);if(i.length<=1&&i[0]===r)for(var s=new M(e).coeffs.map((function(e){return new d(e)})),a=0,u=s.length;a<u;a++){var f=s[a],h=n[a];h&&(f=t.add(h,f)),n[a]=f}else if(r||t.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===i.indexOf(r))n[0]=t.add(e,n[0]);else if(n=n||[new d(0)],e.group===c){var m=e.symbols[r];m||t.error("Expression is not a polynomial!");var g=Number(m.power);f=t.divide(e.clone(),m.clone()),(f.contains(r,!0)||g<0||!v(g))&&t.error("Expression is not a polynomial!");h=n[g];h&&(f=t.add(h,f)),n[g]=f}else e.group===l&&e.each((function(e){E.coeffs(e.clone(),r,n)}),!0);for(a=0,u=n.length;a<u;a++)"undefined"===typeof n[a]&&(n[a]=new d(0));return n},polyPowers:function(t,n,i){i=i||[];var o=o=t.group;if(o===u&&n===t.value)i=i.concat(f(t.symbols));else if(o===l)for(var a in t.symbols){var p=t.symbols[a],h=(o=p.group,p.value);if(o===s&&n===h)i.push(p.power);else if(o===u||o===l)i=E.polyPowers(p,n,i);else if(o===c&&p.contains(n)){var m=p.symbols[n];m&&i.push(m.power)}else o!==r&&n===h||i.push(0)}else o===c&&t.contains(n)&&i.push(e.Utils.decompose_fn(t,n,!0).x.power);return e.Utils.arrayUnique(i).sort()},Factor:{split:function(e){var r=new d(1),n=new d(1);return E.Factor.factor(e,new S).each((function(e){var i=t.parse(e);e.isConstant(!0)?r=t.multiply(r,i):n=t.multiply(n,i)})),[r,n]},mix:function(e,t){for(var r=f(e),n=r.length,i=[],s=0;s<n;s++){for(var o=r[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(r,n){try{if(r.group===l){for(var i=t.expand(r.clone(),!0).collectSymbols(null,null,(function(e,t){return(t.length||1)-(e.length||1)})),s={},o=[],a=0;a<i.length;a++){var u=i[a];o.push(u.multiplier.clone()),u.each((function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in s?(t<s[e.value][0]&&(s[e.value][0]=t),s[e.value][1].push(e)):s[e.value]=[t,[e]]}))}var c=new d(1);for(var f in s)s[f][1].length===i.length&&(c=t.multiply(c,t.pow(new d(f),new d(s[f][0]))));var p=e.Math2.QGCD.apply(null,o);if(!p.equals(1)){n.add(new d(p));for(a=0;a<i.length;a++)i[a].multiplier=i[a].multiplier.divide(p)}if(!c.equals(1)){n.add(c),r=new d(0);for(a=0;a<i.length;a++)r=t.add(r,t.divide(i[a],c.clone()))}}}catch(h){}return r},zeroes:function(r,n){var i=function(){throw new e.exceptions.ValueLimitExceededError("Exiting")};try{var s,o,a,u,c;r=t.expand(r.clone()),c=r.toString(),s=p(r),a=new d(0);for(var f=[],h=[],m=0,w=s.length;m<s.length;m++){for(var y={},b=0;b<w;b++)m!==b&&(y[s[b]]=0);o=t.parse(c,y);var M=o.power;v(M)||i(),f.push(o),h.push(o.power)}if(e.Utils.allSame(h)){var S=r.length,N=f.length;2===N&&(u=new g(h[0]/(S-1))),3===N&&(u=new g(h[0]/Math.round((Math.sqrt(8*S-1)-3)/2)))}else u=e.Math2.QGCD.apply(null,h);v(u)||i();for(m=0;m<f.length;m++){var x=f[m],q=x.power.clone().divide(u);x.multiplier=new g(Math.pow(x.multiplier,1/q)),x.power=u.clone(),a=t.add(a,x)}if(a.group!==l)return r;while(1){var A=E.div(r.clone(),a.clone());if(!A[1].equals(0))break;if(r=A[0],n.add(a.clone()),r.equals(1))break}}catch(c){}return r},factor:function(e,r){var n=t.parse(e),i=E.Factor._factor(n,r);if(i.equals(e))return i;if(i.group===c){var s=new d(1);i.multiplier.lessThan(0)&&(s.negate(),i.negate()),i.each((function(e){var r=E.Factor._factor(e);r.group===c?r.each((function(e){var r=E.Factor._factor(e);s=t.multiply(s,r)})):s=t.multiply(s,r)})),i=s}return i},quadFactor:function(r,n){if(r.isPoly()&&E.degree(r.equals(2))){var i=e.Utils.variables(r)[0],s=E.coeffs(r,i),o=E.Factor._factor(s[2].clone());if(o.group===c){var a=o.collectSymbols();if(a.length>2)return r;var u=t.multiply(t.parse(s[0]),t.parse(a[0])),l=t.parse(s[1]).negate(),f=t.parse(a[1]),p=E.quad(f,l,u).filter((function(t){if(e.Utils.isInt(t))return t}));if(1===p.length){var m=p[0],g=t.divide(s[0],t.parse(m));e.Utils.isInt(g)&&(n.add(t.parse(h("({0})*({1})+({2})",a[1],i,g))),n.add(t.parse(h("({0})*({1})+({2})",a[0],i,m))),r=new d(1))}}}return r},_factor:function(r,n){if(r.group===a){var i=r.args[0];if(i.group===s&&i.isSimple())return r}else if(r.group===s&&r.isSimple())return r;if(r.group===l){r.distributeMultiplier();var o=new d(0);r.each((function(e){(e.group===l&&e.power.greaterThan(1)||e.group===c)&&(e=t.expand(e)),o=t.add(o,e)})),o.power=r.power,r=o}r.group===a&&"sqrt"!==r.fname&&(r=e.Utils.evaluate(r));var u=r.clone();try{if(r.group===c){var h,m,g,w,y,b;if(h=E.Simplify.strip(r.getDenom()),m=E.Simplify.strip(r.getNum()),g=h.pop(),w=m.pop(),w.equals(r))return r;b=E.Factor.factor(w),y=E.Factor.factor(g);var M=E.Simplify.unstrip(m,b),N=E.Simplify.unstrip(h,y),x=t.divide(M,N);return x}if(r.group===s)return r;if(r.isConstant()){if(r.equals(1))return r.clone();var q=e.Math2.factor(r);return q}var A=r.power.clone();if(v(A)&&(!A.lessThan(0)||r.group!==a)){var C=A.sign();r.toLinear(),n=n||new S;var O={};r=t.parse(e.Utils.subFunctions(r,O)),f(O).length>0&&(n.preAdd=function(r){var n=t.parse(r,e.Utils.getFunctionsSubs(O));return n}),r.isLinear()||(n.pFactor=r.power.toString(),r.toLinear());var U=p(r);r.isImaginary()&&U.push(e.Settings.IMAGINARY);var R=U.length>1;if(R){var L=!0,I=!0;if(r.each((function(e){e.group!==s&&(L=!1),e.multiplier.equals(1)||(I=!1)})),L&&I)return t.pow(t.parse(r,e.Utils.getFunctionsSubs(O)),t.parse(A))}var T=new S;r=E.Factor.coeffFactor(r,T),T.each((function(e){C<0&&e.invert(),n.add(e)}));var P=new S;if(r=E.Factor.powerFactor(r,P),P.each((function(e){C<0&&e.invert(),n.add(e)})),R)r=E.Factor.mfactor(r,n),n.each((function(e){C<0&&e.power.negate()}));else{var _=U[0];r=E.Factor.squareFree(r,n,_);var k=new S;r=E.Factor.trialAndError(r,k,_);var F=k.toSymbol();if(F.equals(u))return F;for(var D in k.factors){var B=k.factors[D];n.add(t.pow(B,t.parse(A)))}r.equals(u)&&(r=E.Factor.quadFactor(r,n))}r=t.parse(r,e.Utils.getFunctionsSubs(O)),n.add(t.pow(r,t.parse(A)));x=n.toSymbol();return x}return r}catch(G){return u}},reduce:function(e,r){if(e.group===l&&2===e.length){var n=e.collectSymbols().sort((function(e,t){return t.multiplier-e.multiplier}));if(n[0].power.equals(n[1].power)){var i=t.parse(n[0].power),s=n[0].clone().toLinear(),o=n[1].clone().toLinear();r.add(t.add(s.clone(),o.clone())),o.negate();for(var a=Number(i),u=new d(0),c=1;c<=a;c++){var f=t.pow(s.clone(),t.subtract(i.clone(),new d(c))),p=t.pow(o.clone(),t.subtract(new d(c),new d(1)));u=t.add(u,t.multiply(f,p))}return u}}return e},squareFree:function(e,t,r){if(e.isConstant()||e.group===s)return e;var n=new M(e,r),i=n.squareFree(),o=i[2];if(1!==o){var a=i[1].toSymbol();return a.power=a.power.multiply(new g(o)),t.add(E.Factor.factor(a)),E.Factor.squareFree(i[0].toSymbol(),t)}return e},powerFactor:function(r,n){if(r.group!==u||r.previousGroup===o)return r;var i=f(r.symbols);if(!e.Utils.allNumeric(i))return r;var s=e.Utils.arrayMin(i),a=new d(0),l=t.parse(r.value+"^"+s);return r.each((function(e){e=t.divide(e,l.clone()),a=t.add(a,e)})),n.add(l),a},coeffFactor:function(t,r){if(t.isComposite()){var n=e.Math2.QGCD.apply(null,t.coeffs());n.equals(1)||t.each((function(e){e.isComposite()?e.each((function(e){e.multiplier=e.multiplier.divide(n)})):e.multiplier=e.multiplier.divide(n)})),t.updateHash(),r&&r.add(new d(n))}return t},trialAndError:function(t,r,n){if(t.isConstant()||t.group===s)return t;for(var i=new M(t,n),o=i.coeffs[0],a=e.Math2.ifactor(o),u=E.proots(t),l=0;l<u.length;l++){var c=u[l],f=1;if(!isNaN(c)){for(var p in a){var h=e.Utils.round(Math.log(p)/Math.log(Math.abs(c)),8);if(v(h)){c=p,f=h;break}}var m=new g(c),d=[new g(m.num).negate()];d[f]=new g(m.den);var w=M.fromArray(d,i.variable).fill(),y=i.divide(w);y[1].equalsNumber(0)&&(i=y[0],r.add(w.toSymbol()))}}return i.equalsNumber(1)||(i=E.Factor.search(i,r)),i.toSymbol()},search:function(t,r,n){n=n||10;var i=t.variable,s=function(e,s,o,a){var u=M.fit(e,s,o,n,a,i);if(u&&u.coeffs.length>1){var l=t.divide(u);if(l[1].equalsNumber(0))return r.add(u.toSymbol()),[l[0],u]}return null},o=t.coeffs[0],a=e.Math2.ifactor(o),u=t.lc(),l=e.Math2.ifactor(u),c=t.sub(n),f=E.Factor.mix(e.Math2.ifactor(c),c<0),p=Math.ceil(t.coeffs.length/2),h=u.lessThan(0),m=o.lessThan(0);l["1"]=1,a["1"]=1;while(p--)for(var g in l)for(var v in a)for(var d=0;d<f.length;d++){var w=s(g,v,f[d],p);if(w)return t=w[0],e.Utils.isPrime(t.sub(n))||(t=E.Factor.search(t,r)),t;w||(h&&m?w=s(-g,-v,f[d],p):h?w=s(-g,v,f[d],p):m&&(w=s(g,-v,f[d],p)))}return t},mSqfrFactor:function(t,r){if(t.group!==a)for(var n=p(t).reverse(),i=0;i<n.length;i++)do{if(n[i]!==t.value){var s=e.Calculus.diff(t,n[i]),o=E.Factor.coeffFactor(s);if(o.equals(0))break;var u=!0;if(o.isConstant()&&t.isComposite()&&t.each((function(e){e.multiplier%o!==0&&(u=!1)}),!0),u){var l=E.div(t,o.clone()),c=l[1].equals(0);if(l[0].isConstant()){r.add(l[0]);break}}else c=!1;c&&(r.add(l[0]),t=o)}else r.add(t),t=new d(1)}while(c);return t},sqdiff:function(r,n){try{var i,o,a=function(t){return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){return d.unwrapPARENS(y.sqrt(y.abs(t)))}),!0)},u=e.Utils.separate(r.clone()),l=[];for(var c in u)"constants"!==c&&l.push(u[c]);if(l.sort((function(e,t){return t.power-e.power})),2===l.length)if(i=l.pop(),o=l.pop(),i.isComposite()&&o.power.equals(2)){o=a(o);var f=E.Factor.factor(t.add(i,u.constants));f.power.equals(2)&&(f.toLinear(),n.add(t.subtract(f.clone(),o.clone())),n.add(t.add(f,o)),r=new d(1))}else if(i=i.powSimp(),o=o.powSimp(),(i.group===s||""===i.fname)&&i.power.equals(2)&&(o.group===s||""===o.fname)&&o.power.equals(2)){if(i.multiplier.lessThan(0)){var p=o;o=i,i=p}i.multiplier.greaterThan(0)&&(i=a(i),o=a(o)),n.add(t.subtract(i.clone(),o.clone())),n.add(t.add(i,o)),r=new d(1)}}catch(h){}return r},mfactor:function(r,n){if(r.group===a)if("sqrt"===r.fname){var i=new S,s=E.Factor.common(r.args[0].clone(),i);s=E.Factor.coeffFactor(s,i),r=t.multiply(t.symfunction("sqrt",[s]),t.parse(r.multiplier)),i.each((function(n){r=t.multiply(r,t.parse(e.Utils.format("sqrt({0})",n)))}))}else n.add(r);else{r=E.Factor.mSqfrFactor(r,n);for(var o=p(r),u=r.collectSymbols().map((function(e){return d.unwrapSQRT(e)})),l={},c={},f=o.length,h=u.length,m=0;m<f;m++){var g=o[m];l[g]=new d(0);for(var w=0;w<h;w++){var y=u[w];if(y.contains(g)){var b=y.value===g?y.power.toDecimal():y.symbols[g].power.toDecimal();(!c[g]||b<c[g])&&(c[g]=b),l[g]=t.add(l[g],y.clone())}}}for(var M in l){var N=t.parse(M+"^"+c[M]),x=t.divide(l[M],N),q=t.expand(x);if(q.equals(1))break;var A=E.div(r.clone(),q);if(A[0].equals(0))break;var C=v(q)&&q.lessThan(0);if(A[1].equals(0)&&!C){var O=E.div(r.clone(),A[0].clone());N=O[0];if(r=O[1],N.equals(-1)&&!r.equals(0))return r;var U=A[0];if(r.equals(U)){var R=E.Factor.reduce(U,n);if(!r.equals(R))return E.Factor.mfactor(R,n)}else if(n.add(U),r.equals(0))return N;return N.isConstant("all")?(n.add(N),N):E.Factor.mfactor(N,n)}}}return r=E.Factor.sqdiff(r,n),r=E.Factor.zeroes(r,n),r}},allLinear:function(e){for(var t=e.length,r=0;r<t;r++)if(!E.isLinear(e[r]))return!1;return!0},isLinear:function(e){var t=!1,n=e.group;if(n===u||n===l)for(var i in t=!0,e.symbols){var f=e.symbols[i],h=f.group;if(h!==a&&h!==o||(t=!1),h===c)t=1===p(f).length;else if(h===u||h===l)t=E.isLinear(f);else if(f.group!==r&&"1"!==f.power.toString()){t=!1;break}}else n===s&&1===e.power&&(t=!0);return t},gcd:function(){var r;if(r=1===arguments.length&&arguments[0]instanceof e.Vector?arguments[0].elements:e.Utils.arguments2Array(arguments),0===r.length)return new d(1);if(1===r.length)return r[0];for(var n=[],i=!1,s=0;s<r.length;s++)if(r[s].group===a&&"gcd"===r[s].fname)r=r.concat(arguments[s].args),r.splice(s,1);else{var o=p(r[s]);if(e.Utils.haveIntersection(o,n)){i=!0;break}n=n.concat(o)}if(i||0===n.length){if(r.every((function(e){return e.getDenom().equals(1)}))){var u=r[0];for(s=1;s<r.length;s++)u=E.gcd_(r[s],u);return u}return t.divide(E.gcd.apply(null,r.map((function(e){return e.getNum()}))),E.lcm.apply(null,r.map((function(e){return e.getDenom()}))))}return t.symfunction("gcd",r)},gcd_:function(r,n){if(r.group!==a&&r.group!==i||(r=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(r)}))),n.group===a&&(n=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(n)}))),r.isConstant()&&n.isConstant())return new d(e.Math2.QGCD(new g(+r),new g(+n)));var s=t.multiply(r.getDenom()||new d(1),n.getDenom()||new d(1)).invert();if(r=t.multiply(r.clone(),s.clone()),n=t.multiply(n.clone(),s.clone()),r=t.expand(r),n=t.expand(n),r.group===c||n.group===c){var u=t.divide(r.clone(),n.clone()),l=t.multiply(n.clone(),u.getDenom().invert());if(!l.equals(1))return l}if(r.group===o||n.group===o){var f=new d(e.Math2.GCD(r.multiplier,n.multiplier)),h=E.gcd_(r.value===w?new d(1):t.parse(r.value),n.value===w?new d(1):t.parse(n.value)),m=E.gcd_(t.parse(r.power),t.parse(n.power));return t.multiply(f,t.pow(h,m))}if(r.length<n.length){l=r;r=n,n=l}var v=p(r),y=p(n);if(v.length===y.length&&1===v.length&&v[0]===y[0]||1===v.length&&0===y.length||0===v.length&&1===y.length)return r=new M(r),n=new M(n),t.divide(r.gcd(n).toSymbol(),s);var b,S=[];r.each((function(e){S.push(e.multiplier)})),n.each((function(e){S.push(e.multiplier)}));while(!n.equals(0)){l=n.clone();if(r=r.clone(),b=E.div(r,l),n=b[1],b[0].equals(0))return t.divide(new d(e.Math2.QGCD(r.multiplier,n.multiplier)),s);r=l}var N=e.Math2.QGCD.apply(void 0,S);return N.equals(1)||r.each((function(e){e.multiplier=e.multiplier.divide(N)})),!r.equals(1)||r.isConstant()||n.isConstant()?t.divide(r,s):t.divide(t.symfunction("gcd",arguments),s)},lcm:function(){var r;1===arguments.length?arguments[0]instanceof e.Vector?r=arguments[0].elements:t.error("lcm expects either 1 vector or 2 or more arguments"):r=e.Utils.arguments2Array(arguments);var n=r.reduce((function(e,r){return t.multiply(e,r.clone())}),new d(1)),i=function(e,t){var r,n,i,s=[],o=Math.pow(2,e.length);for(n=t;n<o;n++){r=[],i=e.length-1;do{0!==(n&1<<i)&&r.push(e[i])}while(i--);r.length==t&&s.push(r)}return s}(arguments,arguments.length-1).map((function(e){return e.reduce((function(e,r){return t.multiply(e,r.clone())}),new d(1))}));if(r.every((function(t){return e.Utils.isVariableSymbol(t)})))var s=t.symfunction("gcd",e.Utils.arrayUnique(i));else s=E.gcd.apply(null,i);return t.divide(n,s)},divide:function(r,n){var i,s,o,a;return o=e.Algebra.Factor.factor(r.clone()),a=o.getDenom(),a.isConstant("all")?a=new d(1):r=t.expand(d.unwrapPARENS(t.multiply(o,a.clone()))),i=E.div(r,n),s=t.divide(i[1],n),t.divide(t.add(i[0],s),a)},div:function(r,n){if(n.isConstant())return r.each((function(e){e.multiplier=e.multiplier.divide(n.multiplier)})),[r,new d(0)];if(r=t.expand(r),n=t.expand(n),r.group===s&&n.group===l){var i=r.value,o=e.Utils.decompose_fn(n.clone(),i,!0);if(r.isLinear()&&o.x&&o.x.isLinear()&&n.isLinear()){var a=d.create(r.multiplier);return[t.divide(a.clone(),o.a.clone()),t.divide(t.multiply(a,o.b),o.a).negate()]}}if(r.group===s&&n.group===s){var u=t.divide(r.clone(),n.clone());return u.isConstant()?[u,new d(0)]:[new d(0),r.clone()]}var c=r.hasFunc(),f=n.hasFunc(),h=!1;if(c||f){h=!0;var m={},v=(r=t.parse(e.Utils.subFunctions(r,m)),n=t.parse(e.Utils.subFunctions(n,m)),e.Utils.getFunctionsSubs(m))}var y,b,S=e.Utils.arrayUnique(p(r).concat(p(n)));if((r.isImaginary()||n.isImaginary())&&S.push(e.Settings.IMAGINARY),1===S.length){var E=new M(r).divide(new M(n));y=E[0].toSymbol(),b=E[1].toSymbol()}else{S.push(w);var x=function(e){for(var r=new d(0),n=0;n<e.length;n++){var i=e[n].toSymbol();r=t.add(r,i)}return r},q=function(e,t){var r,n=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(n)&&(r=s,i++),i>1)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(n)){r=s;break}return[n,r,e]},A=function(e,t){t=t||0;var r=e[t],n=e.length;if(r){for(var i,s,o=q(r),a=t+1;a<n;a++){var u=e[a],l=r.sum.equals(u.sum);if(!l&&o)break;if(l){for(var c,f,p,h,m=r.terms.length,g=0;g<m;g++){var v=r.terms[g],d=u.terms[g];("undefined"===typeof c||v.greaterThan(c))&&(c=v,p=g),("undefined"===typeof f||d.greaterThan(f))&&(f=d,h=g)}var w=c.subtract(u.terms[p]),y=f.subtract(r.terms[h]);if(y>w){o=[f,h,u];break}if(w>y){o=[c,p,r];break}}else if(o=q(u),o)break;o=q(u)}if(!o)return q(e[0],!0);for(a=0;a<L.length;a++){var b=L[a].terms;if(s=o[1],s===b.length-1)return;if(i=b[s],!i.equals(0))break}return i.equals(0)?A(e,++t):o}},C=e.Utils.toMapObj(S),O=function(e,t){return t.sum.subtract(e.sum)},U=function(e,t){if(!e||!t)return!1;for(var r=0;r<e.terms.length;r++)if(e.terms[r].lessThan(t.terms[r]))return!1;return!0},R=r.tBase(C).sort(O),L=n.tBase(C).sort(O),I=U(R[0],L[0])&&R[0].count>L[0].count?L:R,T=A(I),P=[];if(T){var _=T[1],k=function(e,t){return!e[0].sum.equals(t[0].sum)||e.length>=t.length},F=function(e,t,r){for(var n=[],i=0;i<e.length;i++)for(var s=e[i],o=0;o<s.terms.length;o++){var a=n[o],u=s.terms[o];0===i?n[o]=u:a&&!a.equals(u)&&(n[o]=void 0)}for(i=0;i<n.length;i++){s=n[i];if(s&&!s.equals(0))return i}return r},D=function(e,t){var r=e.len(),n=t.len(),i=t.terms[_],s=e.terms[_];return n>r&&i.greaterThan(s)?n-r:i.subtract(s)};_=F(R,L,_),R.sort(D),L.sort(D);var B=L[0],G=R[0],j=new N(new g(1),[],G.map);if(B.sum.greaterThan(G.sum)&&G.len()>1)for(var V=0;V<G.terms.length;V++){var Z=B.terms[V].subtract(G.terms[V]);if(Z.equals(0))j.terms[V]=new g(0);else{var z=Z.add(new g(1));j.terms[V]=Z;for(var H=0;H<R.length;H++)R[H].terms[V]=R[H].terms[V].add(z)}}var X=U(R[0],L[0]);while(X&&k(R,L)){E=R[0].divide(L[0]);P.push(E),R.shift();for(V=1;V<L.length;V++){var $=L[V].multiply(E).generateImage(),Q=R.length;0===Q&&($.coeff=$.coeff.neg(),R.push($),R.sort(D));for(H=0;H<Q;H++){var Y=R[H];if(Y.getImg()===$.getImg()){Y.coeff=Y.coeff.subtract($.coeff),Y.coeff.equals(0)&&(e.Utils.remove(R,H),H--);break}H===Q-1&&($.coeff=$.coeff.neg(),R.push($),R.sort(D))}}if(X=U(R[0],L[0]),!X&&R.length>=L.length)for(V=1;V<R.length;V++)if(X=U(R[V],L[0]),X){R.unshift(e.Utils.remove(R,V));break}}}y=x(P),b=x(R),"undefined"!==typeof j&&(j=j.toSymbol(),y=t.divide(y,j.clone()),b=t.divide(b,j))}return h&&(y=t.parse(y.text(),v),b=t.parse(b.text(),v)),[y,b]},line:function(r,n,i){e.Utils.isArray(r)&&(r=e.Utils.convertToVector(r)),e.Utils.isArray(n)&&(n=e.Utils.convertToVector(n)),i=t.parse(i||"x"),e.Utils.isVector(r)&&e.Utils.isVector(n)||t.error('Line expects a vector! Received "'+r+'" & "'+n+'"');var s=t.subtract(n.e(1).clone(),r.e(1).clone()),o=t.subtract(n.e(2).clone(),r.e(2).clone()),a=t.divide(o,s),u=t.multiply(i,a.clone()),l=t.multiply(r.e(1).clone(),a);return t.add(t.subtract(u,l),r.e(2).clone())},PartFrac:{createTemplate:function(e,r,n,i){var o,u,l,c,f,p,h;e=E.Factor.factor(e),e.each((function(t,r){if(t.group===a&&""===t.fname&&t.args[0].group===s){var n=t.args[0];this.symbols?(delete this.symbols[r],this.symbols[n.value]=n):e=t.args[0]}})),o=r.collectFactors(),u=[],p=[],h=new d(1);for(var m=0;m<o.length;m++){var g=d.unwrapPARENS(o[m]);if(g.power.greaterThan(1)){c=Number(g.power),l=g.clone().toLinear(),f=Number(E.degree(l,i));for(var v=0;v<c;v++){var w=t.pow(l.clone(),new d(v+1));n.push(w.clone());var y=t.divide(e.clone(),w.clone());p.push(f),u.push(y)}}else{f=Number(E.degree(g,i)),n.push(g);y=t.divide(e.clone(),g.clone());y=t.expand(d.unwrapPARENS(y)),p.push(f),u.push(y)}}return n=n.map((function(e){return t.multiply(e,h.clone())})),[n,u,p]},partfrac:function(r,n,i){var s=p(r);n=n||t.parse(s[0]);try{var o,a,u,l,c,f,h,m,g,v,w,y,b,M,S,N,x,q,A;if(o=t.expand(r.getNum()),a=t.expand(r.getDenom().toUnitMultiplier()),o.multiplier=r.multiplier,c=o.groupTerms(n),Number(E.degree(o,n))>=Number(E.degree(a,n))?(y=E.div(o.clone(),t.expand(a.clone())),b=y[0],o=y[1],c=o.groupTerms(n)):b=new d(0),1===Number(E.degree(a,n))){var C=t.divide(o,a);return i?[b,C]:t.add(b,C)}l=E.Factor.factor(a),N=E.PartFrac.createTemplate(a.clone(),l,[],n),x=N[0],M=N[1],f=N[2],w=[c.length],h=[],u=[],S=[],M.map((function(e,r){q=x[r],A=f[r];for(var i=0;i<A;i++){u.push(q.clone());var s=d.create(n,i),o=t.expand(t.multiply(e,s.clone())).groupTerms(n),a=o.length;w.push(a),h.push(o),S.push(s.clone())}})),m=e.Utils.arrayMax(w),v=new e.Matrix(e.Utils.fillHoles(c,m)).transpose(),g=new e.Matrix;for(var O=0;O<h.length;O++)g.elements.push(e.Utils.fillHoles(h[O],m));var U=t.multiply(g.transpose().invert(),v),R=i?[b]:b;return U.each((function(e,r){var n=t.multiply(S[r],t.divide(e,u[r]));i?R.push(n):R=t.add(R,n)})),R}catch(L){}return r}},degree:function(r,n,i){if(i=i||{nd:[],sd:[],depth:0},!n){var a=p(r);if(a.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new d(0);n=t.parse(a[0])}var u=r.group;r.isComposite()?(r=r.clone(),r.distributeExponent(),r.each((function(e){i.depth++,E.degree(e,n,i),i.depth--}))):r.group===c?r.each((function(e){i.depth++,E.degree(e,n,i),i.depth++})):u===o&&r.value===n.value?i.sd.push(r.power.clone()):u===s&&r.value===n.value?i.nd.push(t.parse(r.power)):i.nd.push(new d(0));var l=i.nd.length>0?e.Utils.arrayMax(i.nd):void 0;return 0===i.depth&&i.sd.length>0?(void 0!==l&&i.sd.unshift(l),t.symfunction("max",i.sd)):(e.Utils.isSymbol(l)||(l=t.parse(l)),l)},sqComplete:function(r,n,i){e.Utils.isSymbol(n)||(n=t.parse(n));var s,o,a,u,l,c,f,p,h,m,g,v=function(t){throw t=t||"Stopping",new e.exceptions.ValueLimitExceededError(t)};return r.isPoly()||v("Must be a polynomial!"),h=e.Utils.inBrackets,r=r.clone(),s=e.Algebra.degree(r,n),s.equals(2)||v("Cannot complete square for degree "+s),f=e.Algebra.coeffs(r,n),o=f[2],p=f[1].sign(),a=t.divide(f[1],new d(2)),u=t.pow(a.clone(),new d(2)),i?[o,a,l]:(g=y.sqrt(o),c=t.divide(y.sqrt(u),g.clone()),l=t.subtract(f[0],t.pow(c.clone(),new d(2))),m=t.parse(h(g.clone()+"*"+n+(p<0?"-":"+")+c)),{a:m,c:l,f:t.add(t.pow(m.clone(),new d(2)),l.clone())})},Simplify:{strip:function(e){var r=t.parse(e.multiplier);e.toUnitMultiplier();var n=t.parse(e.power);return e.toLinear(),[r,n,e]},unstrip:function(e,r){var n=e[0],i=e[1];return t.multiply(n,t.pow(r,i))},complexSimp:function(e,r){var n,i,s,o,a,u,l,c,f;return u=e.realpart(),c=e.imagpart(),l=r.realpart(),f=r.imagpart(),n=t.multiply(u.clone(),l.clone()),i=t.multiply(c.clone(),f.clone()),s=t.multiply(l.clone(),c),o=t.multiply(u,f.clone()),a=t.add(t.pow(l,new d(2)),t.pow(f,new d(2))),t.divide(t.add(t.add(n,i),t.multiply(t.subtract(s,o),d.imaginary())),a)},trigSimp:function(r){if(r.containsFunction(["cos","sin","tan"])){r=r.clone();var n=E.Simplify.strip(r);r=n.pop();var i=r.clone();if(r.group===l){var s=new d(0);r.each((function(e){var r=E.Simplify.trigSimp(e.fnTransform());s=t.add(s,r)}),!0),i=t.pow(t.multiply(new d(r.multiplier),s),new d(r.power))}else if(r.group===c){var o=r.getNum(),a=r.getDenom();if("sin"===o.fname&&"cos"===a.fname&&o.args[0].equals(a.args[0])&&o.power.equals(a.power)&&(i=t.parse(e.Utils.format("({0})*({1})*tan({2})^({3})",a.multiplier,o.multiplier,o.args[0],o.power))),i.group===c){var u=new d(1);i.each((function(r){"tan"===r.fname&&(r=t.parse(e.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",r.multiplier,E.Simplify.simplify(r.args[0]),r.power))),u=t.multiply(u,r)})),i=u}}i=E.Simplify.unstrip(n,i).distributeMultiplier(),r=i}return r},fracSimp:function(e){var r=e.getDenom(),n=e.getNum();if(n.isImaginary()&&r.isImaginary()&&(e=E.Simplify.complexSimp(n,r)),e.isComposite()){var i,s,o,a,u,l,c,f,p,h,m=e.collectSymbols();s=m.pop();while(m.length)o=m.pop(),a=t.parse(s.getDenom()),u=t.parse(o.getDenom()),l=s.getNum(),c=o.getNum(),h=t.multiply(a.clone(),u.clone()),f=t.multiply(l,u),p=t.multiply(c,a),s=t.divide(t.add(f,p),h);return r=t.expand(s.getDenom()),n=t.expand(s.getNum()),i=n.isImaginary()&&r.isImaginary()?E.Simplify.complexSimp(n,r):t.divide(n,r),i.equals(e)?i:E.Simplify.simplify(i)}return e},ratSimp:function(e){if(e.group===c){var r=E.Simplify.fracSimp(e.getDenom()),n=E.Simplify.fracSimp(e.getNum());e=t.divide(n,r)}return e},simplify:function(r){var n,i=E.Simplify.strip(r);if(r=i.pop(),r=E.Simplify.fracSimp(r),r.isConstant()||r.group===e.groups.S){i.push(r);var s=E.Simplify.unstrip(i,r);return s}if(r=r.clone(),n=E.Simplify.trigSimp(r),n=E.Simplify.ratSimp(n),n=E.Factor.factor(n),n.group===e.groups.CP&&n.isLinear()){var o=n.multiplier.clone();n.toUnitMultiplier();var a=new d(0);n.each((function(e){var r=E.Simplify.simplify(e);a=t.add(a,r)})),n=a,a.multiplier=a.multiplier.multiply(o)}var u=E.Simplify.unstrip(i,b(n));return u}},Classes:{Polynomial:M,Factors:S,MVTerm:N}};n.useAlgebraDiv=function(){var r=E.divideFn=t.divide,n=0;t.divide=function(t,i){var s;return n++,s=1===n?e.Algebra.divide(t,i):r(t,i),n=0,s}},n.useParserDiv=function(){E.divideFn&&(t.divide=E.divideFn),delete E.divideFn},n.register([{name:"factor",visible:!0,numargs:1,build:function(){return E.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return E.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return E.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return E.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return E.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return E.divide}},{name:"div",visible:!0,numargs:2,build:function(){return E.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return E.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return E.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){var t=function(){var t=E.coeffs.apply(E,arguments);return new e.Vector(t)};return t}},{name:"line",visible:!0,numargs:[2,3],build:function(){return E.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){var e=function(e,t){try{t=t||p(e)[0];var r=E.sqComplete(e.clone(),t);return r.f}catch(n){return e}};return e}}]),n.api()}()}});
//# sourceMappingURL=chunk-28959806.073cde2ce94d5b307e71.worker.js.map