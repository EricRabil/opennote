{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/function-bind-context.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/nerdamer/nerdamer.core.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/an-instance.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack:///./node_modules/core-js/internals/engine-is-ios.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/iterate.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/internals/set-species.js","webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./node_modules/core-js/internals/task.js","webpack:///./node_modules/core-js/internals/engine-v8-version.js","webpack:///./node_modules/core-js/internals/engine-user-agent.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/nerdamer/Calculus.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/core-js/internals/host-report-errors.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/core-js/internals/define-iterator.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/modules/es.array.every.js","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/algebra.worker.ts","webpack:///./node_modules/core-js/internals/array-method-uses-to-length.js","webpack:///./node_modules/core-js/internals/iterators-core.js","webpack:///./node_modules/nerdamer/Algebra.js","webpack:///./node_modules/core-js/internals/object-to-string.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/internals/microtask.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/promise-resolve.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/modules/es.object.to-string.js","webpack:///./node_modules/core-js/internals/set-to-string-tag.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/redefine-all.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/perform.js","webpack:///./node_modules/core-js/modules/es.promise.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/dom-iterables.js","webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wellKnownSymbol","TO_STRING_TAG","test","String","aFunction","fn","that","length","undefined","a","b","apply","arguments","toIndexedObject","nativeGetOwnPropertyNames","f","toString","windowNames","window","getOwnPropertyNames","getWindowNames","it","error","slice","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","O","P","fails","createElement","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","arrayPush","push","min","Math","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","separator","limit","string","this","lim","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","index","splitter","regexp","res","done","rx","S","C","unicodeMatching","q","A","e","z","classof","R","exec","result","TypeError","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","nerdamer","imports","version","_","Parser","bigInt","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","roots","x","y","j","nthpow","pow","N","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","message","stack","isReserved","indexOf","allSame","arr","last","equals","warn","SHOW_WARNINGS","console","validateName","typ","regex","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","zero","parts","toLowerCase","pop","coeff_array","Array","join","dec","isPrime","floor","sqrt","isNumber","allNumeric","isFraction","isSymbol","multiplier","toDecimal","obj","isExpression","Expression","variables","poly","vars","add","isNaN","group","prevgroup","previousGroup","power","symbols","firstObject","args","sort","arraySum","sum","map","separate","symbol","expand","insert","sym","clone","each","isConstant","fname","fillHoles","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","isVariableSymbol","isArray","isInt","isNegative","lessThan","stringify","inBrackets","str","stringReplace","from","to","with_str","substr","customType","custom","sameSign","format","shift","new_str","replace","arg","range","start","end","step","keys","both","compare","sym1","sym2","comparison","scope","random","block","parse","setFunction","params_array","body","functions","mapped_function","params","arrayMax","max","arrayMin","arrayClone","new_array","arrayAddSlices","slices","delta","retval","nroots","unwrapPARENS","toLinear","_roots","toPolarFormArray","evaluate","den","formula","fromArray","root","negate","multiply","imaginary","comboSort","combined","na","nb","decompose_fn","wrt","as_obj","ax","stripVar","subtract","divide","nround","Number","MAX_VALUE","round","getU","u","v","clearU","indx","even","evenFraction","arrayUnique","item","removeDuplicates","condition","conditionType","seen","temp","reserveNames","remove","indexOrKey","splice","setting","opt","current_setting","importFunctions","arguments2Array","getCoeffs","coeffs","term","contains","coeff","convertToVector","vector","elements","generatePrimes","upto","last_prime","allNumbers","allConstants","isPi","isE","DivisionByZero","ParseError","UndefinedError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","exceptions","Big","cos","sin","Math2","csc","sec","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","h","derivative","median","values","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","epsilon","EPSILON","idx","bigpow","Frac","isInteger","nthroot","gamma","g","bigfactorial","times","bigLog","quick","k","invert","factorial","is_int","NaN","dfactorial","GCD","QGCD","gcd","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","lcprime","prime","lt","rho","xf","cz","mod","minus","sm","boxfactor","safety","fib","integer_part","simpson","get_value","side","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","V1","V2","maxDepthCount","integrate","Ci","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","decimal","text","option","useGroup","asHash","wrapCondition","valueOf","frac","negative","quotient","digits","passed","prefix","cycle","numer","denom","divmod","remainder","operator","om","collectSymbols","pg","pwg","isComposite","charAt","cv","parens","primeFactors","Scientific","startsWith","isScientific","fromScientific","convert","simple","Fraction","isInfinity","bin","preprocessors","names","actions","Slice","upper","lower","Token","node","node_type","column","type","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","atan2","greaterThan","symfunction","trig","isImaginary","getQuadrant","isLinear","trigh","infinity","units","action","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","radians","degrees","continued_fraction","scientific","pfactor","matrix","imatrix","determinant","size","transpose","dot","cross","vecget","vecset","vectrim","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","IF","is_in","conjugate","polarform","rectform","union","intersection","difference","intersects","is_subset","print","findFunction","fmodules","fmodule","override","which","with_what","restore","what","extend","force_call","extended","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","USE_BIG","bigConvert","operator_filter_regex","ostr","filter","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","prepare_expression","group1","group2","first","before","e_org","g1","g2","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","callPeekers","tokenize","trim","col","L","lpos","tokens","scopes","target","open_brackets","has_space","SPACE","EMPTY_STRING","COMMA","MINUS","MULT","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","adjust_column_position","last_token_is_numeric","is_multiplication","bracket","pair","prev","nxt","is_operator","toRPN","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","next_is_comma","il","element","subbed","isUnit","toHTML","indent","tab","repeat","html","tree","location","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","ms","distributeMultiplier","V","M","getDenom","getNum","_symbol","cf","symbol1","symbol2","rows","l2","cols","is_negative","img","setPower","qa","tw","nn","rem","toUnitMultiplier","isOne","sigfigs","asbig","theta","original","symMinMax","numVal","SYMBOLIC_MIN_MAX","getval","aval","bval","base","log_sym","log_base","img_part","sIsConstant","toExponential","quadrant","isFinite","clean","new_num","new_den","pn","hascomposites","sp","sub","composites","non_composites","isDenom","prod","finalResult","identity","tolerance","col_index","vec1","vec2","mat","set1","set2","testSQRT","absEquals","testPow","fct","toTeX","expression_or_obj","TeX","cdot","nobj","LaTeX","braces","expr","lb","ub","argSplit","latex","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","ONN","gt","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","isEven","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","abs_b","sgn","aa","_a","_b","a1","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","txt","first_arg","buildFunction","Build","build","isPolynomial","isPoly","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","variable","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","copy","rounded","next_two","ed","is_neg","isFrac","nstr","m_dc","simplify","neg","narr","unshift","qcompare","isnegative","lcm","div","unwrapSQRT","all","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","concat","isCombination","opts","qc","quickConversion","fullConversion","parseInt","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","LN","dim","liminf","inverted","t_varray","input","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","bracketTypes","square","brace","angle","filterTokens","filtered","raw_tokens","parse_next","items","lw","rl","el","arrayPrefill","val","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","isSquare","toRightTriangular","isSingular","augment","rr","np","els","divisor","new_element","ki","kp","inverse_elements","nel","fel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","_intersection","dependencies","_rename","reformat","deps","getProperName","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","f_array","alias","Function","LOG_FNS","Utils","groups","PARSER","libExports","fndec","multi_options","convertToLaTeX","convertFromLaTeX","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","ref_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","disallowed","api","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractAny","subtractSmall","multiplyLong","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","multiplySmallAndArray","a_j","divMod1","quotientDigit","divisorMostSignificantDigit","divModSmall","divMod2","guess","xlen","highx","highy","check","part","reverse","divModAny","self","qSign","mSign","isBasicPrime","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","small","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","low","high","restricted","digit","absBase","charCodeAt","charCode","parseBaseFromArray","toBase","out","toBaseString","parseStringValue","decimalPlace","isValid","parseNumberValue","zeros","toJSON","minusOne","isInstance","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","W","J","cubeRoot","cbrt","Z","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","U","naturalExponential","H","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","toDecimalPlaces","toDP","toFraction","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","T","LN10","toPrecision","toSignificantDigits","toSD","truncated","G","I","search","$","K","X","Y","en","rn","sn","on","un","cn","defaults","getRandomValues","randomBytes","hn","an","dn","gn","wn","Nn","En","Mn","yn","qn","Uint32Array","On","Fn","An","Dn","Zn","Pn","Rn","Ln","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","Constructor","getBuiltIn","ITERATOR","SAFE_CLOSING","called","iteratorWithReturn","SKIP_CLOSING","ITERATION_SUPPORT","userAgent","V8_VERSION","SPECIES","METHOD_NAME","array","foo","Boolean","isArrayIteratorMethod","getIteratorMethod","callWithSafeIterationClosing","Result","stopped","iterate","iterable","AS_ENTRIES","IS_ITERATOR","iterator","iterFn","boundFunction","stop","toInteger","integer","redefine","setGlobal","copyConstructorProperties","isForced","options","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","sham","internalObjectKeys","enumBugKeys","hiddenKeys","notARegExp","correctIsRegExpLogic","proto","includes","searchString","TO_STRING","RegExpPrototype","nativeToString","NOT_GENERIC","INCORRECT_NAME","rf","unsafe","definePropertyModule","CONSTRUCTOR_NAME","configurable","IS_PURE","nativeStartsWith","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","writable","defer","channel","port","IS_IOS","setImmediate","clearImmediate","process","MessageChannel","Dispatch","queue","ONREADYSTATECHANGE","run","runner","listener","event","data","post","postMessage","protocol","host","nextTick","now","port2","port1","onmessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","versions","v8","Iterators","objectKeys","defineProperties","Properties","isObject","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","iterated","point","EXP","SIN","COS","TAN","SEC","CSC","COT","ASIN","ACOS","ATAN","ASEC","ACSC","ACOT","SINH","COSH","TANH","CSCH","SECH","COTH","ASECH","ACSCH","ACOTH","NoIntegralFound","hasIntegral","fnTransform","toCommonDenominator","Algebra","in_inverse_trig","inv_trig_fns","in_trig","trig_fns","in_htrig","all_functions","cosAsinBtransform","cosAsinBtranform","cosAsinAtransform","cosAsinAtranform","sinAsinBtransform","trigTransform","integration_depth","__","Calculus","modifier","nth","derive","polydiff","product_rule","qdiff","x_","y_","altVal","df","integration","u_substitution","try_combo","do_fn_sub","poly_integrate","dc","decompose_arg","xp","dc2","new_val","by_parts","integrated","Factor","partial_fraction","partial_fractions","PartFrac","partfrac","get_udv","setSymbol","dv","trig_sub","du","integral","udv","vdu","uv","integral_vdu","vdu_s","is_cyclic","original_symbol","dt","decomp","b_is_positive","unwrapAbs","L1","L2","br","sqrt_a","sqrt_ax","sqa","sqb","aob","bsqi","factored","was_factored","degree","fx","sqComplete","u_du","ag","decomposed","a_","b_","rd","rd2","parse_str","cfsymbol","unwrapped","fn1","fn2","arg1","arg2","new_sym","p1_even","p2_even","double_angle","trans","transformed","sym1_is_linear","pd","pc","f_is_linear","dummy","bksub","u_transform","expanded","U2","Classes","Factors","coeffFactor","cosn","sym2_clone","sa","sb","nq","syma","symb","intg","defint","Limit","interval","diverges","lim1","lim2","indeterminate","t_symbol","rewriteToLog","getSubbed","isInterval","isConvergent","_num","_den","symbol_","lim_base","lim_pow","evaluates","trial","s_arg","divergent","_lim","Fresnel","propertyIsEnumerable","UNSCOPABLES","ArrayPrototype","MATCH","defaultConstructor","getOwnPropertySymbols","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","fromIndex","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","createProperty","arrayLike","argumentsLength","mapfn","mapping","iteratorMethod","argument","regExpExec","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","nativeReplace","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","fullUnicode","results","matchStr","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","capture","store","copyright","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","bitmap","webpackPolyfill","deprecate","paths","children","CONVERT_TO_STRING","pos","second","codeAt","originalArray","NATIVE_WEAK_MAP","objectHas","sharedKey","WeakMap","enforce","TYPE","wmget","wmhas","wmset","metadata","STATE","inspectSource","enforceInternalState","TEMPLATE","path","wrappedWellKnownSymbolModule","NAME","activeXDocument","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","style","display","src","contentWindow","document","open","NullProtoObject","domain","ActiveXObject","createIteratorConstructor","getPrototypeOf","setPrototypeOf","setToStringTag","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","KEYS","VALUES","ENTRIES","returnThis","Iterable","IteratorConstructor","DEFAULT","IS_SET","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","propertyKey","functionToString","nativeEndsWith","endsWith","endPosition","len","regexpFlags","stickyHelpers","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","charsAdded","strCopy","feature","detection","normalize","POLYFILL","NATIVE","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","method","AsyncIterator","invoke","resolve","reject","record","Promise","__await","then","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","skipTempReset","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","arraySpeciesCreate","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","returnMethod","nativeDefineProperty","Attributes","RE","IndexedObject","nativeJoin","ES3_STRINGS","ACCESSORS","0","1","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","deleteCount","insertCount","actualDeleteCount","actualStart","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","nativeObjectCreate","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","shared","uid","defineWellKnownSymbol","HIDDEN","SYMBOL","TO_PRIMITIVE","ObjectPrototype","$stringify","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","tag","description","$defineProperty","$defineProperties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","$getOwnPropertyDescriptor","$getOwnPropertyNames","IS_OBJECT_PROTOTYPE","setter","keyFor","useSetter","useSimple","FORCED_JSON_STRINGIFY","$replacer","$every","every","checkCorrectnessOfIteration","INCORRECT_ITERATION","dotAll","_defineProperty","_arrayWithHoles","_iterableToArray","_nonIterableRest","_toArray","arrayWithHoles","iterableToArray","nonIterableRest","_iterableToArrayLimit","_arr","_n","_d","_e","_s","_i","_slicedToArray","iterableToArrayLimit","_classCallCheck","instance","_defineProperties","props","_createClass","protoProps","staticProps","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","__decorate","decorators","desc","Reflect","decorate","globalThis","fakePos","line","offset","fakeLocation","kind","nodes","isGroup","isTextString","collapseGroup","condenseSiblings","sib","siblings","firstChar","debug","wasCommand","flat","isFunc","astToExpressionTree","command","aliases","replaceFunctionReferencesWithLiterals","flattenContentForEvaluation","shouldDerive","count","countDirective","isShorthand","respectTo","derived","subscript","superscript","strContent","definite","__var__","__flags__","noVarSubInPostProcessing","startStr","stopIdx","contentStr","startIdx","nonce","cache","thrower","argument0","argument1","PrototypeOfArrayIteratorPrototype","arrayIterator","math","Polynomial","fill","MVTerm","terms","image","fit","c2","equalsZero","modP","up_one","dividend","mp","x1","x2","lc","monic","mp1","mp2","gcf","toPolynomial","fnz","ca","parr","quad","incl_img","dsc","squareFree","equalsNumber","toSymbol","with_order","tBase","nterm","updateCount","altVar","sameVars","groupTerms","egrouped","grouped","collectFactors","getNumberSymbolics","fo","preAdd","pFactor","is_constant","getRevMap","rev_map","mapped","generateImage","getImg","mvterm","new_mvterm","toMapObj","filledArray","clss","arrSum","haveIntersection","some","subFunctions","tvar","getFunctionsSubs","init","proots","decp","known_roots","get_roots","rarr","calcroots","lowest_pow","lowest_symbol","minpower","last_power","MAXDEGREE","zeroi","degreePar","Degree","zeror","QuadSD_ak1","NN","iPar","calcSC_ak1","DBL_EPSILON","qk","sdPar","dumFlag","a3","a7","nextK_ak1","tFlag","qp","newest_ak1","a4","a5","b2","c3","c4","Quad_ak1","si","lr","li","QuadIT_ak1","uu","vv","calcPar","ee","omp","relstp","ui","vi","zm","qPar","triedFlag","NZ","szr","szi","lzr","lzi","RealIT_ak1","kv","pv","nm1","Fxshfr_ak1","MDP1","betas","betav","oss","ots","otv","ovv","ss","ts","tss","tv","tvv","fflag","spass","stry","vpass","vtry","svk","iFlag","rpSolve","degPar","bnd","ff","moduli_max","moduli_min","sc","xm","bb","xxx","jj","NM1","zerok","RADFAC","LB2","LN2","Fxshfr_Par","LO","MIN_VALUE","cosr","sinr","xx","yy","real","froot","newtonraph","mesh","sumProd","polyPowers","for_variable","mix","include_negatives","ll","common","exit","n_terms","n_zeroes","_factor","_factored","quadFactor","root1","root2","untouched","den_array","num_array","dfact","nfact","Simplify","strip","unstrip","multiVar","all_S","all_unit","coeff_factors","power_factors","powerFactor","mfactor","t_factors","trialAndError","tf_symbol","t_factor","reduce","sqfr","cnst","cfactors","candidate","ltfactors","nfactors","lc_is_neg","cnst_is_neg","factor_found","mSqfrFactor","can_divide","is_factor","sqdiff","remove_square","separated","obj_array","constants","factors2","sorted","maxes","new_factor","divided","neg_numeric_factor","allLinear","status","sg","appeared","aggregate","gcd_","gcd_m","gcd_v","gcd_p","vars_a","vars_b","multipliers","curr","denom_args","mask","total","symbol1_has_func","symbol2_has_func","parse_funcs","quot","reconvert","get_unique_max","any","get_det","lookat","umax","is_equal","max1","max2","idx1","idx2","item1","item2","cterm","t_map","init_sort","is_larger","s1","lead_var","try_better_lead_var","checked","tt","sf","blv","alv","fdt","fnt","nd","dividend_larger","cur","dy","createTemplate","denom_factors","factors_vec","efactor","as_array","ofactors","nterms","dterms","ks","template","tfactors","partials","complexSimp","bc","ad","cd","r1","r2","i1","i2","trigSimp","sym_array","tr","fracSimp","ratSimp","simplified","useAlgebraDiv","divideFn","calls","useParserDiv","TO_STRING_TAG_SUPPORT","FunctionPrototype","FunctionPrototypeToString","nameRE","head","notify","toggle","promise","macrotask","MutationObserver","WebKitMutationObserver","IS_NODE","queueMicrotaskDescriptor","queueMicrotask","enter","createTextNode","observe","characterData","task","createWellKnownSymbol","withoutSetter","nativeKeys","FAILS_ON_PRIMITIVES","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","specificCreate","findIndex","PREFERRED_STRING","SHARED","$includes","addToUnscopables","EXISTS","newPromiseCapability","promiseCapability","namespace","NASHORN_BUG","aPossiblePrototype","CORRECT_SETTER","TAG","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","forceStringMethod","stringMethod","regexMethod","$map","ArrayIteratorMethods","ArrayValues","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","native","CORRECT_PROTOTYPE_GETTER","ARRAY_ITERATOR","Arguments","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","NativePromise","redefineAll","setSpecies","anInstance","microtask","promiseResolve","hostReportErrors","newPromiseCapabilityModule","perform","PROMISE","getInternalPromiseState","PromiseConstructor","$fetch","newGenericPromiseCapability","DISPATCH_EVENT","createEvent","dispatchEvent","UNHANDLED_REJECTION","REJECTION_HANDLED","PENDING","FULFILLED","REJECTED","HANDLED","UNHANDLED","GLOBAL_CORE_JS_PROMISE","PromiseRejectionEvent","FakePromise","isThenable","isReject","notified","chain","reactions","ok","exited","reaction","handler","fail","rejection","onHandleUnhandled","onUnhandled","initEvent","IS_UNHANDLED","isUnhandled","emit","unwrap","internalReject","internalResolve","wrapper","executor","onFulfilled","onRejected","fetch","capability","$promiseResolve","remaining","alreadyCalled","race","ownKeys","PromiseCapability","$$resolve","$$reject","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","nativeSlice","fin","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"47c6bc07c6d11357a3dd.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/opennote/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"adf3\");\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","/*\n * Author : Martin Donk\n * Website : http://www.nerdamer.com\n * Email : martin.r.donk@gmail.com\n * Source : https://github.com/jiggzson/nerdamer\n */\n\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\n//externals ====================================================================\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\n\nvar nerdamer = (function (imports) {\n    \"use strict\";\n\n//version ====================================================================== \n    var version = '1.1.2';\n\n//inits ========================================================================\n    var _ = new Parser(); //nerdamer's parser\n\n    //import bigInt\n    var bigInt = imports.bigInt;\n    var bigDec = imports.bigDec;\n    //set the precision to js precision\n    bigDec.set({\n        precision: 250\n    });\n\n    var Groups = {};\n\n    //container of pregenerated primes\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\n\n//Settings ===================================================================== \n    var CUSTOM_OPERATORS = {};\n\n    var Settings = {\n        //the max number up to which to cache primes. Making this too high causes performance issues\n        init_primes: 1000,\n\n        exclude: [],\n        //If you don't care about division by zero for example then this can be set to true. \n        //Has some nasty side effects so choose carefully.\n        suppress_errors: false,\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\n        //cos(9) for convenience but parse to number will always try to return a number if set to true. \n        PARSE2NUMBER: false,\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\n        SAFE: false,\n        //the symbol to use for imaginary symbols\n        IMAGINARY: 'i',\n        //the modules used to link numeric function holders\n        FUNCTION_MODULES: [Math],\n        //Allow certain characters\n        ALLOW_CHARS: ['π'],\n        //Allow nerdamer to convert multi-character variables\n        USE_MULTICHARACTER_VARS: true,\n        //Allow changing of power operator\n        POWER_OPERATOR: '^',\n        //The variable validation regex\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\n        //Aliases\n        ALIASES: {\n            'π': 'pi',\n            '∞': 'Infinity'\n        },\n        POSITIVE_MULTIPLIERS: false,\n        //Cached items\n        CACHE: {},\n        //Print out warnings or not\n        SILENCE_WARNINGS: false,\n        //Precision\n        PRECISION: 80,\n        //function mappings\n        VECTOR: 'vector',\n        PARENTHESIS: 'parens',\n        SQRT: 'sqrt',\n        ABS: 'abs',\n        FACTORIAL: 'factorial',\n        DOUBLEFACTORIAL: 'dfactorial',\n        //reference pi and e\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\n        PI: Math.PI,\n        E: Math.E,\n        LOG: 'log', \n        LOG10: 'log10',\n        LOG10_LATEX: 'log_{10}',\n        MAX_EXP: 200000\n    };\n\n    (function () {\n        Settings.CACHE.roots = {};\n        var x = 40,\n                y = 40;\n        for (var i = 2; i <= x; i++) {\n            for (var j = 2; j <= y; j++) {\n                var nthpow = bigInt(i).pow(j);\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\n            }\n        }\n    })();\n    \n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\n    //The groups that help with organizing during parsing. Note that for FN is still a function even \n    //when it's raised to a symbol, which typically results in an EX\n    var N = Groups.N = 1, // A number\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5). \n            S = Groups.S = 3, // A single variable e.g. x. \n            EX = Groups.EX = 4, // An exponential\n            FN = Groups.FN = 5, // A function\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\n\n    var CONST_HASH = Settings.CONST_HASH = '#';\n\n    var PARENTHESIS = Settings.PARENTHESIS;\n\n    var SQRT = Settings.SQRT;\n\n    var ABS = Settings.ABS;\n\n    var FACTORIAL = Settings.FACTORIAL;\n\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\n\n    //the storage container \"memory\" for parsed expressions\n    var EXPRESSIONS = [];\n\n    //variables\n    var VARS = {};\n\n    //the container used to store all the reserved functions\n    var RESERVED = [];\n\n    var WARNINGS = [];\n\n    /**\n     * Use this when errors are suppressible\n     * @param {String} msg\n     * @param {object} ErrorObj \n     */\n    var err = function (msg, ErrorObj) {\n        if (!Settings.suppress_errors) {\n            if (ErrorObj)\n                throw new ErrorObj(msg);\n            else\n                throw new Error(msg);\n        }\n    };\n\n//Utils ======================================================================== \n    var customError = function (name) {\n        var E = function (message) {\n            this.name = name;\n            this.message = message !== undefined ? message : '';\n            var error = new Error(this.message);\n            error.name = this.name;\n            this.stack = error.stack;\n        }; //create an empty error\n        E.prototype = Object.create(Error.prototype);\n        return E;\n    };\n\n    /**\n     * Checks to see if value is one of nerdamer's reserved names\n     * @param {String} value\n     * @return boolean\n     */\n    var isReserved = function (value) {\n        return RESERVED.indexOf(value) !== -1;\n    };\n\n    /**\n     * Checks to see that all symbols in array are the same\n     * @param {Symbol[]} arr\n     * @returns {bool}\n     */\n    var allSame = function (arr) {\n        var last = arr[0];\n        for (var i = 1, l = arr.length; i < l; i++)\n            if (!arr[i].equals(last))\n                return false;\n        return true;\n    };\n\n    /**\n     * Used to pass warnings or low severity errors about the library\n     * @param msg\n     */\n    var warn = function (msg) {\n        WARNINGS.push(msg);\n        if (Settings.SHOW_WARNINGS && console && console.warn) {\n            console.warn(msg);\n        }\n    };\n\n    /**\n     * Enforces rule: \"must start with a letter or underscore and \n     * can have any number of underscores, letters, and numbers thereafter.\"\n     * @param name The name of the symbol being checked\n     * @param {String} typ - The type of symbols that's being validated\n     * @throws {Exception}  - Throws an exception on fail\n     */\n    var validateName = function (name, typ) {\n        typ = typ || 'variable';\n        if (Settings.ALLOW_CHARS.indexOf(name) !== -1)\n            return;\n        var regex = Settings.VALIDATION_REGEX;\n        if (!(regex.test(name))) {\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\n        }\n    };\n\n    /**\n     * Convert number from scientific format to decimal format\n     * @param {Number} num\n     */\n    var scientificToDecimal = function (num) {\n        var nsign = Math.sign(num);\n        //remove the sign\n        num = Math.abs(num);\n        //if the number is in scientific notation remove it\n        if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n            var zero = '0',\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\n                    e = parts.pop(), //store the exponential part\n                    l = Math.abs(e), //get the number of zeros\n                    sign = e / l,\n                    coeff_array = parts[0].split('.');\n            if (sign === -1) {\n                l = l - coeff_array[0].length;\n                if (l < 0) {\n                  num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n                } \n                else {\n                  num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n                }\n            } \n            else {\n                var dec = coeff_array[1];\n                if (dec)\n                    l = l - dec.length;\n                if (l < 0) {\n                  num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n                } else {\n                  num = coeff_array.join('') + new Array(l + 1).join(zero);\n                }\n            }\n        }\n\n        return nsign < 0 ? '-'+num : num;\n    };\n    /**\n     * Checks if number is a prime number\n     * @param {Number} n - the number to be checked\n     */\n    var isPrime = function (n) {\n        var q = Math.floor(Math.sqrt(n));\n        for (var i = 2; i <= q; i++) {\n            if (n % i === 0)\n                return false;\n        }\n        return true;\n    };\n    \n    /**\n     * Checks if n is a number\n     * @param {any} n \n     */\n    var isNumber = function(n) {\n        return /^\\d+\\.?\\d*$/.test(n);\n    };\n    \n    /**\n     * Checks to see if an array contains only numeric values\n     * @param {Array} arr \n     */\n    var allNumeric = function(arr) {\n        for(var i=0; i<arr.length; i++)\n            if(!isNumber(arr[i]))\n                return false;\n        return true;\n    };\n    /**\n     * Checks to see if a number or Symbol is a fraction\n     * @param {Number|Symbol} num\n     * @returns {boolean}\n     */\n    var isFraction = function (num) {\n        if (isSymbol(num))\n            return isFraction(num.multiplier.toDecimal());\n        return (num % 1 !== 0);\n    };\n\n    /**\n     * Checks to see if the object provided is a Symbol\n     * @param {Object} obj\n     */\n    var isSymbol = function (obj) {\n        return (obj instanceof Symbol);\n    };\n\n    /**\n     * Checks to see if the object provided is an Expression\n     * @param {Object} obj\n     */\n    var isExpression = function (obj) {\n        return (obj instanceof Expression);\n    };\n\n    /**\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\n     * names are then returned in alphabetical order.\n     * @param {Symbol} obj\n     * @param {Boolean} poly \n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated \n     * automatically. In the future this will be a Collector object.\n     * @returns {String[]} - An array containing variable names\n     */\n    var variables = function (obj, poly, vars) {\n        vars = vars || {\n            c: [],\n            add: function (value) {\n                if (this.c.indexOf(value) === -1 && isNaN(value))\n                    this.c.push(value);\n            }\n        };\n\n        if (isSymbol(obj)) {\n            var group = obj.group,\n                    prevgroup = obj.previousGroup;\n            if (group === EX)\n                variables(obj.power, poly, vars);\n\n            if (group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\n                for (var x in obj.symbols) {\n                    variables(obj.symbols[x], poly, vars);\n                }\n            }\n            else if (group === S || prevgroup === S) {\n                //very crude needs fixing. TODO\n                if (!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\n                    vars.add(obj.value);\n            }\n            else if (group === PL || prevgroup === PL) {\n                variables(firstObject(obj.symbols), poly, vars);\n            }\n            else if (group === EX) {\n                if (!isNaN(obj.value))\n                    vars.add(obj.value);\n                variables(obj.power, poly, vars);\n            }\n            else if (group === FN && !poly) {\n                for (var i = 0; i < obj.args.length; i++) {\n                    variables(obj.args[i], poly, vars);\n                }\n            }\n        }\n\n        return vars.c.sort();\n    };\n    \n    /**\n     * Returns the sum of an array\n     * @param {Array} arr\n     * @returns {Symbol}\n     */\n    var arraySum = function(arr) {\n        var sum = new Symbol(0);\n        arr.map(function(x) {\n            sum = _.add(sum, x);\n        });\n        return sum;\n    };\n\n    /**\n     * Separates out the variables into terms of variabls. \n     * e.g. x+y+x*y+sqrt(2)+pi returns \n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\n     * @param {type} symbol\n     * @param {type} o\n     * @returns {undefined}\n     * @throws {Error} for expontentials\n     */\n    var separate = function (symbol, o) {\n        symbol = _.expand(symbol);\n        o = o || {};\n        var insert = function (key, sym) {\n            if (!o[key])\n                o[key] = new Symbol(0);\n            o[key] = _.add(o[key], sym.clone());\n        };\n        symbol.each(function (x) {\n            if (x.isConstant('all'))\n                insert('constants', x);\n            else if (x.group === S) {\n                insert(x.value, x);\n            }\n            else if (x.group === FN && (x.fname === ABS || x.fname === '')) {\n                separate(x.args[0]);\n            }\n            else if (x.group === EX || x.group === FN) {\n                throw new Error('Unable to separate. Term cannot be a function!');\n            }\n            else {\n                insert(variables(x).join(' '), x);\n            }\n        });\n\n        return o;\n    };\n\n    /**\n     * Fills holes in an array with zero symbol or generates one with n zeroes\n     * @param {Array} arr \n     * @param {Number} n \n     */\n    var fillHoles = function (arr, n) {\n        n = n || arr.length;\n        for (var i = 0; i < n; i++) {\n            var sym = arr[i];\n            if (!sym)\n                arr[i] = new Symbol(0);\n        }\n        return arr;\n    };\n\n    /**\n     * \n     * Checks to see if the object provided is a Vector\n     * @param {Object} obj\n     */\n    var isVector = function (obj) {\n        return (obj instanceof Vector);\n    };\n\n    /**\n     * Checks to see if the object provided is a Matrix\n     * @param {Object} obj\n     */\n    var isMatrix = function (obj) {\n        return (obj instanceof Matrix);\n    };\n    \n    var isSet = function(obj) {\n        return (obj instanceof Set);\n    };\n    \n    /**\n     * Checks to see if a symbol is in group N\n     * @param {Symbol} symbol\n     */\n    var isNumericSymbol = function (symbol) {\n        return symbol.group === N || symbol.group === P;\n    };\n\n    /**\n     * Checks to see if a symbol is a variable with no multiplier nor power\n     * @param {Symbol} symbol\n     */\n    var isVariableSymbol = function (symbol) {\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\n    };\n\n    /**\n     * Checks to see if the object provided is an Array\n     * @param {Object} arr\n     */\n    var isArray = function (arr) {\n        return Array.isArray(arr);\n    };\n\n    /**\n     * Checks to see if a number is an integer\n     * @param {Number} num\n     */\n    var isInt = function (num) {\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\n    };\n\n    /**\n     * @param {Number|Symbol} obj\n     * @returns {boolean}\n     */\n    var isNegative = function (obj) {\n        if (isSymbol(obj)) {\n            obj = obj.multiplier;\n        }\n        return obj.lessThan(0);\n    };\n    /**\n     * Safely stringify object\n     * @param o\n     */\n    var stringify = function(o) {\n        if(!o)\n            return o;\n        return String(o);\n    };\n    \n    /**\n     * @param {String} str\n     * @returns {String} - returns a formatted string surrounded by brackets\n     */\n    var inBrackets = function (str) {\n        return '(' + str + ')';\n    };\n\n    /**\n     * A helper function to replace parts of string\n     * @param {String} str - The original string\n     * @param {Integer} from - The starting index\n     * @param {Integer} to - The ending index\n     * @param {String} with_str - The replacement string\n     * @returns {String} - A formatted string\n     */\n    var stringReplace = function (str, from, to, with_str) {\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\n    };\n\n    /**\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\n     * @param {Object} obj\n     * @returns {boolean}\n     */\n    var customType = function (obj) {\n        return obj !== undefined && obj.custom;\n    };\n\n    /**\n     * Checks to see if numbers are both negative or are both positive\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {boolean}\n     */\n    var sameSign = function (a, b) {\n        return (a < 0) === (b < 0);\n    };\n\n    /**\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\n     * @example format('{0} nice, {0} sweet', 'something')\n     * //returns 'something nice, something sweet'\n     */\n    var format = function () {\n        var args = [].slice.call(arguments),\n                str = args.shift();\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\n            var arg = args[index];\n            return typeof arg === 'function' ? arg() : arg;\n        });\n\n        return new_str;\n    };\n    \n    /**\n     * Generates an array with values within a range. Multiplies by a step if provided\n     * @param {Number} start\n     * @param {Number} end\n     * @param {Number} step\n     */\n    var range = function(start, end, step) {\n        var arr = [];\n        step = step || 1;\n        for(var i=start; i<=end; i++) \n            arr.push(i*step);\n        return arr;\n    };\n    \n    /**\n     * Returns an array of all the keys in an array\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    var keys = Object.keys;\n\n    /**\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects \n     * so only use if you need any first random or if there's only one item in the object\n     * @param {Object} obj\n     * @param {String} key Return this key as first object\n     * @param {Boolean} both\n     * @returns {*}\n     */\n    var firstObject = function (obj, key, both) {\n        for (var x in obj)\n            break;\n        if (key)\n            return x;\n        if(both)\n            return {\n                key: x,\n                obj: obj[x]\n            };\n        return obj[x];\n    };\n\n    /**\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\n     * @param {Symbol} sym1\n     * @param {Symbol} sym2\n     * @param {String[]} vars - an optional array of variables to use\n     * @returns {bool}\n     */\n    var compare = function (sym1, sym2, vars) {\n        var n = 5; //a random number between 1 and 5 is good enough\n        var scope = {}; // scope object with random numbers generated using vars\n        var comparison;\n        for (var i = 0; i < vars.length; i++)\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\n        block('PARSE2NUMBER', function () {\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\n        });\n        return comparison;\n    };\n\n    /**\n     * Is used to set a user defined function using the function assign operator\n     * @param {String} name\n     * @param {String[]} params_array\n     * @param {String} body\n     * @returns {Boolean}\n     */\n    var setFunction = function (name, params_array, body) {\n        validateName(name);\n        if (!isReserved(name)) {\n            params_array = params_array || variables(_.parse(body));\n            _.functions[name] = [_.mapped_function, params_array.length, {\n                    name: name,\n                    params: params_array,\n                    body: body\n                }];\n            return body;\n        }\n        return null;\n    };\n\n    /**\n     * Returns the minimum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMax = function (arr) {\n        return Math.max.apply(undefined, arr);\n    };\n\n    /**\n     * Returns the maximum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMin = function (arr) {\n        return Math.min.apply(undefined, arr);\n    };\n\n    /**\n     * Clones array with clonable items\n     * @param {Array} arr\n     * @returns {Array}\n     */\n    var arrayClone = function (arr) {\n        var new_array = [], l = arr.length;\n        for (var i = 0; i < l; i++)\n            new_array[i] = arr[i].clone();\n        return new_array;\n    };\n\n    /**\n     * Fills numbers between array values\n     * @param {Numbers[]} arr\n     * @param {Integer} slices\n     */\n    var arrayAddSlices = function(arr, slices) {\n        slices = slices || 20;\n        var retval = [];\n        var c, delta, e;\n        retval.push(arr[0]); //push the beginning\n        for(var i=0; i<arr.length-1; i++) {\n            c = arr[i];\n            delta = arr[i+1]-c; //get the difference\n            e = delta/slices; //chop it up in the desired number of slices\n            for(var j=0; j<slices; j++) {\n                c += e; //add the mesh to the last slice\n                retval.push(c);\n            }\n        }\n\n        return retval;\n    };\n\n     /**\n     * Gets nth roots of a number\n     * @param {Symbol} symbol\n     * @returns {Vector}\n     */\n    var nroots = function(symbol) {\n        var a, b;\n\n        if(symbol.group === FN && symbol.fname === '') {\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n            b = _.parse(symbol.power);\n        }\n        else if(symbol.group === P) {\n            a = _.parse(symbol.value);\n            b = _.parse(symbol.power);\n        }\n\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\n            var _roots = [];\n            \n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\n            var r = parts[0];\n            \n            //var r = _.parse(a).abs().toString();\n\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n            var x = _.arg(a);\n            var n = b.multiplier.den.toString();\n            var p = b.multiplier.num.toString();\n\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\n\n            for(var i=0; i<n; i++) {\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n            }\n            return Vector.fromArray(_roots);\n        }\n        else if(symbol.isConstant(true, true)) {\n            var sign = symbol.sign();\n            var x = evaluate(symbol.abs());\n            var root = _.sqrt(x);\n\n            var _roots = [root.clone(), root.negate()];\n\n            if(sign < 0)\n                _roots = _roots.map(function(x) {\n                    return _.multiply(x, Symbol.imaginary());\n                });\n                \n        }\n        else {\n            _roots = [_.parse(symbol)];\n        }\n\n        return Vector.fromArray(_roots);\n    };\n\n    /**\n     * Sorts and array given 2 parameters\n     * @param {String} a\n     * @param {String} b\n     */\n    var comboSort = function (a, b) {\n        var l = a.length,\n                combined = []; //the linker\n        for (var i = 0; i < a.length; i++) {\n            combined.push([a[i], b[i]]); //create the map\n        }\n\n        combined.sort(function (x, y) {\n            return x[0] - y[0];\n        });\n\n        var na = [], nb = [];\n\n        for (i = 0; i < l; i++) {\n            na.push(combined[i][0]);\n            nb.push(combined[i][1]);\n        }\n\n        return [na, nb];\n    };\n    /**\n     * TODO: Pick a more descriptive name and better description\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\n     * Example a*x^2+b wrt x\n     * @param {Symbol} fn\n     * @param {String} wrt\n     * @param {bool} as_obj\n     */\n    var decompose_fn = function (fn, wrt, as_obj) {\n        wrt = String(wrt); //convert to string\n        var ax, a, x, b;\n        if (fn.group === CP) {\n            var t = _.expand(fn.clone()).stripVar(wrt);\n            ax = _.subtract(fn.clone(), t.clone());\n            b = t;\n        }\n        else\n            ax = fn.clone();\n        a = ax.stripVar(wrt);\n        x = _.divide(ax.clone(), a.clone());\n        b = b || new Symbol(0);\n        if (as_obj)\n            return {\n                a: a,\n                x: x,\n                ax: ax,\n                b: b\n            };\n        return [a, x, ax, b];\n    };\n    /**\n     * Rounds a number up to x decimal places\n     * @param {Number} x\n     * @param {Number} s\n     */\n    var nround = function (x, s) {\n        if(isInt(x)) {\n            if(x >= Number.MAX_VALUE)\n                return x.toString();\n            return Number(x);\n        }\n            \n        s = typeof s === 'undefined' ? 14 : s;\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\n    };\n\n    /**\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\n     * instance a is used in the symbol then it keeps going down the line until\n     * one is found that's not in use. If all letters are taken then it\n     * starts appending numbers. \n     * IMPORTANT! It assumes that the substitution will be undone\n     * beore the user gets to interact with the object again.\n     * @param {Symbol} symbol\n     */\n    var getU = function (symbol) {\n        //start with u\n        var u = 'u', //start with u\n                v = u, //init with u\n                c = 0, //postfix number\n                vars = variables(symbol);\n        //make sure this variable isn't reserved and isn't in the variable list\n        while (!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\n            v = u + c++;\n        //get an empty slot. It seems easier to just push but the\n        //problem is that we may have some which are created by clearU\n        for (var i = 0, l = RESERVED.length; i <= l; i++)\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\n            if (!RESERVED[i]) {\n                RESERVED[i] = v; //reserve the variable\n                break;\n            }\n        return v;\n    };\n\n    /**\n     * Clears the u variable so it's no longer reserved\n     * @param {String} u\n     */\n    var clearU = function (u) {\n        var indx = RESERVED.indexOf(u);\n        if (indx !== -1)\n            RESERVED[indx] = undefined;\n    };\n\n    /**\n     * Loops through each item in object and calls function with item as param\n     * @param {Object|Array} obj\n     * @param {Function} fn \n     */\n    var each = function (obj, fn) {\n        if (isArray(obj)) {\n            var l = obj.length;\n            for (var i = 0; i < l; i++)\n                fn.call(obj, i);\n        }\n        else {\n            for (var x in obj)\n                if (obj.hasOwnProperty(x))\n                    fn.call(obj, x);\n        }\n    };\n\n    /**\n     * Checks to see if a number is an even number\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var even = function (num) {\n        return num % 2 === 0;\n    };\n\n    /**\n     * Checks to see if a fraction is divisible by 2\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var evenFraction = function (num) {\n        return 1 / (num % 1) % 2 === 0;\n    };\n\n    /**\n     * Strips duplicates out of an array\n     * @param {Array} arr\n     */\n    var arrayUnique = function (arr) {\n        var l = arr.length, a = [];\n        for (var i = 0; i < l; i++) {\n            var item = arr[i];\n            if (a.indexOf(item) === -1)\n                a.push(item);\n        }\n        return a;\n    };\n    \n    /**\n     * Removes duplicates from an array. Returns a new array\n     * @param {Array} arr\n     * @param {Function} condition\n     */\n    var removeDuplicates = function(arr, condition) {\n        var conditionType = typeof condition;\n\n        if(conditionType !== 'function' || conditionType === 'undefined') {\n            condition = function(a, b) {\n                return a === b;\n            };\n        }\n\n        var seen = [];\n\n        while(arr.length) {\n            var a = arr[0];\n            //only one element left so we're done\n            if(arr.length === 1) {\n                seen.push(a);\n                break;\n            }\n            var temp = [];\n            seen.push(a); //we already scanned these\n            for(var i=1; i<arr.length; i++) {\n                var b = arr[i];\n                //if the number is outside the specified tolerance\n                if(!condition(a, b))\n                    temp.push(b);\n            }\n            //start over with the remainder\n            arr = temp;\n        }\n\n        return seen;\n    };\n    \n    /**\n     * Reserves the names in an object so they cannot be used as function names\n     * @param {Object} obj\n     */\n    var reserveNames = function (obj) {\n        var add = function (item) {\n            if (RESERVED.indexOf(item) === -1)\n                RESERVED.push(item);\n        };\n\n        if (typeof obj === 'string')\n            add(obj);\n        else {\n            each(obj, function (x) {\n                add(x);\n            });\n        }\n    };\n\n    /**\n     * Removes an item from either an array or an object. If the object is an array, the index must be \n     * specified after the array. If it's an object then the key must be specified\n     * @param {Object|Array} obj\n     * @param {Integer} indexOrKey\n     */\n    var remove = function (obj, indexOrKey) {\n        var result;\n        if (isArray(obj)) {\n            result = obj.splice(indexOrKey, 1)[0];\n        }\n        else {\n            result = obj[indexOrKey];\n            delete obj[indexOrKey];\n        }\n        return result;\n    };\n\n    /**\n     * Creates a temporary block in which one of the global settings is temporarily modified while\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\n     * answer for a period you would set PARSE2NUMBER to true in the block.\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\n     * @param {String} setting - The setting being accessed\n     * @param {Function} f \n     * @param {boolean} opt - The value of the setting in the block\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\n     */\n    var block = function (setting, f, opt, obj) {\n        var current_setting = Settings[setting];\n        Settings[setting] = opt === undefined ? true : !!opt;\n        var retval = f.call(obj);\n        Settings[setting] = current_setting;\n        return retval;\n    };\n\n    /**\n     * provide a mechanism for accessing functions directly. Not yet complete!!! \n     * Some functions will return undefined. This can maybe just remove the \n     * function object at some point when all functions are eventually \n     * housed in the global function object. Returns ALL parser available \n     * functions. Parser.functions may not contain all functions\n     */\n    var importFunctions = function () {\n        var o = {};\n        for (var x in _.functions)\n            o[x] = _.functions[x][0];\n        return o;\n    };\n\n    /**\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\n     * @param {Array|object} obj\n     */\n    var arguments2Array = function (obj) {\n        return [].slice.call(obj);\n    };\n\n    /**\n     * Returns the coefficients of a symbol\n     * @param {Symbol} symbol\n     * @param {Symbol} wrt\n     */\n    var getCoeffs = function (symbol, wrt) {\n        var coeffs = [];\n        //we loop through the symbols and stick them in their respective \n        //containers e.g. y*x^2 goes to index 2\n        symbol.each(function (term) {\n            if (term.contains(wrt)) {\n                //we want only the coefficient which in this case will be everything but the variable\n                //e.g. a*b*x -> a*b if the variable to solve for is x\n                var coeff = term.stripVar(wrt),\n                        x = _.divide(term.clone(), coeff.clone()),\n                        p = x.power.toDecimal();\n            }\n            else {\n                coeff = term;\n                p = 0;\n            }\n            var e = coeffs[p];\n            //if it exists just add it to it\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\n\n        }, true);\n\n        for (var i = 0; i < coeffs.length; i++)\n            if (!coeffs[i])\n                coeffs[i] = new Symbol(0);\n        //fill the holes\n        return coeffs;\n    };\n\n    /**\n     * As the name states. It forces evaluation of the expression \n     * @param {Symbol} symbol\n     * @param {Symbol} o\n     */\n    var evaluate = function (symbol, o) {\n        return block('PARSE2NUMBER', function () {\n            return _.parse(symbol, o);\n        }, true);\n    };\n\n    /**\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\n     * @param {String[]|String|Symbol|Number|Number[]} x \n     */\n    var convertToVector = function (x) {\n        if (isArray(x)) {\n            var vector = new Vector([]);\n            for (var i = 0; i < x.length; i++)\n                vector.elements.push(convertToVector(x[i]));\n            return vector;\n        }\n        //Ensure that a nerdamer ready object is returned\n        if (!isSymbol(x))\n            return _.parse(x);\n        return x;\n    };\n\n    /**\n     * Generates prime numbers up to a specified number\n     * @param {Number} upto \n     */\n    var generatePrimes = function (upto) {\n        //get the last prime in the array\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\n        //no need to check if we've already encountered the number. Just check the cache.\n        for (var i = last_prime; i < upto; i++) {\n            if (isPrime(i))\n                PRIMES.push(i);\n        }\n    };\n    /**\n     * Checks to see if all arguments are numbers\n     * @param {object} args\n     */\n    var allNumbers = function (args) {\n        for (var i = 0; i < args.length; i++)\n            if (args[i].group !== N)\n                return false;\n        return true;\n    };\n    /*\n     * Checks if all arguments aren't just all number but if they\n     * are constants as well e.g. pi, e.\n     * @param {object} args \n     */\n    var allConstants = function (args) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i].isPi() || args[i].isE())\n                continue;\n            if (!args[i].isConstant(true))\n                return false;\n        }\n        return true;\n    };\n\n\n//Exceptions ===================================================================\n    //Is thrown for division by zero\n    var DivisionByZero = customError('DivisionByZero');\n    //Is throw if an error occured during parsing\n    var ParseError = customError('ParseError');\n    //Is thrown if the expression results in undefined\n    var UndefinedError = customError('UndefinedError');\n    //Is throw if a function exceeds x amount of iterations\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\n    //Is thrown if the parser receives an incorrect type\n    var NerdamerTypeError = customError('NerdamerTypeError');\n    //Is thrown if bracket parity is not correct\n    var ParityError = customError('ParityError');\n    //Is thrown if an unexpectd or incorrect operator is encountered\n    var OperatorError = customError('OperatorError');\n    //Is thrown if an index is out of range.\n    var OutOfRangeError = customError('OutOfRangeError');\n    //Is thrown if dimensions are incorrect. Mostly for matrices\n    var DimensionError = customError('DimensionError');\n    //Is thrown if variable name violates naming rule\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\n    //Is thrown if the limits of the library are exceeded for a function\n    //This can be that the function become unstable passed a value\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\n    //Is throw if the value is an incorrect LH or RH value\n    var NerdamerValueError = customError('NerdamerValueError');\n    //Is throw if the value is an incorrect LH or RH value\n    var SolveError = customError('SolveError');\n\n    var exceptions = {\n        DivisionByZero: DivisionByZero,\n        ParseError: ParseError,\n        UndefinedError: UndefinedError,\n        MaximumIterationsReached: MaximumIterationsReached,\n        NerdamerTypeError: NerdamerTypeError,\n        ParityError: ParityError,\n        OperatorError: OperatorError,\n        OutOfRangeError: OutOfRangeError,\n        DimensionError: DimensionError,\n        InvalidVariableNameError: InvalidVariableNameError,\n        ValueLimitExceededError: ValueLimitExceededError,\n        NerdamerValueError: NerdamerValueError,\n        SolveError: SolveError\n    };\n//Big ========================================================================== \n    var Big = {\n        cos: function (x) {\n            return new Symbol(bigDec.cos(x.multiplier.toDecimal()));\n        },\n        sin: function (x) {\n            return new Symbol(bigDec.sin(x.multiplier.toDecimal()));\n        }\n    };\n//Math2 ======================================================================== \n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the \n    //functions within are pretty self-explanatory.\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\n    var Math2 = {\n        csc: function (x) {\n            return 1 / Math.sin(x);\n        },\n        sec: function (x) {\n            return 1 / Math.cos(x);\n        },\n        cot: function (x) {\n            return 1 / Math.tan(x);\n        },\n\t\tacsc: function(x) { return Math.asin(1/x); },\n        asec: function(x) { \n            return Math.acos(1/x); \n        },\n        acot: function(x) { \n            return (Math.PI / 2) - Math.atan(x);\n        },\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n        erf: function (x) {\n            var t = 1 / (1 + 0.5 * Math.abs(x));\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\n                    t * (1.00002368 +\n                            t * (0.37409196 +\n                                    t * (0.09678418 +\n                                            t * (-0.18628806 +\n                                                    t * (0.27886807 +\n                                                            t * (-1.13520398 +\n                                                                    t * (1.48851587 +\n                                                                            t * (-0.82215223 +\n                                                                                    t * (0.17087277)))))))))\n                    );\n            return x >= 0 ? result : -result;\n        },\n        diff: function(f) {\n            var h = 0.001;\n            \n            var derivative = function(x) { \n                return (f(x + h) - f(x - h)) / (2 * h); \n            };\n            \n            return derivative;\n        },\n        median: function (...values) {\n            values.sort(function (a, b) {\n                return a - b;\n            });\n\n            var half = Math.floor(values.length / 2);\n\n            if (values.length % 2)\n                return values[half];\n\n            return (values[half - 1] + values[half]) / 2.0;\n        },\n        /*\n         * Reverses continued fraction calculation\n         * @param {obj} contd\n         * @returns {Number}\n         */\n        fromContinued: function (contd) {\n            var arr = contd.fractions.slice();\n            var e = 1 / arr.pop();\n            for (var i = 0, l = arr.length; i < l; i++) {\n                e = 1 / (arr.pop() + e);\n            }\n            return contd.sign * (contd.whole + e);\n        },\n        /*\n         * Calculates continued fractions\n         * @param {Number} n\n         * @param {Number} x The number of places\n         * @returns {Number}\n         */\n        continuedFraction: function (n, x) {\n            x = x || 20;\n            var sign = Math.sign(n); /*store the sign*/\n            var absn = Math.abs(n); /*get the absolute value of the number*/\n            var whole = Math.floor(absn); /*get the whole*/\n            var ni = absn - whole; /*subtract the whole*/\n            var c = 0; /*the counter to keep track of iterations*/\n            var done = false;\n            var epsilon = 1e-14;\n            var max = 1e7;\n            var e, w;\n            var retval = {\n                whole: whole,\n                sign: sign,\n                fractions: []\n            };\n            /*start calculating*/\n            while (!done && ni !== 0) {\n                /*invert and get the whole*/\n                e = 1 / ni;\n                w = Math.floor(e);\n                if (w > max) {\n                    /*this signals that we may have already gone too far*/\n                    var d = Math2.fromContinued(retval) - n;\n                    if (d <= Number.EPSILON)\n                        break;\n                }\n                /*add to result*/\n                retval.fractions.push(w);\n                /*move the ni to the decimal*/\n                ni = e - w;\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n                if (ni <= epsilon || c >= x - 1)\n                    done = true;\n                c++;\n            }\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n            var idx = retval.fractions.length - 1;\n            if (retval.fractions[idx] === 1) {\n                retval.fractions.pop();\n                /*increase the last one by one*/\n                retval.fractions[--idx]++;\n            }\n            return retval;\n        },\n        bigpow: function (n, p) {\n            if (!(n instanceof Frac))\n                n = Frac.create(n);\n            if (!(p instanceof Frac))\n                p = Frac.create(p);\n            var retval = new Frac(0);\n            if (p.isInteger()) {\n                retval.num = n.num.pow(p.toString());\n                retval.den = n.den.pow(p.toString());\n            }\n            else {\n                var num = Frac.create(Math.pow(n.num, p.num));\n                var den = Frac.create(Math.pow(n.den, p.num));\n\n                retval.num = Math2.nthroot(num, p.den.toString());\n                retval.den = Math2.nthroot(den, p.den);\n            }\n            return retval;\n        },\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n        gamma: function (z) {\n            var g = 7;\n            var C = [\n                0.99999999999980993,\n                676.5203681218851,\n                -1259.1392167224028,\n                771.32342877765313,\n                -176.61502916214059,\n                12.507343278686905,\n                -0.13857109526572012,\n                9.9843695780195716e-6,\n                1.5056327351493116e-7]\n                    ;\n\n            if (z < 0.5)\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\n            else {\n                z -= 1;\n\n                var x = C[0];\n                for (var i = 1; i < g + 2; i++)\n                    x += C[i] / (z + i);\n\n                var t = z + g + 0.5;\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\n            }\n        },\n        //factorial\n        bigfactorial: function (x) {\n            var retval = new bigInt(1);\n            for (var i = 2; i <= x; i++)\n                retval = retval.times(i);\n            return new Frac(retval);\n        },\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\n        bigLog: function (x) {\n            varn            if (CACHE[x]) {\n                return Frac.quick.apply(null, CACHE[x].split('/'));\n            }\n            x = new Frac(x);\n            var n = 80;\n            var retval = new Frac(0);\n            var a = x.subtract(new Frac(1));\n            var b = x.add(new Frac(1));\n            for (var i = 0; i < n; i++) {\n                var t = new Frac(2 * i + 1);\n                var k = Math2.bigpow(a.divide(b), t);\n                var r = t.clone().invert().multiply(k);\n                retval = retval.add(r);\n\n            }\n            return retval.multiply(new Frac(2));\n        },\n        //the factorial function but using the big library instead\n        factorial: function (x) {\n            var is_int = x % 1 === 0;\n            \n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n            if (is_int && x < 0)\n                return NaN;\n            \n            if(!is_int)\n                return Math2.gamma(x+1);\n            \n            var retval = 1;\n            for (var i = 2; i <= x; i++)\n                retval = retval * i;\n            return retval;\n        },\n        //double factorial\n        //http://mathworld.wolfram.com/DoubleFactorial.html\n        dfactorial: function (x) {\n            if (isInt(x)) {\n                var even = x % 2 === 0;\n                /* If x = even then n = x/2 else n = (x-1)/2*/\n                var n = even ? x / 2 : (x + 1) / 2;\n                /*the return value*/\n                var r = new Frac(1);\n                /*start the loop*/\n                if (even)\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\n                else\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\n            }\n            else {\n                /*Not yet extended to bigNum*/\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\n            }\n\n            /*done*/\n            return r;\n        },\n        GCD: function () {\n            var args = arrayUnique([].slice.call(arguments)\n                    .map(function (x) {\n                        return Math.abs(x);\n                    })).sort(),\n                    a = Math.abs(args.shift()),\n                    n = args.length;\n\n            while (n-- > 0) {\n                var b = Math.abs(args.shift());\n                while (true) {\n                    a %= b;\n                    if (a === 0) {\n                        a = b;\n                        break;\n                    }\n                    b %= a;\n                    if (b === 0)\n                        break;\n                    ;\n                }\n            }\n            return a;\n        },\n        QGCD: function () {\n            var args = [].slice.call(arguments);\n            var a = args[0];\n            for (var i = 1; i < args.length; i++) {\n                var b = args[i];\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n                a = b.gcd(a);\n                if (sign < 0)\n                    a.negate();\n            }\n            return a;\n        },\n        LCM: function (a, b) {\n            return (a * b) / Math2.GCD(a, b);\n        },\n        //pow but with the handling of negative numbers\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n        pow: function (b, e) {\n            if (b < 0) {\n                if (Math.abs(e) < 1) {\n                    /*nth root of a negative number is imaginary when n is even*/\n                    if (1 / e % 2 === 0)\n                        return NaN;\n                    return -Math.pow(Math.abs(b), e);\n                }\n            }\n            return Math.pow(b, e);\n        },\n        factor: function (n) {\n            n = Number(n);\n            var sign = Math.sign(n); /*store the sign*/\n            /*move the number to absolute value*/\n            n = Math.abs(n);\n            var ifactors = Math2.ifactor(n);\n            var factors = new Symbol();\n            factors.symbols = {};\n            factors.group = CB;\n            for (var x in ifactors) {\n                var factor = new Symbol(1);\n                factor.group = P; /*cheat a little*/\n                factor.value = x;\n                factor.power = new Symbol(ifactors[x]);\n                factors.symbols[x] = factor;\n            }\n            factors.updateHash();\n            \n            if(n === 1) {\n                factors = new Symbol(n);\n            }\n            \n            /*put back the sign*/\n            if(sign < 0)\n                factors.negate();\n            \n            return factors;\n        },\n        /**\n         * Uses trial division\n         * @param {Integer} n - the number being factored\n         * @param {object} factors -  the factors object\n         * @returns {object}\n         */\n        sfactor: function (n, factors) {\n            factors = factors || {};\n            var r = Math.floor(Math.sqrt(n));\n            var lcprime = PRIMES[PRIMES.length - 1];\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n            /*takes too long*/\n            if (r > lcprime && n < 1e6)\n                generatePrimes(r);\n            var l = PRIMES.length;\n            for (var i = 0; i < l; i++) {\n                var prime = PRIMES[i];\n                /*trial division*/\n                while (n % prime === 0) {\n                    n = n / prime;\n                    factors[prime] = (factors[prime] || 0) + 1;\n                }\n            }\n            if (n > 1)\n                factors[n] = 1;\n            return factors;\n        },\n        /**\n         * Pollard's rho\n         * @param {Integer} n\n         * @returns {object}\n         */\n        ifactor: function (n) {\n            n = String(n);\n\n            if (n === '0')\n                return {'0': 1};\n            n = new bigInt(n); /*convert to bigInt for safety*/\n            var sign = n.sign ? -1 : 1;\n            n = n.abs();\n            var factors = {}; /*factor object being returned.*/\n            if (n.lt('65536')) { /*less than 2^16 just use trial division*/\n                factors = Math2.sfactor(n, factors);\n            }\n            else {\n                var add = function (e) {\n                    if (!e.isPrime()) {\n                        factors = Math2.sfactor(e, factors);\n                    }\n                    else\n                        factors[e] = (factors[e] || 0) + 1;\n                };\n\n                while (!n.abs().equals(1)) {\n                    if (n.isPrime()) {\n                        add(n);\n                        break;\n                    }\n                    else {\n                        function rho(c) {\n                            var xf = new bigInt(c),\n                                    cz = 2,\n                                    x = new bigInt(c),\n                                    factor = new bigInt(1);\n\n                            while (factor.equals(1)) {\n                                for (var i = 0; i <= cz && factor.equals(1); i++) {\n                                    x = x.pow(2).add(1).mod(n);\n                                    factor = bigInt.gcd(x.minus(xf).abs(), n);\n                                }\n\n                                cz = cz * 2;\n                                xf = x;\n                            }\n                            if (factor.equals(n)) {\n                                return rho(c + 1);\n                            }\n                            return factor;\n                        }\n                        var factor = rho(2);\n                        add(factor);\n                        /*divide out the factor*/\n                        n = n.divide(factor);\n                    }\n                }\n            }\n\n            /*put the sign back*/\n            if (sign === -1) {\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\n                factors['-' + sm] = factors[sm];\n                delete factors[sm];\n            }\n\n            return factors;\n        },\n        //factors a number into rectangular box. If sides are primes that this will be\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n        boxfactor: function (n, max) {\n            max = max || 200; //stop after this number of iterations\n            var c, r,\n                    d = Math.floor((5 / 12) * n), //the divisor\n                    i = 0, //number of iterations\n                    safety = false;\n            while (true) {\n                c = Math.floor(n / d);\n                r = n % d;\n                if (r === 0)\n                    break; //we're done\n                if (safety)\n                    return [n, 1];\n                d = Math.max(r, d - r);\n                i++;\n                safety = i > max;\n            }\n            return [c, d, i];\n        },\n        fib: function (n) {\n            var sign = Math.sign(n);\n            n = Math.abs(n);\n            sign = even(n) ? sign : Math.abs(sign);\n            var a = 0, b = 1, f = 1;\n            for (var i = 2; i <= n; i++) {\n                f = a + b;\n                a = b;\n                b = f;\n            }\n            return f * sign;\n        },\n        mod: function (x, y) {\n            return x % y;\n        },\n        //http://mathworld.wolfram.com/IntegerPart.html\n        integer_part: function (x) {\n            var sign = Math.sign(x);\n            return sign * Math.floor(Math.abs(x));\n        },\n        simpson: function (f, a, b, step) {\n            var get_value = function (f, x, side) {\n                var v = f(x);\n                var d = 0.000000000001;\n                if (isNaN(v)) {\n                    v = f(side === 1 ? x + d : x - d);\n                }\n                return v;\n            };\n\n            step = step || 0.0001;\n            //calculate the number of intervals\n            var n = Math.abs(Math.floor((b - a) / step));\n            //simpson's rule requires an even number of intervals. If it's not then add 1\n            if (n % 2 !== 0)\n                n++;\n            //get the interval size\n            var dx = (b - a) / n;\n            //get x0\n            var retval = get_value(f, a, 1);\n\n            //get the middle part 4x1+2x2+4x3 ...\n            //but first set a flag to see if it's even or odd. \n            //The first one is odd so we start there\n            var even = false;\n            //get x1\n            var xi = a + dx;\n            //the coefficient\n            var c, k;\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\n            for (var i = 1; i < n; i++) {\n                c = even ? 2 : 4;\n                k = c * get_value(f, xi, 1);\n                retval += k;\n                //flip the even flag\n                even = !even;\n                //increment xi\n                xi += dx;\n            }\n\n            //add xn\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\n\n        },\n        /**\n         * https://github.com/scijs/integrate-adaptive-simpson\n         * @param {Function} f - the function being integrated\n         * @param {Number} a - lower bound\n         * @param {Number} b - upper bound\n         * @param {Number} tol - step width\n         * @param {Number} maxdepth\n         * @returns {Number}\n         */\n        num_integrate: function (f, a, b, tol, maxdepth) {\n            if (maxdepth < 0)\n                throw new Error('max depth cannot be negative');\n\n            /* This algorithm adapted from pseudocode in:*/\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n                if (state.nanEncountered) {\n                    return NaN;\n                }\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n                h = b - a;\n                f1 = f(a + h * 0.25);\n                f2 = f(b - h * 0.25);\n                /* Simple check for NaN:*/\n                if (isNaN(f1)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n                /* Simple check for NaN:*/\n                if (isNaN(f2)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n\n                sl = h * (fa + 4 * f1 + fm) / 12;\n                sr = h * (fm + 4 * f2 + fb) / 12;\n                s2 = sl + sr;\n                err = (s2 - V0) / 15;\n\n                if (state.maxDepthCount > 1000 * maxdepth) {\n                    return;\n                }\n\n\n                if (depth > maxdepth) {\n                    state.maxDepthCount++;\n                    return s2 + err;\n                }\n                else if (Math.abs(err) < tol) {\n                    return s2 + err;\n                }\n                else {\n                    m = a + h * 0.5;\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n                    if (isNaN(V1)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n                    if (isNaN(V2)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n\n                    return V1 + V2;\n                }\n            }\n\n            function integrate(f, a, b, tol, maxdepth) {\n                var state = {\n                    maxDepthCount: 0,\n                    nanEncountered: false\n                };\n\n                if (tol === undefined) {\n                    tol = 1e-9;\n                }\n                if (maxdepth === undefined) {\n                    /*Issue #458 - This was lowered because of performance issues. */\n                    /*This was suspected from before but is now confirmed with this issue*/\n                    maxdepth = 45;\n                }\n\n                var fa = f(a);\n                var fm = f(0.5 * (a + b));\n                var fb = f(b);\n\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n                if (state.maxDepthCount > 0) {\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n                }\n\n                if (state.nanEncountered) {\n                    throw new Error('Function does not converge over interval!');\n                }\n\n                return result;\n            }\n            var retval;\n\n            try {\n                retval = integrate(f, a, b, tol, maxdepth);\n            }\n            catch (e) {\n                /*fallback to non-adaptive*/\n                return Math2.simpson(f, a, b);\n            }\n            return nround(retval, 12);\n        },\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\n        //CosineIntegral\n        Ci: function (x) {\n            var n = 20,\n                    /*roughly Euler–Mascheroni*/\n                    g = 0.5772156649015329, \n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                /*cache 2n*/\n                var n2 = 2 * i; \n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\n            }\n            return Math.log(x) + g + sum;\n        },\n        /*SineIntegral*/\n        Si: function (x) {\n            var n = 20,\n                    sum = 0;\n            for (var i = 0; i < n; i++) {\n                var n2 = 2 * i;\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\n            }\n            return sum;\n        },\n        /*ExponentialIntegral*/\n        Ei: function (x) {\n            if (Number(x) === 0)\n                return -Infinity;\n            var n = 30,\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\n            }\n            return g + Math.abs(Math.log(x)) + sum;\n        },\n        /*Hyperbolic Sine Integral*/\n        /*http://mathworld.wolfram.com/Shi.html*/\n        Shi: function (x) {\n            var n = 30,\n                    sum = 0,\n                    k, t;\n            for (var i = 0; i < n; i++) {\n                k = 2 * i;\n                t = k + 1;\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\n            }\n            return sum;\n        },\n        /*the cosine integral function*/\n        Chi: function (x) {\n            var dx, g, f;\n            dx = 0.001;\n            g = 0.5772156649015328606;\n            f = function (t) {\n                return (Math.cosh(t) - 1) / t;\n            };\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\n        },\n        /*the log integral*/\n        Li: function (x) {\n            return Math2.Ei(Math2.bigLog(x));\n        },\n        /*the gamma incomplete function*/\n        gamma_incomplete: function (n, x) {\n            var t = n - 1,\n                    sum = 0,\n                    x = x || 0;\n            for (var i = 0; i < t; i++) {\n                sum += Math.pow(x, i) / Math2.factorial(i);\n            }\n            return Math2.factorial(t) * Math.exp(-x) * sum;\n        },\n        /*\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\n         * if x > 0 then 1\n         * if x == 0 then 1/2\n         * if x < 0 then 0\n         */\n        step: function (x) {\n            if (x > 0)\n                return 1;\n            if (x < 0)\n                return 0;\n            return 0.5;\n        },\n        /*\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\n         * if |x| > 1/2 then 0\n         * if |x| == 1/2 then 1/2\n         * if |x| < 1/2 then 1\n         */\n        rect: function (x) {\n            var x = Math.abs(x);\n            if (x === 0.5)\n                return x;\n            if (x > 0.5)\n                return 0;\n            return 1;\n        },\n        /*\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\n         * if x == 0 then 1\n         * otherwise sin(x)/x\n         */\n        sinc: function (x) {\n            if (x.equals(0))\n                return 1;\n            return Math.sin(x) / x;\n        },\n        /*\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\n         * if |x| >= 1 then 0\n         * if |x| < then 1-|x|\n         */\n        tri: function (x) {\n            x = Math.abs(x);\n            if (x >= 1)\n                return 0;\n            return 1 - x;\n        },\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\n        nthroot: function (A, n) {\n            /*make sure the input is of type Frac*/\n            if (!(A instanceof Frac))\n                A = new Frac(A.toString());\n            if (!(n instanceof Frac))\n                n = new Frac(n.toString());\n            if (n.equals(1))\n                return A;\n            /*begin algorithm*/\n            var xk = A.divide(new Frac(2)); /*x0*/\n            var e = new Frac(1e-15);\n            var dk, dk0, d0;\n            var a = n.clone().invert(),\n                    b = n.subtract(new Frac(1));\n            do {\n                var powb = Math2.bigpow(xk, b);\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n                dk = Frac.create(dk_dec);\n                if (d0)\n                    break;\n\n                xk = xk.add(dk);\n                /*check to see if there's no change from the last xk*/\n                var dk_dec = dk.toDecimal();\n                d0 = dk0 ? dk0 === dk_dec : false;\n                dk0 = dk_dec;\n            }\n            while (dk.abs().gte(e))\n\n            return xk;\n        },\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n        /*Just the square root function but big :)*/\n        sqrt: function (n) {\n            if (!(n instanceof Frac))\n                n = new Frac(n);\n            var xn, d, ld, same_delta;\n            var c = 0; /*counter*/\n            var done = false;\n            var delta = new Frac(1e-20);\n            xn = n.divide(new Frac(2));\n            var safety = 1000;\n            do {\n                /*break if we're not converging*/\n                if (c > safety)\n                    throw new Error('Unable to calculate square root for ' + n);\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\n                xn = new Frac(xn.decimal(30));\n                /*get the difference from the true square*/\n                d = n.subtract(xn.multiply(xn));\n                /*if the square of the calculated number is close enough to the number*/\n                /*we're getting the square root or the last delta was the same as the new delta*/\n                /*then we're done*/\n                same_delta = ld ? ld.equals(d) : false;\n                if (d.clone().abs().lessThan(delta) || same_delta)\n                    done = true;\n                /*store the calculated delta*/\n                ld = d;\n                c++; /*increase the counter*/\n            }\n            while (!done)\n\n            return xn;\n        }\n    };\n    //link the Math2 object to Settings.FUNCTION_MODULES\n    Settings.FUNCTION_MODULES.push(Math2);\n    reserveNames(Math2); //reserve the names in Math2\n\n\n//Polyfills ==================================================================== \n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\n    Math.sign = Math.sign || function (x) {\n        x = +x; // convert to a number\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n        return x > 0 ? 1 : -1;\n    };\n\n    Math.cosh = Math.cosh || function (x) {\n        var y = Math.exp(x);\n        return (y + 1 / y) / 2;\n    };\n\n    Math.sech = Math.sech || function (x) {\n        return 1 / Math.cosh(x);\n    };\n\n    Math.csch = Math.csch || function (x) {\n        return 1 / Math.sinh(x);\n    };\n\n    Math.coth = Math.coth || function (x) {\n        return 1 / Math.tanh(x);\n    };\n\n    Math.sinh = Math.sinh || function (x) {\n        var y = Math.exp(x);\n        return (y - 1 / y) / 2;\n    };\n\n    Math.tanh = Math.tanh || function (x) {\n        if (x === Infinity) {\n            return 1;\n        }\n        else if (x === -Infinity) {\n            return -1;\n        }\n        else {\n            var y = Math.exp(2 * x);\n            return (y - 1) / (y + 1);\n        }\n    };\n\n    Math.asinh = Math.asinh || function (x) {\n        if (x === -Infinity) {\n            return x;\n        }\n        else {\n            return Math.log(x + Math.sqrt(x * x + 1));\n        }\n    };\n\n    Math.acosh = Math.acosh || function (x) {\n        return Math.log(x + Math.sqrt(x * x - 1));\n    };\n\n    Math.atanh = Math.atanh || function (x) {\n        return Math.log((1 + x) / (1 - x)) / 2;\n    };\n\n    Math.log10 = Math.log10 || function (x) {\n        return Math.log(x) * Math.LOG10E;\n    };\n\n    Math.trunc = Math.trunc || function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n\n//Global functions ============================================================= \n    /**\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector. \n     * If all else fails it *assumes* the object has a toString method and will call that.\n     * \n     * @param {Object} obj\n     * @param {String} option get is as a hash \n     * @param {int} useGroup\n     * @returns {String}\n     */\n    function text(obj, option, useGroup) {\n        var asHash = option === 'hash',\n                //whether to wrap numbers in brackets\n                wrapCondition = undefined,\n                opt = asHash ? undefined : option;\n\n        function toString(obj) {\n            switch (option)\n            {\n                case 'decimals':\n                case 'decimal':\n                    wrapCondition = wrapCondition || function (str) {\n                        return false;\n                    };\n                    return obj.valueOf();\n                case 'recurring':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf(\"'\") !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var negative = false;\n                    var m = Number(parts[0]);\n                    if (m < 0) {\n                        m = -m;\n                        negative = true;\n                    }\n                    var n = Number(parts[1]);\n                    if (!n)\n                        n = 1;\n\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\n                    quotient = quotient.toString() + \".\";\n                    while (c && c < n) {\n                        c *= 10;\n                        quotient += \"0\";\n                    }\n                    var digits = \"\", passed = [], i = 0;\n                    while (true) {\n                        if (typeof passed[c] !== 'undefined') {\n                            var prefix = digits.slice(0, passed[c]),\n                                    cycle = digits.slice(passed[c]),\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\n                        }\n                        var q = Math.floor(c / n), r = c - q * n;\n                        passed[c] = i;\n                        digits += q.toString();\n                        i += 1;\n                        c = 10 * r;\n                    }\n                case 'mixed':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var numer = new bigInt(parts[0]);\n                    var denom = new bigInt(parts[1]);\n                    if (denom.equals(0))\n                        denom = new bigInt(1);\n\n                    //return the quotient plus the remainder\n                    var divmod = numer.divmod(denom);\n                    var quotient = divmod.quotient;\n                    var remainder = divmod.remainder;\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\n                default:\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n\n                    return obj.toString();\n            }\n        }\n\n        //if the object is a symbol\n        if (isSymbol(obj)) {\n            var multiplier = '',\n                    power = '',\n                    sign = '',\n                    group = obj.group || useGroup,\n                    value = obj.value;\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\n            if (!asHash) {\n                //use asDecimal to get the object back as a decimal\n                var om = toString(obj.multiplier);\n                if (om == '-1') {\n                    sign = '-';\n                    om = '1';\n                }\n                //only add the multiplier if it's not 1\n                if (om != '1')\n                    multiplier = om;\n                //use asDecimal to get the object back as a decimal\n                var p = obj.power ? toString(obj.power) : '';\n                //only add the multiplier \n                if (p != '1') {\n                    //is it a symbol\n                    if (isSymbol(p)) {\n                        power = text(p, opt);\n                    }\n                    else {\n                        power = p;\n                    }\n                }\n            }\n\n            switch (group) {\n                case N:\n                    multiplier = '';\n\n                    //if it's numerical then all we need is the multiplier\n                    value = obj.multiplier == '-1' ? '1' : toString(obj.multiplier);\n                    power = '';\n                    break;\n                case PL:\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CP:\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CB:\n                    value = obj.collectSymbols(function (symbol) {\n                        var g = symbol.group;\n                        //both groups will already be in brackets if their power is greater than 1\n                        //so skip it.\n                        if ((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\n                            return inBrackets(text(symbol, opt));\n                        }\n                        return text(symbol, opt);\n                    }).join('*');\n                    break;\n                case EX:\n                    var pg = obj.previousGroup,\n                            pwg = obj.power.group;\n\n                    //PL are the exception. It's simpler to just collect and set the value\n                    if (pg === PL)\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\n                    if (!(pg === N || pg === S || pg === FN) && !asHash) {\n                        value = inBrackets(value);\n                    }\n\n                    if ((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\n                        power = inBrackets(power);\n                    }\n                    break;\n            }\n\n            if (group === FN) {\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\n                    return text(symbol, opt);\n                }).join(','));\n            }\n            //TODO: Needs to be more efficient. Maybe. \n            if (group === FN && obj.fname in CUSTOM_OPERATORS) {\n                var a = text(obj.args[0]);\n                var b = text(obj.args[1]);\n                if (obj.args[0].isComposite()) //preserve the brackets\n                    a = inBrackets(a);\n                if (obj.args[1].isComposite()) //preserve the brackets\n                    b = inBrackets(b);\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\n            }\n            //wrap the power since / is less than ^\n            //TODO: introduce method call isSimple\n            if (power && group !== EX && wrapCondition(power)) {\n                power = inBrackets(power);\n            }\n\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\n            //by a multiplier and have to be in brackets to preserve the order of precedence\n            if (((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\n                    || !asHash && group === P && value == -1\n                    || obj.fname === PARENTHESIS) {\n\n                value = inBrackets(value);\n            }\n\n            var c = sign + multiplier;\n            if (multiplier && wrapCondition(multiplier))\n                c = inBrackets(c);\n\n            if (power < 0)\n                power = inBrackets(power);\n            if (multiplier)\n                c = c + '*';\n            if (power)\n                power = Settings.POWER_OPERATOR + power;\n\n            //this needs serious rethinking. Must fix\n            if (group === EX && value.charAt(0) === '-')\n                value = inBrackets(value);\n\n            var cv = c + value;\n\n            if (obj.parens)\n                cv = inBrackets(cv);\n\n            return cv + power;\n        }\n        else if (isVector(obj)) {\n            var l = obj.elements.length,\n                    c = [];\n            for (var i = 0; i < l; i++)\n                c.push(obj.elements[i].text(option));\n            return '[' + c.join(',') + ']';\n        }\n        else {\n            try {\n                return obj.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        }\n    }\n    /**\n     * Calculates prime factors for a number\n     * @param {int} num\n     * @returns {Array}\n     */\n\n    function primeFactors(num) {\n        if (isPrime(num))\n            return [num];\n        var l = num, i = 1, factors = [],\n                epsilon = 2.2204460492503130808472633361816E-16;\n        while (i < l) {\n            var quotient = num / i;\n            var whole = Math.floor(quotient);\n            var remainder = quotient - whole;\n            if (remainder <= epsilon && i > 1) {\n                if (PRIMES.indexOf(i) !== -1)\n                    PRIMES[i]=i;\n                factors.push(i);\n                l = whole;\n            }\n            i++;\n        }\n        \n        return factors.sort(function (a, b) {\n            return a - b;\n        });\n    };\n\n//Expression ===================================================================   \n    /** \n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and \n     * provides the user with some useful functions. If you want to provide the user with extra\n     * library functions then add them to this class's prototype.\n     * @param {Symbol} symbol\n     * @returns {Expression} wraps around the Symbol class\n     */\n    function Expression(symbol) {\n        //we don't want arrays wrapped\n        this.symbol = symbol;\n    }\n    /**\n     * Returns stored expression at index. For first index use 1 not 0.\n     * @param {bool} asType  \n     * @param {Integer} expression_number \n     */\n    Expression.getExpression = function (expression_number, asType) {\n        if (expression_number === 'last' || !expression_number)\n            expression_number = EXPRESSIONS.length;\n        if (expression_number === 'first')\n            expression_number = 1;\n        var index = expression_number - 1,\n                expression = EXPRESSIONS[index],\n                retval = expression ? new Expression(expression) : expression;\n        return retval;\n    };\n    Expression.prototype = {\n        /**\n         * Returns the text representation of the expression\n         * @param {String} opt - option of formatting numbers\n         * @param {Number} n The number of significant figures\n         * @returns {String}\n         */\n        text: function (opt, n) {\n            var round = typeof n === 'undefined';\n            n = n || 24; \n            opt = opt || 'decimals';\n            if (this.symbol.text_)\n                return this.symbol.text_(opt);\n            \n            if(this.symbol.group === N && (opt === 'decimals' || opt === 'decimal')) {\n                var txt = this.symbol.multiplier.toDecimal(n);\n                \n                //round as not to have a breaking change but only do so if no significant figures were specified\n                if(round && !isInt(txt)) \n                    txt = nround(txt, 19).toString();\n                return txt;\n            }\n            return text(this.symbol, opt);\n        },\n        /**\n         * Returns the latex representation of the expression\n         * @param {String} option - option for formatting numbers\n         * @returns {String}\n         */\n        latex: function (option) {\n            if (this.symbol.latex)\n                return this.symbol.latex(option);\n            return LaTeX.latex(this.symbol, option);\n        },\n        valueOf: function () {\n            return this.symbol.valueOf();\n        },\n\n        /**\n         * Evaluates the expression and tries to reduce it to a number if possible.\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\n         * Other than that it will just use it's own text and reparse\n         * @returns {Expression}\n         */\n        evaluate: function () {\n            var first_arg = arguments[0], expression, idx = 1;\n            //Enable getting of expressions using the % so for example %1 should get the first expression\n            if (typeof first_arg === 'string') {\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\n            }\n            else if (first_arg instanceof Expression || isSymbol(first_arg)) {\n                expression = first_arg.text();\n            }\n            else {\n                expression = this.symbol.text();\n                idx--;\n            }\n\n            var subs = arguments[idx] || {};\n\n            return new Expression(block('PARSE2NUMBER', function () {\n                return _.parse(expression, subs);\n            }, true));\n        },\n        /**\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of \n         * the default alphabetical order\n         * @param vars {Array}\n         */\n        buildFunction: function (vars) {\n            return Build.build(this.symbol, vars);\n        },\n        /**\n         * Checks to see if the expression is just a plain old number\n         * @returns {boolean}\n         */\n        isNumber: function () {\n            return isNumericSymbol(this.symbol);\n        },\n        /**\n         * Checks to see if the expression is infinity\n         * @returns {boolean}\n         */\n        isInfinity: function () {\n            return Math.abs(this.symbol.multiplier) === Infinity;\n        },\n        /**\n         * Returns all the variables in the expression\n         * @returns {Array}\n         */\n        variables: function () {\n            return variables(this.symbol);\n        },\n\n        toString: function () {\n            try {\n                if (isArray(this.symbol))\n                    return '[' + this.symbol.toString() + ']';\n                return this.symbol.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        },\n        //forces the symbol to be returned as a decimal\n        toDecimal: function (prec) {\n            Settings.precision = prec;\n            var dec = text(this.symbol, 'decimals');\n            Settings.precision = undefined;\n            return dec;\n        },\n        //checks to see if the expression is a fraction\n        isFraction: function () {\n            return isFraction(this.symbol);\n        },\n        //checks to see if the symbol is a multivariate polynomial\n        isPolynomial: function () {\n            return this.symbol.isPoly();\n        },\n        //performs a substitution\n        sub: function (symbol, for_symbol) {\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\n        },\n        operation: function (otype, symbol) {\n            if (isExpression(symbol))\n                symbol = symbol.symbol;\n            else if (!isSymbol(symbol))\n                symbol = _.parse(symbol);\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\n        },\n        add: function (symbol) {\n            return this.operation('add', symbol);\n        },\n        subtract: function (symbol) {\n            return this.operation('subtract', symbol);\n        },\n        multiply: function (symbol) {\n            return this.operation('multiply', symbol);\n        },\n        divide: function (symbol) {\n            return this.operation('divide', symbol);\n        },\n        pow: function (symbol) {\n            return this.operation('pow', symbol);\n        },\n        expand: function () {\n            return new Expression(_.expand(this.symbol));\n        },\n        each: function (callback, i) {\n            if (this.symbol.each)\n                this.symbol.each(callback, i);\n            else if (isArray(this.symbol)) {\n                for (var i = 0; i < this.symbol.length; i++)\n                    callback.call(this.symbol, this.symbol[i], i);\n            }\n            else\n                callback.call(this.symbol);\n        },\n        eq: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = _.subtract(this.symbol.clone(), value);\n                return d.equals(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        lt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.lessThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.greaterThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gte: function (value) {\n            return this.gt(value) || this.eq(value);\n        },\n        lte: function (value) {\n            return this.lt(value) || this.eq(value);\n        },\n\n        numerator: function () {\n            return new Expression(this.symbol.getNum());\n        },\n        denominator: function () {\n            return new Expression(this.symbol.getDenom());\n        },\n        hasFunction: function(f) {\n            return this.symbol.containsFunction(f);\n        },\n        contains: function(variable) {\n            return this.symbol.contains(variable);\n        }\n    };\n    //Aliases\n    Expression.prototype.toTeX = Expression.prototype.latex;\n\n//Scientific ===================================================================  \n    function Scientific(num) {\n        if (!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if (num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        } else {\n            this.sign = 1;\n        }\n\n        if (Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        } else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function (num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function (num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || '';\n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w + d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location - (zeroes + 1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\n\n            return this;\n        },\n        round: function (num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if (num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num + 1);\n                //get the next two\n                var next_two = this.coeff.substring(num + 1, num + 3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if (next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded + ed;\n            }\n\n            return n;\n        },\n        copy: function () {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function (n) {\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n            return (this.sign === -1 ? '-' : '') + coeff + 'e' + this.exponent;\n        }\n    };\n\n    Scientific.isScientific = function (num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function (num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    };\n    Scientific.removeLeadingZeroes = function (num) {\n        var match = num.match(/^0*(.*)$/);\n        return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function (num) {\n        var match = num.match(/0*$/);\n        return match ? num.substring(0, num.length - match[0].length) : '';\n    };\n    Scientific.round = function (c, n) {\n        var coeff = nround(c, n);\n        var m = String(coeff).split('.').pop();\n        var d = n - m.length;\n        //if we're asking for more significant figures\n        if (d > 0) {\n            coeff = coeff + (new Array(d + 1).join(0));\n        }\n        return coeff;\n    };\n\n//Scientific ===================================================================\n    /*\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\n     */\n\n    function Scientific(num) {\n        if(!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if(num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        }\n        else {\n            this.sign = 1;\n        }\n\n        if(Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        }\n        else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function(num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function(num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || ''; \n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w+d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location-(zeroes+1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0)+'.'+(coeff.substr(1, coeff.length) || '0');\n\n            return this;\n        },\n        round: function(num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if(num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num+1);\n                //get the next two\n                var next_two = this.coeff.substring(num+1, num+3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if(next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded+ed;\n            }\n\n            return n;\n        },\n        copy: function() {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function(n) {\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n            return (this.sign === -1 ? '-' : '' )+coeff+'e'+this.exponent;\n        }\n    };\n\n    Scientific.isScientific = function(num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function(num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    }; \n    Scientific.removeLeadingZeroes = function(num) {\n      var match = num.match(/^0*(.*)$/);\n      return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function(num) {\n      var match = num.match(/0*$/);\n      return match ? num.substring(0, num.length-match[0].length) : '';\n    };\n\n\n//Frac =========================================================================    \n    function Frac(n) {\n        if (n instanceof Frac)\n            return n;\n        if (n === undefined)\n            return this;\n        try {\n            if (isInt(n)) {\n                try {\n                    this.num = bigInt(n);\n                    this.den = bigInt(1);\n                }\n                catch (e) {\n                    return Frac.simple(n);\n                }\n            }\n            else {\n                var frac = Fraction.convert(n);\n                this.num = new bigInt(frac[0]);\n                this.den = new bigInt(frac[1]);\n            }\n        }\n        catch (e) {\n            return Frac.simple(n);\n        }\n\n    }\n    //safe to use with negative numbers or other types\n    Frac.create = function (n) {\n        if (n instanceof Frac)\n            return n;\n        n = n.toString();\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\n        if (is_neg)\n            n = n.substr(1, n.length - 1); //remove the sign\n        var frac = new Frac(n);\n        //put the sign back\n        if (is_neg)\n            frac.negate();\n        return frac;\n    };\n    Frac.isFrac = function (o) {\n        return (o instanceof Frac);\n    };\n    Frac.quick = function (n, d) {\n        var frac = new Frac();\n        frac.num = new bigInt(n);\n        frac.den = new bigInt(d);\n        return frac;\n    };\n    Frac.simple = function (n) {\n        var nstr = String(scientificToDecimal(n)),\n                m_dc = nstr.split('.'),\n                num = m_dc.join(''),\n                den = 1,\n                l = (m_dc[1] || '').length;\n        for (var i = 0; i < l; i++)\n            den += '0';\n        var frac = Frac.quick(num, den);\n        return frac.simplify();\n    };\n    Frac.prototype = {\n        multiply: function (m) {\n            if (this.isOne()) {\n                return m.clone();\n            }\n            if (m.isOne()) {\n                return this.clone();\n            }\n\n            var c = this.clone();\n            c.num = c.num.multiply(m.num);\n            c.den = c.den.multiply(m.den);\n\n            return c.simplify();\n        },\n        divide: function (m) {\n            if (m.equals(0))\n                throw new DivisionByZero('Division by zero not allowed!');\n            return this.clone().multiply(m.clone().invert()).simplify();\n        },\n        subtract: function (m) {\n            return this.clone().add(m.clone().neg());\n        },\n        neg: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        add: function (m) {\n            var n1 = this.den, n2 = m.den, c = this.clone();\n            var a = c.num, b = m.num;\n            if (n1.equals(n2)) {\n                c.num = a.add(b);\n            }\n            else {\n                c.num = a.multiply(n2).add(b.multiply(n1));\n                c.den = n1.multiply(n2);\n            }\n\n            return c.simplify();\n        },\n        mod: function (m) {\n            var a = this.clone(),\n                    b = m.clone();\n            //make their denominators even and return the mod of their numerators\n            a.num = a.num.multiply(b.den);\n            a.den = a.den.multiply(b.den);\n            b.num = b.num.multiply(this.den);\n            b.den = b.den.multiply(this.den);\n            a.num = a.num.mod(b.num);\n            return a.simplify();\n        },\n        simplify: function () {\n            var gcd = bigInt.gcd(this.num, this.den);\n\n            this.num = this.num.divide(gcd);\n            this.den = this.den.divide(gcd);\n            return this;\n        },\n        clone: function () {\n            var m = new Frac();\n            m.num = new bigInt(this.num);\n            m.den = new bigInt(this.den);\n            return m;\n        },\n        decimal: function (prec) {\n            var sign = this.num.isNegative() ? '-' : '';\n            if (this.num.equals(this.den)) {\n                return '1';\n            }\n            //go plus one for rounding\n            prec = prec || Settings.PRECISION;\n            prec++;\n            var narr = [],\n                    n = this.num.abs(),\n                    d = this.den;\n            for (var i = 0; i < prec; i++) {\n                var w = n.divide(d), //divide out whole\n                        r = n.subtract(w.multiply(d)); //get remainder\n\n                narr.push(w);\n                if (r.equals(0))\n                    break;\n                n = r.times(10); //shift one dec place\n            }\n            var whole = narr.shift();\n            if (narr.length === 0) {\n                return sign + whole.toString();\n            }\n\n            if (i === prec) {\n                var lt = [];\n                //get the last two so we can round it\n                for (var i = 0; i < 2; i++)\n                    lt.unshift(narr.pop());\n                //put the last digit back by rounding the last two\n                narr.push(Math.round(lt.join('.')));\n            }\n\n            var dec = whole.toString() + '.' + narr.join('');\n            return sign + dec;\n        },\n        toDecimal: function (prec) {\n            if (prec || Settings.PRECISION) {\n                return this.decimal(prec);\n            }\n            else \n                return this.num / this.den;\n        },\n        qcompare: function (n) {\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\n        },\n        equals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].equals(q[1]);\n        },\n        absEquals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].abs().equals(q[1]);\n        },\n        //lazy check to be fixed. Sufficient for now but will cause future problems\n        greaterThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].gt(q[1]);\n        },\n        gte: function (n) {\n            return this.greaterThan(n) || this.equals(n);\n        },\n        lte: function (n) {\n            return this.lessThan(n) || this.equals(n);\n        },\n        lessThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].lt(q[1]);\n        },\n        isInteger: function () {\n            return this.den.equals(1);\n        },\n        negate: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        invert: function () {\n            var t = this.den;\n            //why invert 0/1? It'll become 1/0 and that's a lie.\n            if (!this.num.equals(0)) {\n                var isnegative = this.num.isNegative();\n                this.den = this.num.abs();\n                this.num = t;\n                if (isnegative)\n                    this.num = this.num.multiply(-1);\n            }\n\n            return this;\n        },\n        isOne: function () {\n            return this.num.equals(1) && this.den.equals(1);\n        },\n        sign: function () {\n            return this.num.isNegative() ? -1 : 1;\n        },\n        abs: function () {\n            this.num = this.num.abs();\n            return this;\n        },\n        gcd: function (f) {\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\n        },\n        toString: function () {\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n        },\n        valueOf: function () {\n//            if(this.num == 24) throw new Error(999)\n            if (Settings.USE_BIG)\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\n            return this.num / this.den;\n        },\n        isNegative: function () {\n            return this.toDecimal() < 0;\n        }\n    };\n\n//Symbol =======================================================================\n    /**\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group. \n     * All symbols except for \"numbers (group N)\" have a power. \n     * @class Primary data type for the Parser. \n     * @param {String} obj \n     * @returns {Symbol}\n     */\n    function Symbol(obj) {\n        var isInfinity = obj === 'Infinity';\n        //this enables the class to be instantiated without the new operator\n        if (!(this instanceof Symbol)) {\n            return new Symbol(obj);\n        }\n        ;\n        //define numeric symbols\n        if (/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj)) {\n            this.group = N;\n            this.value = CONST_HASH;\n            this.multiplier = new Frac(obj);\n        }\n        //define symbolic symbols\n        else {\n            this.group = S;\n            validateName(obj);\n            this.value = obj;\n            this.multiplier = new Frac(1);\n            this.imaginary = obj === Settings.IMAGINARY;\n            this.isInfinity = isInfinity;\n        }\n\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\n        //Although this is still redundant in constants, it simplifies the logic in\n        //other parts so we'll keep it\n        this.power = new Frac(1);\n\n        // Added to silence the strict warning.\n        return this;\n    }\n    /**\n     * Returns vanilla imaginary symbol\n     * @returns {Symbol}\n     */\n    Symbol.imaginary = function () {\n        var s = new Symbol(Settings.IMAGINARY);\n        s.imaginary = true;\n        return s;\n    };\n    /**\n     * Return nerdamer's representation of Infinity\n     * @param {int} negative -1 to return negative infinity \n     * @returns {Symbol} \n     */\n    Symbol.infinity = function (negative) {\n        var v = new Symbol('Infinity');\n        if (negative === -1)\n            v.negate();\n        return v;\n    };\n    Symbol.shell = function (group, value) {\n        var symbol = new Symbol(value);\n        symbol.group = group;\n        symbol.symbols = {};\n        symbol.length = 0;\n        return symbol;\n    };\n    //sqrt(x) -> x^(1/2)\n    Symbol.unwrapSQRT = function (symbol, all) {\n        var p = symbol.power;\n        if (symbol.fname === SQRT && (symbol.isLinear() || all)) {\n            var t = symbol.args[0].clone();\n            t.power = t.power.multiply(new Frac(1 / 2));\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\n            symbol = t;\n            if (all)\n                symbol.power = p.multiply(new Frac(1 / 2));\n        }\n\n        return symbol;\n    };\n    Symbol.hyp = function (a, b) {\n        a = a || new Symbol(0);\n        b = b || new Symbol(0);\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\n    };\n    //converts to polar form array\n    Symbol.toPolarFormArray = function (symbol) {\n        var re, im, r, theta;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        r = Symbol.hyp(re, im);\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\n        return [r, theta];\n    };\n    //removes parentheses\n    Symbol.unwrapPARENS = function (symbol) {\n        if (symbol.fname === '') {\n            var r = symbol.args[0];\n            r.power = r.power.multiply(symbol.power);\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\n            if (symbol.fname === '')\n                return Symbol.unwrapPARENS(r);\n            return r;\n        }\n        return symbol;\n    };\n    //quickly creates a Symbol\n    Symbol.create = function (value, power) {\n        power = power === undefined ? 1 : power;\n        return _.parse('(' + value + ')^(' + power + ')');\n    };\n    Symbol.prototype = {\n        isSimple: function () {\n            return this.power.equals(1) && this.multiplier.equals(1);\n        },\n        //returns a clone.\n        powSimp: function () {\n            if (this.group === CB) {\n                var powers = [],\n                        sign = this.multiplier.sign();\n                this.each(function (x) {\n                    var p = x.power;\n                    //why waste time if I can't do anything anyway\n                    if (isSymbol(p) || p.equals(1))\n                        return this.clone();\n                    powers.push(p);\n                });\n                var min = new Frac(arrayMin(powers));\n\n                //handle the coefficient\n                //handle the multiplier\n                var sign = this.multiplier.sign(),\n                        m = this.multiplier.clone().abs(),\n                        mfactors = Math2.ifactor(m);\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\n                //we can then reduce it to 2*3*5*(15)^2 \n                var out_ = new Frac(1);\n                var in_ = new Frac(1);\n\n                for (var x in mfactors) {\n                    var n = new Frac(mfactors[x]);\n                    if (!n.lessThan(min)) {\n                        n = n.divide(min).subtract(new Frac(1));\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\n                    }\n\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\n                }\n                var t = new Symbol(in_);\n                this.each(function (x) {\n                    x = x.clone();\n                    x.power = x.power.divide(min);\n                    t = _.multiply(t, x);\n                });\n\n                var xt = _.symfunction(PARENTHESIS, [t]);\n                xt.power = min;\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\n\n                return xt;\n            }\n            return this.clone();\n        },\n        /**\n         * Checks to see if two functions are of equal value\n         * @param {Symbol} symbol\n         */\n        equals: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.value === symbol.value && this.power.equals(symbol.power)\n                    && this.multiplier.equals(symbol.multiplier)\n                    && this.group === symbol.group;\n        },\n        abs: function() {\n            var e = this.clone();\n            e.multiplier.abs();\n            return e;\n        },\n        // Greater than\n        gt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Greater than\n        gte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Less than\n        lt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        // Less than\n        lte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        /**\n         * Because nerdamer doesn't group symbols by polynomials but \n         * rather a custom grouping method, this has to be\n         * reinserted in order to make use of most algorithms. This function\n         * checks if the symbol meets the criteria of a polynomial.\n         * @param {bool} multivariate\n         * @returns {boolean}\n         */\n        isPoly: function (multivariate) {\n            var g = this.group,\n                    p = this.power;\n            //the power must be a integer so fail if it's not\n            if (!isInt(p) || p < 0)\n                return false;\n            //constants and first orders\n            if (g === N || g === S || this.isConstant(true))\n                return true;\n            var vars = variables(this);\n            if (g === CB && vars.length === 1) {\n                //the variable is assumed the only one that was found\n                var v = vars[0];\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\n                if (!v)\n                    return true;\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    //sqrt(x)\n                    if (sym.group === FN && !sym.args[0].isConstant())\n                        return false;\n                    if (!sym.contains(v) && !sym.isConstant(true))\n                        return false;\n                }\n                return true;\n            }\n            //PL groups. These only fail if a power is not an int\n            //this should handle cases such as x^2*t\n            if (this.isComposite() || g === CB && multivariate) {\n                //fail if we're not checking for multivariate polynomials\n                if (!multivariate && vars.length > 1)\n                    return false;\n                //loop though the symbols and check if they qualify\n                for (var x in this.symbols) {\n                    //we've already the symbols if we're not checking for multivariates at this point\n                    //so we check the sub-symbols\n                    if (!this.symbols[x].isPoly(multivariate))\n                        return false;\n                }\n                return true;\n            }\n            else\n                return false;\n\n            /*\n             //all tests must have passed so we must be dealing with a polynomial\n             return true;\n             */\n        },\n        //removes the requested variable from the symbol and returns the remainder\n        stripVar: function (x, exclude_x) {\n            var retval;\n            if ((this.group === PL || this.group === S) && this.value === x)\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\n            else if (this.group === CB && this.isLinear()) {\n                retval = new Symbol(1);\n                this.each(function (s) {\n                    if (!s.contains(x, true))\n                        retval = _.multiply(retval, s.clone());\n                });\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\n            }\n            else if (this.group === CP && !this.isLinear()) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === CP && this.isLinear()) {\n                retval = new Symbol(0);\n                this.each(function (s) {\n                    if (!s.contains(x)) {\n                        var t = s.clone();\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\n                        retval = _.add(retval, t);\n                    }\n                });\n                //BIG TODO!!! It doesn't make much sense\n                if (retval.equals(0))\n                    retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === EX && this.power.contains(x, true)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === FN && this.contains(x)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else\n                //wth? This should technically be the multiplier. \n                //Unfortunately this method wasn't very well thought out :`(.   \n                //should be: retval = new Symbol(this.multiplier);\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\n                //this will break a bunch of unit tests so be ready to for the long haul\n                retval = this.clone();\n\n\n            return retval;\n        },\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a]. \n        toArray: function (v, arr) {\n            arr = arr || {\n                arr: [],\n                add: function (x, idx) {\n                    var e = this.arr[idx];\n                    this.arr[idx] = e ? _.add(e, x) : x;\n                }\n            };\n            var g = this.group;\n\n            if (g === S && this.contains(v)) {\n                arr.add(new Symbol(this.multiplier), this.power);\n            }\n            else if (g === CB) {\n                var a = this.stripVar(v),\n                        x = _.divide(this.clone(), a.clone());\n                var p = x.isConstant() ? 0 : x.power;\n                arr.add(a, p);\n            }\n            else if (g === PL && this.value === v) {\n                this.each(function (x, p) {\n                    arr.add(x.stripVar(v), p);\n                });\n            }\n            else if (g === CP) {\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\n                //each case is handled above\n                this.each(function (x) {\n                    x.toArray(v, arr);\n                });\n            }\n            else if (this.contains(v)) {\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\n            }\n            else {\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\n            }\n            //fill the holes\n            arr = arr.arr; //keep only the array since we don't need the object anymore\n            for (var i = 0; i < arr.length; i++)\n                if (!arr[i])\n                    arr[i] = new Symbol(0);\n            return arr;\n        },\n        //checks to see if a symbol contans a function\n        hasFunc: function (v) {\n            var fn_group = this.group === FN || this.group === EX;\n            if (fn_group && !v || fn_group && this.contains(v))\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].hasFunc(v))\n                        return true;\n                }\n            }\n            return false;\n        },\n        sub: function (a, b) {\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\n            if (a.group === N || a.group === P)\n                err('Cannot substitute a number. Must be a variable');\n            var same_pow = false,\n                    a_is_unit_multiplier = a.multiplier.equals(1),\n                    m = this.multiplier.clone(),\n                    retval;\n            /* \n             * In order to make the substitution the bases have to first match take\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\n             * In both cases the first condition is that the bases match so we begin there\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\n             */\n            if (this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\n                //we cleared the first hurdle but a subsitution may not be possible just yet\n                if (a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\n                    if (a.isLinear()) {\n                        retval = b;\n                    }\n                    else if (a.power.equals(this.power)) {\n                        retval = b;\n                        same_pow = true;\n                    }\n                    if (a.multiplier.equals(this.multiplier))\n                        m = new Frac(1);\n                }\n            }\n            //the next thing is to handle CB\n            else if (this.group === CB || this.previousGroup === CB) {\n                retval = new Symbol(1);\n                this.each(function (x) {\n                    retval = _.multiply(retval, x.sub(a, b));\n                });\n            }\n            else if (this.isComposite()) {\n                if (a.isComposite() && this.isComposite() && this.isLinear() && a.isLinear()) {\n                    var find = function (stack, needle) {\n                        for (var x in stack.symbols) {\n                            var sym = stack.symbols[x];\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\n                            if (sym.isComposite() && find(sym, needle) || sym.equals(needle))\n                                return true;\n                        }\n                        return false;\n                    };\n                    //go fish\n                    for (var x in a.symbols) {\n                        if (!find(this, a.symbols[x]))\n                            return this.clone();\n                    }\n                    retval = _.add(_.subtract(this.clone(), a), b);\n                }\n                else {\n                    retval = new Symbol(0);\n                    this.each(function (x) {\n                        retval = _.add(retval, x.sub(a, b));\n                    });\n                }\n            }\n            else if (this.group === EX) {\n                // the parsed value could be a function so parse and sub\n                retval = _.parse(this.value).sub(a, b);\n            }\n            else if (this.group === FN) {\n                var nargs = [];\n                for (var i = 0; i < this.args.length; i++) {\n                    var arg = this.args[i];\n                    if (!isSymbol(arg))\n                        arg = _.parse(arg);\n                    nargs.push(arg.sub(a, b));\n                }\n                retval = _.symfunction(this.fname, nargs);\n            }\n            //if we did manage a substitution\n            if (retval) {\n                if (!same_pow) {\n                    //substitute the power\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\n                    //now raise the symbol to that power\n                    retval = _.pow(retval, p);\n                }\n\n                //transfer the multiplier\n                retval.multiplier = retval.multiplier.multiply(m);\n                //done\n                return retval;\n            }\n            //if all else fails\n            return this.clone();\n        },\n        isMonomial: function () {\n            if (this.group === S)\n                return true;\n            if (this.group === CB) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].group !== S)\n                        return false;\n            }\n            else\n                return false;\n            return true;\n        },\n        isPi: function () {\n            return this.group === S && this.value === 'pi';\n        },\n        sign: function () {\n            return this.multiplier.sign();\n        },\n        isE: function () {\n            return this.value === 'e';\n        },\n        isSQRT: function () {\n            return this.fname === SQRT;\n        },\n        isConstant: function (check_all, check_symbols) {\n            if(check_symbols && this.group === CB) {\n                for(var x in this.symbols) {\n                    if(this.symbols[x].isConstant(true))\n                        return true;\n                }\n            }\n            \n            if (check_all === 'all' && (this.isPi() || this.isE()))\n                return true;\n            \n            if (check_all && this.group === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (!this.args[i].isConstant(check_all))\n                        return false;\n                }\n                return true;\n            }\n            \n            if(check_all)\n                return isNumericSymbol(this);\n            return this.value === CONST_HASH;\n        },\n        //the symbols is imaginary if \n        //1. n*i\n        //2. a+b*i\n        //3. a*i\n        isImaginary: function () {\n            if (this.imaginary)\n                return true;\n            else if (this.symbols) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].isImaginary())\n                        return true;\n            }\n            return false;\n        },\n        /**\n         * Returns the real part of a symbol\n         * @returns {Symbol}\n         */\n        realpart: function () {\n            if (this.isConstant()) {\n                return this.clone();\n            }\n            else if (this.imaginary)\n                return new Symbol(0);\n            else if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.realpart());\n                });\n                return retval;\n            }\n            else if (this.isImaginary())\n                return new Symbol(0);\n            return this.clone();\n        },\n        /*\n         * Return imaginary part of a symbol\n         * @returns {Symbol}\n         */\n        imagpart: function () {\n            if (this.group === S && this.isImaginary())\n                return new Symbol(this.multiplier);\n            if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.imagpart());\n                });\n                return retval;\n            }\n            if (this.group === CB)\n                return this.stripVar(Settings.IMAGINARY);\n            return new Symbol(0);\n        },\n        isInteger: function () {\n            return this.isConstant() && this.multiplier.isInteger();\n        },\n        isLinear: function (wrt) {\n            if (wrt) {\n                if (this.isConstant())\n                    return true;\n                if (this.group === S) {\n                    if (this.value === wrt)\n                        return this.power.equals(1);\n                    else\n                        return true;\n                }\n\n                if (this.isComposite() && this.power.equals(1)) {\n                    for (var x in this.symbols) {\n                        if (!this.symbols[x].isLinear(wrt))\n                            return false;\n                    }\n                    return true;\n                }\n\n                if (this.group === CB && this.symbols[wrt])\n                    return this.symbols[wrt].isLinear(wrt);\n                return false;\n            }\n            else\n                return this.power.equals(1);\n        },\n        /**\n         * Checks to see if a symbol has a function by a specified name or within a specified list\n         * @param {String|String[]} names\n         * @returns {Boolean}\n         */\n        containsFunction: function (names) {\n            if (typeof names === 'string')\n                names = [names];\n            if (this.group === FN && names.indexOf(this.fname) !== -1)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].containsFunction(names))\n                        return true;\n                }\n            }\n            return false;\n        },\n        multiplyPower: function (p2) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n\n            var p1 = this.power;\n\n            if (this.group !== EX && p2.group === N) {\n                var p = p2.multiplier;\n                if (this.group === N && !p.isInteger()) {\n                    this.convert(P);\n                }\n\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\n\n                if (this.group === P && isInt(this.power)) {\n                    //bring it back to an N\n                    this.value = Math.pow(this.value, this.power);\n                    this.toLinear();\n                    this.convert(N);\n                }\n            }\n            else {\n                if (this.group !== EX) {\n                    p1 = new Symbol(p1);\n                    this.convert(EX);\n                }\n                this.power = _.multiply(p1, p2);\n            }\n\n            return this;\n        },\n        setPower: function (p, retainSign) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n            if (this.group === EX && !isSymbol(p)) {\n                this.group = this.previousGroup;\n                delete this.previousGroup;\n                if (this.group === N) {\n                    this.multiplier = new Frac(this.value);\n                    this.value = CONST_HASH;\n                }\n                else\n                    this.power = p;\n            }\n            else {\n                var isSymbolic = false;\n                if (isSymbol(p)) {\n                    if (p.group === N) {\n                        //p should be the multiplier instead\n                        p = p.multiplier;\n\n                    }\n                    else {\n                        isSymbolic = true;\n                    }\n                }\n                var group = isSymbolic ? EX : P;\n                this.power = p;\n                if (this.group === N && group)\n                    this.convert(group, retainSign);\n            }\n\n            return this;\n        },\n        /**\n         * Checks to see if symbol is located in the denominator\n         * @returns {boolean}\n         */\n        isInverse: function () {\n            if (this.group === EX)\n                return (this.power.multiplier.lessThan(0));\n            return this.power < 0;\n        },\n        /**\n         * Make a duplicate of a symbol by copying a predefined list of items. \n         * The name 'copy' would probably be a more appropriate name.\n         * to a new symbol\n         * @param {Symbol} c \n         * @returns {Symbol}\n         */\n        clone: function (c) {\n            var clone = c || new Symbol(0),\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\n                    properties = [\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\n                    l = properties.length, i;\n            if (this.symbols) {\n                clone.symbols = {};\n                for (var x in this.symbols) {\n                    clone.symbols[x] = this.symbols[x].clone();\n                }\n            }\n\n            for (i = 0; i < l; i++) {\n                if (this[properties[i]] !== undefined) {\n                    clone[properties[i]] = this[properties[i]];\n                }\n            }\n\n            clone.power = this.power.clone();\n            clone.multiplier = this.multiplier.clone();\n            //add back the flag to track if this symbol is a conversion symbol\n            if (this.isConversion)\n                clone.isConversion = this.isConversion;\n\n            if (this.isUnit)\n                clone.isUnit = this.isUnit;\n\n            return clone;\n        },\n        /**\n         * Converts a symbol multiplier to one.\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\n         * @returns {Symbol}\n         */\n        toUnitMultiplier: function (keepSign) {\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\n            this.multiplier.den = new bigInt(1);\n            return this;\n        },\n        /**\n         * Converts a Symbol's power to one.\n         * @returns {Symbol}\n         */\n        toLinear: function () {\n            this.setPower(new Frac(1));\n            return this;\n        },\n        /**\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\n         * @param {Function} fn\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well \n         */\n        each: function (fn, deep) {\n            if (!this.symbols) {\n                fn.call(this, this, this.value);\n            }\n            else {\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    if (sym.group === PL && deep) {\n                        for (var y in sym.symbols) {\n                            fn.call(x, sym.symbols[y], y);\n                        }\n                    }\n                    else\n                        fn.call(this, sym, x);\n                }\n            }\n        },\n        /**\n         * A numeric value to be returned for Javascript. It will try to \n         * return a number as far a possible but in case of a pure symbolic\n         * symbol it will just return its text representation\n         * @returns {String|Number}\n         */\n        valueOf: function () {\n            if (this.group === N)\n                return this.multiplier.valueOf();\n            else if (this.power === 0) {\n                return 1;\n            }\n            else if (this.multiplier === 0) {\n                return 0;\n            }\n            else {\n                return text(this, 'decimals');\n            }\n        },\n        /**\n         * Checks to see if a symbols has a particular variable within it.\n         * Pass in true as second argument to include the power of exponentials\n         * which aren't check by default.\n         * @example var s = _.parse('x+y+z'); s.contains('y');\n         * //returns true\n         * @param {any} variable \n         * @param {boolean} all \n         * @returns {boolean}\n         */\n        contains: function (variable, all) {\n            //contains expects a string\n            variable = String(variable);\n            var g = this.group;\n            if (this.value === variable)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].contains(variable, all))\n                        return true;\n                }\n            }\n            if (g === FN || this.previousGroup === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (this.args[i].contains(variable, all))\n                        return true;\n                }\n            }\n\n            if (g === EX) {\n                //exit only if it does\n                if (all && this.power.contains(variable, all)) {\n                    return true;\n                }\n                if (this.value === variable)\n                    return true;\n\n            }\n\n            return this.value === variable;\n        },\n        /**\n         * Negates a symbols\n         * @returns {boolean}\n         */\n        negate: function () {\n            this.multiplier.negate();\n            if (this.group === CP || this.group === PL)\n                this.distributeMultiplier();\n            return this;\n        },\n        /**\n         * Inverts a symbol\n         * @param {boolean} power_only\n         * @param {boolean} all\n         * @returns {boolean}\n         */\n        invert: function (power_only, all) {\n            //invert the multiplier\n            if (!power_only)\n                this.multiplier = this.multiplier.invert();\n            //invert the rest\n            if (isSymbol(this.power)) {\n                this.power.negate();\n            }\n            else if (this.group === CB && all) {\n                this.each(function (x) {\n                    return x.invert();\n                });\n            }\n            else {\n                if (this.power && this.group !== N)\n                    this.power.negate();\n            }\n            return this;\n        },\n        /**\n         * Symbols of group CP or PL may have the multiplier being carried by \n         * the top level symbol at any given time e.g. 2*(x+y+z). This is \n         * convenient in many cases, however in some cases the multiplier needs\n         * to be carried individually e.g. 2*x+2*y+2*z.\n         * This method distributes the multiplier over the entire symbol\n         * @param {boolean} all\n         * @returns {Symbol}\n         */\n        distributeMultiplier: function (all) {\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\n            if (this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\n                    s.distributeMultiplier();\n                }\n                this.toUnitMultiplier();\n            }\n\n            return this;\n        },\n        /**\n         * This method expands the exponent over the entire symbol just like\n         * distributeMultiplier\n         * @returns {Symbol}\n         */\n        distributeExponent: function () {\n            if (!this.power.equals(1)) {\n                var p = this.power;\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    if (s.group === EX) {\n                        s.power = _.multiply(s.power, new Symbol(p));\n                    }\n                    else {\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\n                    }\n                }\n                this.toLinear();\n            }\n            return this;\n        },\n        /**\n         * This method will attempt to up-convert or down-convert one symbol\n         * from one group to another. Not all symbols are convertible from one \n         * group to another however. In that case the symbol will remain \n         * unchanged.\n         * @param {int} group\n         * @param {string} imaginary \n         */\n        convert: function (group, imaginary) {\n            if (group > FN) {\n                //make a clone of this symbol;\n                var cp = this.clone();\n\n                //attach a symbols object and upgrade the group\n                this.symbols = {};\n\n                if (group === CB) {\n                    //symbol of group CB hold symbols bound together through multiplication\n                    //because of commutativity this multiplier can technically be anywhere within the group\n                    //to keep track of it however it's easier to always have the top level carry it\n                    cp.toUnitMultiplier();\n                }\n                else {\n                    //reset the symbol\n                    this.toUnitMultiplier();\n                }\n\n                if (this.group === FN) {\n                    cp.args = this.args;\n                    delete this.args;\n                    delete this.fname;\n                }\n\n                //the symbol may originate from the symbol i but this property no longer holds true\n                //after copying\n                if (this.isImgSymbol)\n                    delete this.isImgSymbol;\n\n                this.toLinear();\n                //attach a clone of this symbol to the symbols object using its proper key\n                this.symbols[cp.keyForGroup(group)] = cp;\n                this.group = group;\n                //objects by default don't have a length property. However, in order to keep track of the number\n                //of sub-symbols we have to impliment our own.\n                this.length = 1;\n            }\n            else if (group === EX) {\n                //1^x is just one so check and make sure\n                if (!(this.group === N && this.multiplier.equals(1))) {\n                    if (this.group !== EX)\n                        this.previousGroup = this.group;\n                    if (this.group === N) {\n                        this.value = this.multiplier.num.toString();\n                        this.toUnitMultiplier();\n                    }\n                    //update the hash to reflect the accurate hash\n                    else\n                        this.value = text(this, 'hash');\n\n                    this.group = EX;\n                }\n            }\n            else if (group === N) {\n                var m = this.multiplier.toDecimal();\n                if (this.symbols)\n                    this.symbols = undefined;\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\n            }\n            else if (group === P && this.group === N) {\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\n                this.toUnitMultiplier(!imaginary);\n                this.group = P;\n            }\n            return this;\n        },\n        /**\n         * This method is one of the principal methods to make it all possible.\n         * It performs cleanup and prep operations whenever a symbols is \n         * inserted. If the symbols results in a 1 in a CB (multiplication) \n         * group for instance it will remove the redundant symbol. Similarly\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\n         * will remove any dangling zeroes from the symbol. It will also \n         * up-convert or down-convert a symbol if it detects that it's \n         * incorrectly grouped. It should be noted that this method is not\n         * called directly but rather by the 'attach' method for addition groups\n         * and the 'combine' method for multiplication groups.\n         * @param {Symbol} symbol\n         * @param {String} action\n         */\n        insert: function (symbol, action) {\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\n            if (!isSymbol(symbol))\n                err('Object ' + symbol + ' is not of type Symbol!');\n            if (this.symbols) {\n                var group = this.group;\n                if (group > FN) {\n                    var key = symbol.keyForGroup(group);\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\n                    if (action === 'add') {\n                        var hash = key;\n                        if (existing) {\n                            //add them together using the parser\n                            this.symbols[hash] = _.add(existing, symbol);\n                            //if the addition resulted in a zero multiplier remove it\n                            if (this.symbols[hash].multiplier.equals(0)) {\n                                delete this.symbols[hash];\n                                this.length--;\n\n                                if (this.length === 0) {\n                                    this.convert(N);\n                                    this.multiplier = new Frac(0);\n                                }\n                            }\n                        }\n                        else {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                    }\n                    else {\n                        //check if this is of group P and unwrap before inserting\n                        if (symbol.group === P && isInt(symbol.power)) {\n                            symbol.convert(N);\n                        }\n\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\n                        if (symbol.group !== EX) {\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                            symbol.toUnitMultiplier();\n                        }\n                        else {\n                            symbol.parens = symbol.multiplier.lessThan(0);\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\n                            symbol.toUnitMultiplier(true);\n                        }\n\n                        if (existing) {\n                            //remove because the symbol may have changed\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\n                            if (symbol.isConstant()) {\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\n                            }\n\n                            this.length--;\n                            //clean up\n                        }\n\n                        //don't insert the symbol if it's 1\n                        if (!symbol.isOne(true)) {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                        else if (symbol.multiplier.lessThan(0)) {\n                            this.negate(); //put back the sign\n                        }\n                    }\n\n                    //clean up\n                    if (this.length === 0)\n                        this.convert(N);\n                    //update the hash\n                    if (this.group === CP || this.group === CB) {\n                        this.updateHash();\n                    }\n                }\n            }\n\n            return this;\n        },\n        //the insert method for addition\n        attach: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'add');\n                return this;\n            }\n            return this.insert(symbol, 'add');\n        },\n        //the insert method for multiplication\n        combine: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'multiply');\n                return this;\n            }\n            return this.insert(symbol, 'multiply');\n        },\n        /**\n         * This method should be called after any major \"surgery\" on a symbol.\n         * It updates the hash of the symbol for example if the fname of a \n         * function has changed it will update the hash of the symbol.\n         */\n        updateHash: function () {\n            if (this.group === N)\n                return;\n\n            if (this.group === FN) {\n                var contents = '',\n                        args = this.args,\n                        is_parens = this.fname === PARENTHESIS;\n                for (var i = 0; i < args.length; i++)\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\n                var fn_name = is_parens ? '' : this.fname;\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\n            }\n            else if (!(this.group === S || this.group === PL)) {\n                this.value = text(this, 'hash');\n            }\n        },\n        /**\n         * this function defines how every group in stored within a group of \n         * higher order think of it as the switchboard for the library. It \n         * defines the hashes for symbols. \n         * @param {int} group\n         */\n        keyForGroup: function (group) {\n            var g = this.group;\n            var key;\n\n            if (g === N) {\n                key = this.value;\n            }\n            else if (g === S || g === P) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === FN) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === PL) {\n                //if the order is reversed then we'll assume multiplication\n                //TODO: possible future dilemma\n                if (group === CB)\n                    key = text(this, 'hash');\n                else if (group === CP) {\n                    if (this.power.equals(1))\n                        key = this.value;\n                    else\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\n                }\n                else if (group === PL)\n                    key = this.power.toString();\n                else\n                    key = this.value;\n                return key;\n            }\n            else if (g === CP) {\n                if (group === CP) {\n                    key = text(this, 'hash');\n                }\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === CB) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === EX) {\n                if (group === PL)\n                    key = text(this.power);\n                else\n                    key = text(this, 'hash');\n            }\n\n            return key;\n        },\n        /** \n         * Symbols are typically stored in an object which works fine for most\n         * cases but presents a problem when the order of the symbols makes\n         * a difference. This function simply collects all the symbols and \n         * returns them as an array. If a function is supplied then that \n         * function is called on every symbol contained within the object.\n         * @param {Function} fn\n         * @param {Object} opt\n         * @param {Function} sort_fn\n         * @@param {Boolean} expand_symbol \n         * @returns {Array}\n         */\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\n            var collected = [];\n            if (!this.symbols)\n                collected.push(this);\n            else {\n                for (var x in this.symbols) {\n                    var symbol = this.symbols[x];\n                    if (expand_symbol && (symbol.group === PL || symbol.group === CP)) {\n                        collected = collected.concat(symbol.collectSymbols());\n                    }\n                    else\n                        collected.push(fn ? fn(symbol, opt) : symbol);\n                }\n            }\n            if (sort_fn === null)\n                sort_fn = undefined; //WTF Firefox? Seriously?\n\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\n        },\n        /**\n         * Returns the latex representation of the symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        latex: function (option) {\n            return LaTeX.latex(this, option);\n        },\n        /**\n         * Returns the text representation of a symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        text: function (option) {\n            return text(this, option);\n        },\n        /**\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\n         */\n        isOne: function (abs) {\n            var f = abs ? 'absEquals' : 'equals';\n            if (this.group === N)\n                return this.multiplier[f](1);\n            else\n                return this.power.equals(0);\n        },\n        isComposite: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CP || g === PL || pg === PL || pg === CP;\n        },\n        isCombination: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CB || pg === CB;\n        },\n        lessThan: function (n) {\n            return this.multiplier.lessThan(n);\n        },\n        greaterThan: function (n) {\n            return this.multiplier.greaterThan(n);\n        },\n        /**\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\n         * with other classes the symbol is either the denominator or not. \n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\n         * denominator and has to be found by looking at the actual symbols themselves.\n         */\n        getDenom: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (this.group === CB && this.power.lessThan(0))\n                symbol = _.expand(symbol);\n\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.lessThan(0)) {\n                var d = _.parse(symbol.multiplier.den);\n                retval = symbol.toUnitMultiplier();\n                retval.power.negate();\n                retval = _.multiply(d, retval); //put back the coeff\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.den);\n                for (var x in symbol.symbols)\n                    if (symbol.symbols[x].power < 0)\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\n            }\n            else\n                retval = _.parse(symbol.multiplier.den);\n            return retval;\n        },\n        getNum: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (symbol.group === CB && symbol.power.lessThan(0))\n                symbol = _.expand(symbol);\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.greaterThan(0) && symbol.group !== CB) {\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.num);\n                symbol.each(function (x) {\n                    if (x.power > 0 || x.group === EX && x.power.multiplier > 0) {\n                        retval = _.multiply(retval, x.clone());\n                    }\n                });\n            }\n            else {\n                retval = _.parse(symbol.multiplier.num);\n            }\n            return retval;\n        },\n        toString: function () {\n            return this.text();\n        }\n    };\n\n//Parser =======================================================================     \n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    function Parser() {\n        //Point to the local parser instead of the global one\n        var _ = this;\n        var bin = {};\n        var preprocessors = {names: [], actions: []};\n\n//Parser.classes ===============================================================\n        function Slice(upper, lower) {\n            this.start = upper;\n            this.end = lower;\n        }\n        ;\n        Slice.prototype.isConstant = function () {\n            return this.start.isConstant() && this.end.isConstant();\n        };\n        Slice.prototype.text = function () {\n            return text(this.start) + ':' + text(this.end);\n        };\n\n        /**\n         * Class used to collect arguments for functions\n         * @returns {Parser.Collection}\n         */\n        function Collection() {\n            this.elements = [];\n        }\n        Collection.prototype.append = function (e) {\n            this.elements.push(e);\n        };\n        Collection.prototype.getItems = function () {\n            return this.elements;\n        };\n        Collection.prototype.toString = function () {\n            return _.pretty_print(this.elements);\n        };\n        Collection.create = function (e) {\n            var collection = new Collection();\n            if (e)\n                collection.append(e);\n            return collection;\n        };\n\n        function Token(node, node_type, column) {\n            this.type = node_type;\n            this.value = node;\n            if (column !== undefined)\n                this.column = column + 1;\n            if (node_type === Token.OPERATOR) {\n                //copy everything over from the operator\n                var operator = operators[node];\n                for (var x in operator)\n                    this[x] = operator[x];\n\n            }\n            else if (node_type === Token.FUNCTION) {\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\n                this.leftAssoc = false;\n            }\n        }\n        Token.prototype.toString = function () {\n            return this.value;\n        };\n        Token.prototype.toString = function () {\n            if (this.is_prefix)\n                return '`' + this.value;\n            return this.value;\n        };\n        //some constants\n        Token.OPERATOR = 'OPERATOR';\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\n        Token.FUNCTION = 'FUNCTION';\n        Token.UNIT = 'UNIT';\n        Token.KEYWORD = 'KEYWORD';\n        Token.MAX_PRECEDENCE = 999;\n        //create link to classes\n        this.classes = {\n            Collection: Collection,\n            Slice: Slice,\n            Token: Token\n        };\n//Parser.modules ===============================================================\n        //object for functions which handle complex number\n        var complex = {\n            prec: undefined,\n            cos: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cos(r) * Math.cosh(i));\n                im = _.parse(Math.sin(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sin: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(r) * Math.cosh(i));\n                im = _.parse(Math.cos(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tan: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sec: function (r, i) {\n                var t = this.removeDen(this.cos(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csc: function (r, i) {\n                var t = this.removeDen(this.sin(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            cot: function (r, i) {\n                var t = this.removeDen(this.tan(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acos: function (r, i) {\n                var symbol, sq, a, b, c;\n                symbol = this.fromArray([r, i]);\n                sq = _.expand(_.pow(symbol.clone(), new Symbol(2))); //z*z\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\n                b = _.expand(_.add(symbol.clone(), a));\n                c = log(b);\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\n            },\n            asin: function (r, i) {\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\n            },\n            atan: function (r, i) {\n                var a, b, c, symbol;\n                symbol = complex.fromArray([r, i]);\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\n            },\n            asec: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.acos.apply(this, d);\n            },\n            acsc: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.asin.apply(this, d);\n            },\n            acot: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.atan.apply(this, d);\n            },\n            //Hyperbolic trig\n            cosh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cosh(r) * Math.cos(i));\n                im = _.parse(Math.sinh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sinh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(r) * Math.cos(i));\n                im = _.parse(Math.cosh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tanh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sech: function (r, i) {\n                var t = this.removeDen(this.cosh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csch: function (r, i) {\n                var t = this.removeDen(this.sinh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            coth: function (r, i) {\n                var t = this.removeDen(this.tanh(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acosh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\n            },\n            asinh: function (r, i) {\n                var a, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\n                return _.expand(log(_.add(z, a)));\n            },\n            atanh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = log(_.add(z.clone(), new Symbol(1)));\n                b = log(_.subtract(new Symbol(1), z));\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\n            },\n            asech: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.acosh.apply(this, t);\n            },\n            acsch: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.asinh.apply(this, t);\n            },\n            acoth: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.atanh.apply(this, t);\n            },\n            sqrt: function (symbol) {\n                var re, im, h, a, d;\n                re = symbol.realpart();\n                im = symbol.imagpart();\n                h = Symbol.hyp(re, im);\n                a = _.add(re.clone(), h);\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\n            },\n            log: function (r, i) {\n                var re, im;\n                re = log(Symbol.hyp(r, i));\n                im = _.parse(Math.atan2(i, r));\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\n            },\n            removeDen: function (symbol) {\n                var den, r, i, re, im;\n                if (isArray(symbol)) {\n                    r = symbol[0];\n                    i = symbol[1];\n                }\n                else {\n                    r = symbol.realpart();\n                    i = symbol.imagpart();\n                }\n\n                den = Math.pow(r, 2) + Math.pow(i, 2);\n                re = _.parse(r / den);\n                im = _.parse(i / den);\n                return [re, im];\n            },\n            fromArray: function (arr) {\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\n            },\n            evaluate: function (symbol, f) {\n                var re, im, sign;\n\n                sign = symbol.power.sign();\n                //remove it from under the denominator\n                symbol.power = symbol.power.abs();\n                //expand\n                if (symbol.power.greaterThan(1))\n                    symbol = _.expand(symbol);\n                //remove the denominator\n                if (sign < 0) {\n                    var d = this.removeDen(symbol);\n                    re = d[0];\n                    im = d[1];\n                }\n                else {\n                    re = symbol.realpart();\n                    im = symbol.imagpart();\n                }\n\n                if (re.isConstant('all') && im.isConstant('all'))\n                    return this[f].call(this, re, im);\n                return _.symfunction(f, [symbol]);\n            }\n        };\n        //object for functions which handle trig\n        var trig = this.trig = {\n            //container for trigonometric function\n            cos: function (symbol) {\n                if (symbol.equals('pi') && symbol.multiplier.den.equals(2))\n                    return new Symbol(0);\n\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(new Symbol(Settings.PI / 2)))\n                        return new Symbol(0);\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.cos(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cos');\n                    }\n                }\n                if (symbol.equals(0))\n                    return new Symbol(1);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = Number(m.num), d = Number(m.den);\n                        if (d === 2)\n                            retval = new Symbol(0);\n                        else if (d === 3) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else if (d === 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d === 6) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cos', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('cos', [symbol]);\n\n                return retval;\n            },\n            sin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sin(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sin');\n                }\n\n                if (symbol.equals(0))\n                    return new Symbol(0);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        sign = symbol.multiplier.sign(),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n                if (symbol.equals('pi'))\n                    retval = new Symbol(0);\n                else if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n                    }\n                }\n\n                if (!retval)\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n\n                if (c && (q === 3 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            tan: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'tan');\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('tan', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('tan', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            sec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.sec(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sec');\n                    return _.parse(format('1/cos({0})', symbol));\n                }\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = new Symbol(2);\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('2/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('sec', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('sec', [symbol]);\n\n                return retval;\n            },\n            csc: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant())\n                        return new Symbol(Math2.csc(symbol.valueOf()));\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'csc');\n                    return _.parse(format('1/sin({0})', symbol));\n                }\n\n                var retval,\n                    c = false,\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\n                    sign = symbol.multiplier.sign(),\n                    m = symbol.multiplier.abs();\n\n                symbol.multiplier = m;\n\n                if(symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if(isInt(m)) {\n                        throw new UndefinedError('csc is undefined for '+symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if(d == 2) {\n                            retval = new Symbol(1); c = true;\n                        }\n                        else if(d == 3) {\n                            retval = _.parse('2/sqrt(3)'); c = true\n                        }\n                        else if(d == 4) {\n                            retval = _.parse('sqrt(2)'); c = true;\n                        }\n                        else if(d == 6) {\n                            retval = new Symbol(2); c = true;\n                        }\n                        else \n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n                    }\n                }\n\n                if(!retval) retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n\n                if(c && (q === 3 || q === 4)) retval.negate();\n\n                return retval;\n            },\n            cot: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.cot(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'cot');\n                    return _.parse(format('1/tan({0})', symbol));\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            retval = new Symbol(0);\n                        else if (d == 3) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cot', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('cot', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            acos: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acos');\n                }\n                return _.symfunction('acos', arguments);\n            },\n            asin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asin');\n                }\n                return _.symfunction('asin', arguments);\n            },\n            atan: function (symbol) {\n                var retval;\n                if (symbol.equals(0))\n                    retval = new Symbol(0);\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.atan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'atan');\n                    return _.symfunction('atan', arguments);\n                }\n                else if (symbol.equals(-1))\n                    retval = _.parse('-pi/4');\n                else\n                    retval = _.symfunction('atan', arguments);\n                return retval;\n            },\n            asec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asec');\n                }\n                return _.symfunction('asec', arguments);\n            },\n            acsc: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acsc');\n                }\n                return _.symfunction('acsc', arguments);\n            },\n            acot: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant()) {\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\n                    }\n\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acot');\n                }\n                return _.symfunction('acot', arguments);\n            },\n            atan2: function (a, b) {\n                if (a.equals(0) && b.equals(0))\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\n\n                if (Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\n                    return new Symbol(Math.atan2(a, b));\n                }\n                return _.symfunction('atan2', arguments);\n            }\n        };\n        //object for functions which handle hyperbolic trig\n        var trigh = this.trigh = {\n            //container for hyperbolic trig function\n            cosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.cosh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cosh');\n                    }\n                }\n\n                return retval = _.symfunction('cosh', arguments);\n            },\n            sinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.sinh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sinh');\n                    }\n                }\n\n                return retval = _.symfunction('sinh', arguments);\n            },\n            tanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tanh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'tanh');\n                    }\n                }\n\n                return retval = _.symfunction('tanh', arguments);\n            },\n            sech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sech(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sech');\n                    }\n                    return _.parse(format('1/cosh({0})', symbol));\n                }\n\n                return retval = _.symfunction('sech', arguments);\n            },\n            csch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.csch(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'csch');\n                    }\n                    return _.parse(format('1/sinh({0})', symbol));\n                }\n\n                return retval = _.symfunction('csch', arguments);\n            },\n            coth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.coth(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'coth');\n                    }\n                    return _.parse(format('1/tanh({0})', symbol));\n                }\n\n                return retval = _.symfunction('coth', arguments);\n            },\n            acosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acosh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2-1))', symbol.toString())));\n                else\n                    retval = _.symfunction('acosh', arguments);\n                return retval;\n            },\n            asinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asinh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2+1))', symbol.toString())));\n                else\n                    retval = _.symfunction('asinh', arguments);\n                return retval;\n            },\n            atanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'atanh');\n                else if (Settings.PARSE2NUMBER) {\n                    retval = evaluate(_.parse(format('(1/2)*'+Settings.LOG+'((1+({0}))/(1-({0})))', symbol.toString())));\n                }\n                else\n                    retval = _.symfunction('atanh', arguments);\n                return retval;\n            },\n            asech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asech');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\n                else\n                    retval = _.symfunction('asech', arguments);\n                return retval;\n            },\n            acsch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acsch');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\n                else\n                    retval = _.symfunction('acsch', arguments);\n                return retval;\n            },\n            acoth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acoth');\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(1))\n                        retval = Symbol.infinity();\n                    else\n                        retval = evaluate(\n                                _.divide(\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\n                                        new Symbol(2)));\n                }\n                else\n                    retval = _.symfunction('acoth', arguments);\n                return retval;\n            }\n        };\n        //list of supported units\n        this.units = {};\n        //list all the supported operators\n        var operators = {\n            '\\\\': {\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            },\n            '!!': {\n                precedence: 7,\n                operator: '!!',\n                action: 'dfactorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\n                }\n            },\n            '!': {\n                precedence: 7,\n                operator: '!',\n                action: 'factorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return factorial(e); //wrap it in a factorial function\n                }\n            },\n            '^': {\n                precedence: 6,\n                operator: '^',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '**': {\n                precedence: 6,\n                operator: '**',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '%': {\n                precedence: 4,\n                operator: '%',\n                action: 'percent',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                overloaded: true,\n                overloadAction: 'mod',\n\t\toverloadLeftAssoc: false,\n                operation: function (x) {\n                    return _.divide(x, new Symbol(100));\n                }\n            },\n            '*': {\n                precedence: 4,\n                operator: '*',\n                action: 'multiply',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '/': {\n                precedence: 4,\n                operator: '/',\n                action: 'divide',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '+': {\n                precedence: 3,\n                operator: '+',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            'plus': {\n                precedence: 3,\n                operator: 'plus',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            '-': {\n                precedence: 3,\n                operator: '-',\n                action: 'subtract',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x.negate();\n                }\n            },\n            '=': {\n                precedence: 2,\n                operator: '=',\n                action: 'equals',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '==': {\n                precedence: 1,\n                operator: '==',\n                action: 'eq',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<': {\n                precedence: 1,\n                operator: '<',\n                action: 'lt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<=': {\n                precedence: 1,\n                operator: '<=',\n                action: 'lte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '>': {\n                precedence: 1,\n                operator: '>',\n                action: 'gt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '=>': {\n                precedence: 1,\n                operator: '=>',\n                action: 'gte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ',': {\n                precedence: 0,\n                operator: ',',\n                action: 'comma',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ':': {\n                precedence: 0,\n                operator: ',',\n                action: 'assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false,\n                vectorFn: 'slice'\n            },\n            ':=': {\n                precedence: 0,\n                operator: ',',\n                action: 'function_assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            }\n        };\n        //brackets\n        var brackets = {\n            '(': {\n                type: 'round',\n                id: 1,\n                is_open: true,\n                is_close: false\n            },\n            ')': {\n                type: 'round',\n                id: 2,\n                is_open: false,\n                is_close: true\n            },\n            '[': {\n                type: 'square',\n                id: 3,\n                is_open: true,\n                is_close: false,\n                maps_to: 'vector'\n            },\n            ']': {\n                type: 'square',\n                id: 4,\n                is_open: false,\n                is_close: true\n            },\n            '{': {\n                type: 'curly',\n                id: 5,\n                is_open: true,\n                is_close: false,\n                maps_to: 'Set'\n            },\n            '}': {\n                type: 'curly',\n                id: 6,\n                is_open: false,\n                is_close: true\n            }\n        };\n        // Supported functions.\n        // Format: function_name: [mapped_function, number_of_parameters]\n        var functions = this.functions = {\n            'cos': [trig.cos, 1],\n            'sin': [trig.sin, 1],\n            'tan': [trig.tan, 1],\n            'sec': [trig.sec, 1],\n            'csc': [trig.csc, 1],\n            'cot': [trig.cot, 1],\n            'acos': [trig.acos, 1],\n            'asin': [trig.asin, 1],\n            'atan': [trig.atan, 1],\n            'arccos': [trig.acos, 1],\n            'arcsin': [trig.asin, 1],\n            'arctan': [trig.atan, 1],\n            'asec': [trig.asec, 1],\n            'acsc': [trig.acsc, 1],\n            'acot': [trig.acot, 1],\n            'atan2': [trig.atan2, 2],\n            'acoth': [trigh.acoth, 1],\n            'asech': [trigh.asech, 1],\n            'acsch': [trigh.acsch, 1],\n            'sinh': [trigh.sinh, 1],\n            'cosh': [trigh.cosh, 1],\n            'tanh': [trigh.tanh, 1],\n            'asinh': [trigh.asinh, 1],\n            'sech': [trigh.sech, 1],\n            'csch': [trigh.csch, 1],\n            'coth': [trigh.coth, 1],\n            'acosh': [trigh.acosh, 1],\n            'atanh': [trigh.atanh, 1],\n            'log10': [, 1],\n            'exp': [exp, 1],\n            'radians': [radians, 1],\n            'degrees': [degrees, 1],\n            'min': [min, -1],\n            'max': [max, -1],\n            'erf': [, 1],\n            'floor': [, 1],\n            'ceil': [, 1],\n            'trunc': [, 1],\n            'Si': [, 1],\n            'step': [, 1],\n            'rect': [, 1],\n            'sinc': [sinc, 1],\n            'tri': [, 1],\n            'sign': [sign, 1],\n            'Ci': [, 1],\n            'Ei': [, 1],\n            'Shi': [, 1],\n            'Chi': [, 1],\n            'Li': [, 1],\n            'fib': [, 1],\n            'fact': [factorial, 1],\n            'factorial': [factorial, 1],\n            'continued_fraction': [continued_fraction, [1, 2]],\n            'dfactorial': [, 1],\n            'gamma_incomplete': [, [1, 2]],\n            'round': [round, [1, 2]],\n            'scientific': [scientific, [1, 2]],\n            'mod': [mod, 2],\n            'pfactor': [pfactor, 1],\n            'vector': [vector, -1],\n            'matrix': [matrix, -1],\n            'Set': [set, -1],\n            'imatrix': [imatrix, -1],\n            'parens': [parens, -1],\n            'sqrt': [sqrt, 1],\n            'nthroot': [nthroot, 2],\n            'log': [log, [1, 2]],\n            'expand': [expand, 1],\n            'abs': [abs, 1],\n            'invert': [invert, 1],\n            'determinant': [determinant, 1],\n            'size': [size, 1],\n            'transpose': [transpose, 1],\n            'dot': [dot, 2],\n            'cross': [cross, 2],\n            'vecget': [vecget, 2],\n            'vecset': [vecset, 3],\n            'vectrim': [vectrim, [1, 2]],\n            'matget': [matget, 3],\n            'matset': [matset, 4],\n            'matgetrow': [matgetrow, 2],\n            'matsetrow': [matsetrow, 3],\n            'matgetcol': [matgetcol, 2],\n            'matsetcol': [matsetcol, 3],\n            'IF': [IF, 3],\n            'is_in': [is_in, 2],\n            //imaginary support\n            'realpart': [realpart, 1],\n            'imagpart': [imagpart, 1],\n            'conjugate': [conjugate, 1],\n            'arg': [arg, 1],\n            'polarform': [polarform, 1],\n            'rectform': [rectform, 1],\n            'sort': [sort, [1, 2]],\n            'integer_part': [, 1],\n            'union': [union, 2],\n            'contains': [contains, 2],\n            'intersection': [intersection, 2],\n            'difference': [difference, 2],\n            'intersects': [intersects, 2],\n            'is_subset': [is_subset, 2],\n            //system support\n            'print': [print, -1]\n        };\n\n        //error handler\n        this.error = err;\n        //this function is used to comb through the function modules and find a function given its name\n        var findFunction = function (fname) {\n            var fmodules = Settings.FUNCTION_MODULES,\n                    l = fmodules.length;\n            for (var i = 0; i < l; i++) {\n                var fmodule = fmodules[i];\n                if (fname in fmodule)\n                    return fmodule[fname];\n            }\n            err('The function ' + fname + ' is undefined!');\n        };\n\n        /**\n         * This method gives the ability to override operators with new methods.\n         * @param {String} which\n         * @param {Function} with_what\n         */\n        this.override = function (which, with_what) {\n            if (!bin[which])\n                bin[which] = [];\n            bin[which].push(this[which]);\n            this[which] = with_what;\n        };\n\n        /**\n         * Restores a previously overridden operator\n         * @param {String} what\n         */\n        this.restore = function (what) {\n            if (this[what])\n                this[what] = bin[what].pop();\n        };\n\n        /**\n         * This method is supposed to behave similarly to the override method but it does not override\n         * the existing function rather it only extends it\n         * @param {String} what\n         * @param {Function} with_what\n         * @param {boolean} force_call\n         */\n        this.extend = function (what, with_what, force_call) {\n            var _ = this,\n                    extended = this[what];\n            if (typeof extended === 'function' && typeof with_what === 'function') {\n                var f = this[what];\n                this[what] = function (a, b) {\n                    if (isSymbol(a) && isSymbol(b) && !force_call)\n                        return f.call(_, a, b);\n                    else\n                        return with_what.call(_, a, b, f);\n                };\n            }\n        };\n\n        /**\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with \n         * a few extras. The most important thing is that that it gives a fname and \n         * an args property to the symbols in addition to changing its group to FN\n         * @param {String} fn_name\n         * @param {Array} params\n         * @returns {Symbol}\n         */\n        this.symfunction = function (fn_name, params) {\n            //call the proper function and return the result;\n            var f = new Symbol(fn_name);\n            f.group = FN;\n            if (typeof params === 'object')\n                params = [].slice.call(params);//ensure an array\n            f.args = params;\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\n            f.updateHash();\n            return f;\n        };\n\n        /**\n         * An internal function call for the Parser. This will either trigger a real \n         * function call if it can do so or just return a symbolic representation of the \n         * function using symfunction.\n         * @param {String} fn_name\n         * @param {Array} args\n         * @param {int} allowed_args\n         * @returns {Symbol}\n         */\n        this.callfunction = function (fn_name, args, allowed_args) {\n            var fn_settings = functions[fn_name];\n\n            if (!fn_settings)\n                err('Nerdamer currently does not support the function ' + fn_name);\n\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\n                    fn = fn_settings[0], //get the mapped function\n                    retval;\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\n            //an array so make sure to wrap the argument in an array.\n            if (!(args instanceof Array))\n                args = args !== undefined ? [args] : [];\n\n            if (num_allowed_args !== -1) {\n                var is_array = isArray(num_allowed_args),\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n                        num_args = args.length;\n\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n\n                if (num_args < min_args)\n                    err(format(error_msg, 'minimum', min_args, num_args));\n                if (num_args > max_args)\n                    err(format(error_msg, 'maximum', max_args, num_args));\n            }\n\n            /*\n             * The following are very important to the how nerdamer constructs functions!\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\n             *     they are expecting a symbolic output.\n             */\n            //check if arguments are all numers\n            var numericArgs = allNumbers(args);\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n            if (Settings.USE_BIG && numericArgs) {\n                retval = Big[fn_name].apply(undefined, args);\n            }\n            else {\n                if (!fn) {\n                    //Remember assumption 1. No function defined so it MUST be numeric in nature\n                    fn = findFunction(fn_name);\n                    if (Settings.PARSE2NUMBER && numericArgs)\n                        retval = bigConvert(fn.apply(fn, args));\n                    else\n                        retval = _.symfunction(fn_name, args);\n                }\n                else {\n                    //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n                    retval = fn.apply(fn_settings[2], args);\n                }\n            }\n\n            return retval;\n        };\n        /**\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when \n         * substituting spaces for multiplication\n         */\n        this.operator_filter_regex = (function () {\n            //we only want the operators which are singular since those are the ones\n            //that nerdamer uses anyway\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\n                if (x.length === 1)\n                    return x;\n            }).join('\\\\');\n            //create a regex which captures all spaces between characters except those\n            //have an operator on one end\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\n        })();\n\n        /**\n         * Replaces nerdamer.setOperator\n         * @param {object} operator\n         * @param {boolean} shift         \n         */\n        this.setOperator = function (operator, action, shift) {\n            var name = operator.operator; //take the name to be the symbol\n            operators[name] = operator;\n            if(action)\n                this[operator.action] = action;\n            //make the parser aware of the operator\n            _[name] = operator.operation;\n            //make the action available to the parser if infix\n            if (!operator.action &&!(operator.prefix || operator.postif)) {\n                operator.action = name;\n            }\n            //if this operator is exclusive then all successive operators should be shifted\n            if (shift === 'over' || shift === 'under') {\n                var precedence = operator.precedence;\n\n                for (var x in operators) {\n                    var o = operators[x];\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\n                    if (condition)\n                        o.precedence++;\n                }\n                ;\n            }\n        };\n        \n        /**\n         * Gets an opererator by its symbol\n         * @param {String} operator\n         * @returns {Object}\n         */\n        this.getOperator = function(operator) {\n            return operators[operator];\n        };\n        \n        this.aliasOperator = function(o, n) {\n            var t = {};\n            var operator = operators[o];\n            //copy everything over to the new operator\n            for(var x in operator) {\n                t[x] = operator[x];\n            }\n            //update the symbol\n            t.operator = n;\n            \n            this.setOperator(t);\n        };\n        \n        /**\n         * Returns the list of operators. Caution! Can break parser!\n         * @returns {object}\n         */\n        this.getOperators = function () {\n            //will replace this with some cloning action in the future\n            return operators;\n        };\n\n        this.getBrackets = function () {\n            return brackets;\n        };\n        /*\n         * Preforms preprocessing on the string. Useful for making early modification before \n         * sending to the parser\n         * @param {String} e\n         */\n        var prepare_expression = function (e) {\n            /*\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for \n             * a side-by-side close and open parenthesis\n             */\n            e = String(e);\n            //apply preprocessors\n            for (var i = 0; i < preprocessors.actions.length; i++)\n                e = preprocessors.actions[i].call(this, e);\n\n            /* //NO LONGER NEEDED SINCE IMPLIED MULTIPLICATION IS NOW HANDLED LATER IN TOKENIZER\n            var match;\n            //add support for spaces between variables\n            while (true) {\n                match = _.operator_filter_regex.exec(e);\n                if (!match)\n                    break;\n                try {\n                    var a = match[1],\n                            b = match[2];\n                    validateName(a);\n                    validateName(b);\n                    e = e.replace(match[0], a + '*' + b);\n                }\n                catch (e) {\n                    break;\n                }\n            }\n            */\n            \n            //e = e.split(' ').join('');//strip empty spaces\n            //replace multiple spaces with one space\n            e = e.replace(/\\s+/g, ' ');\n            \n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\n            if(/e/gi.test(e)) {\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) { \n                    return scientificToDecimal(x);\n                });\n            }\n            //replace scientific numbers\n            \n            //allow omission of multiplication after coefficients\n            e = e.replace(/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi, function () {\n                var str = arguments[4],\n                        group1 = arguments[1],\n                        group2 = arguments[2],\n                        start = arguments[3],\n                        first = str.charAt(start),\n                        before = '',\n                        d = '*';\n                if (!first.match(/[\\+\\-\\/\\*]/))\n                    before = str.charAt(start - 1);\n                if (before.match(/[a-z]/i))\n                    d = '';\n                return group1 + d + group2;\n            })\n            .replace(/([a-z0-9_]+)/gi, function (match, a) {\n                if (Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\n                    if (!isNaN(a))\n                        return a;\n                    return a.split('').join('*');\n                }\n                return a;\n            })\n            //allow omission of multiplication sign between brackets\n            .replace(/\\)\\(/g, ')*(') || '0';\n            //replace x(x+a) with x*(x+a)\n            while (true) {\n                var e_org = e; //store the original\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\n                    var g1 = a || c,\n                            g2 = b || d;\n                    if (g1 in functions) //create a passthrough for functions\n                        return g1 + g2;\n                    return g1 + '*' + g2;\n                });\n                //if the original equals the replace we're done\n                if (e_org === e)\n                    break;\n            }\n            return e;\n        };\n        //delay setting of constants until Settings is ready\n        this.initConstants = function () {\n            this.CONSTANTS = {\n                E: new Symbol(Settings.E),\n                PI: new Symbol(Settings.PI)\n            };\n        };\n        /*\n         * Debugging method used to better visualize vector and arrays\n         * @param {object} o\n         * @returns {String}\n         */\n        this.pretty_print = function (o) {\n            if (Array.isArray(o)) {\n                var s = o.map(x => _.pretty_print(x)).join(', ');\n                if (o.type === 'vector')\n                    return 'vector<' + s + '>';\n                return '(' + s + ')';\n            }\n            return o.toString();\n        };\n        this.peekers = {\n            pre_operator: [],\n            post_operator: [],\n            pre_function: [],\n            post_function: []\n        };\n        \n        this.callPeekers = function(name) {\n            var peekers = this.peekers[name];\n            //remove the first items and stringify\n            var args = arguments2Array(arguments).slice(1).map(stringify);\n            //call each one of the peekers\n            for(var i=0; i<peekers.length; i++) {\n                peekers[i].apply(null, args);\n            }\n        };\n        /*\n         * Tokenizes the string\n         * @param {String} e\n         * @returns {Token[]}\n         */\n        this.tokenize = function (e) {\n            //cast to String\n            e = String(e);\n            //remove multiple white spaces and spaces at beginning and end of string\n            e = e.trim().replace(/\\s+/g, ' ');\n            //remove spaces before and after brackets\n            for (var x in brackets) {\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\n                e = e.replace(regex, x);\n            }\n\n            var col = 0; //the column position\n            var L = e.length; //expression length\n            var lpos = 0; //marks beginning of next token\n            var tokens = []; //the tokens container\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\n            var depth = 0;\n            var open_brackets = [];\n            var has_space = false; //marks if an open space character was found\n            var SPACE = ' ';\n            var EMPTY_STRING = '';\n            var COMMA = ',';\n            var MINUS = '-';\n            var MULT = '*';\n            //Possible source of bug. Review\n            /*\n             //gets the next space\n             var next_space = function(from) {\n             for(var i=from; i<L; i++) {\n             if(e.charAt(i) === ' ')\n             return i;\n             }\n             \n             return L; //assume the end of the string instead\n             };\n             */\n            /**\n             * Adds a scope to tokens\n             * @param {String} scope_type \n             * @param {int} column \n             * @returns {undefined}\n             */\n            var addScope = function (scope_type, column) {\n                var new_scope = []; //create a new scope\n                if (scope_type !== undefined) {\n                    new_scope.type = scope_type;\n                }\n                new_scope.column = column; //mark the column of the scope\n                scopes.push(new_scope); //add it to the list of scopes\n                target.push(new_scope); //add it to the tokens list since now it's a scope\n                target = new_scope; //point to it\n                depth++; //go down one in scope\n            };\n            /**\n             * Goes up in scope by one\n             * @returns {undefined}\n             */\n            var goUp = function () {\n                scopes.pop(); //remove the scope from the scopes stack\n                target = scopes[--depth]; //point the above scope\n            };\n            /**\n             * Extracts all the operators from the expression string starting at postion start_at\n             * @param {int} start_at\n             * @returns {String}\n             */\n            var get_operator_str = function (start_at) {\n                start_at = start_at !== undefined ? start_at : col;\n                //mark the end of the operator as the start since we're just going\n                //to be walking along the string\n                var end = start_at + 1;\n                //just keep moving along\n                while (e.charAt(end++) in operators) {\n                }\n                //remember that we started at one position ahead. The beginning operator is what triggered\n                //this function to be called in the first place. String.CharAt is zero based so we now\n                //have to correct two places. The initial increment + the extra++ at the end of end during\n                //the last iteration.\n                return e.substring(start_at, end - 1);\n            };\n            /**\n             * Breaks operator up in to several different operators as defined in operators\n             * @param {String} operator_str\n             * @returns {String[]}\n             */\n            var chunkify = function (operator_str) {\n                var start = col - operator_str.length; //start of operator\n                var _operators = [];\n                var operator = operator_str.charAt(0);\n                //grab the largest possible chunks but start at 2 since we already know\n                //that the first character is an operator\n\n                for (var i = 1, L = operator_str.length; i < L; i++) {\n                    var ch = operator_str.charAt(i);\n                    var o = operator + ch;\n                    //since the operator now is undefined then the last operator \n                    //was the largest possible combination.\n                    if (!(o in operators)) {\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                        operator = ch;\n                    }\n                    else\n                        operator = o;//now the operator is the larger chunk\n                }\n                //add the last operator\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                return _operators;\n            };\n\n            /**\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\n             * @param {int} at\n             * @param {String} token\n             * @returns {undefined}\n             */\n            var add_token = function (at, token) {\n                //grab the token if we're not supplied one\n                if (token === undefined)\n                    token = e.substring(lpos, at);\n                //only add it if it's not an empty string\n                if (token in _.units)\n                    target.push(new Token(token, Token.UNIT, lpos));\n                else if (token !== '')\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\n            };\n            /**\n             * Adds a function to the output\n             * @param {String} f\n             * @returns {undefined}\n             */\n            var add_function = function (f) {\n                target.push(new Token(f, Token.FUNCTION, lpos));\n            };\n            /**\n             * Tokens are found between operators so this marks the location of where the last token was found\n             * @param {int} position\n             * @returns {undefined}\n             */\n            var set_last_position = function (position) {\n                lpos = position + 1;\n            };\n            /**\n             * When a operator is found and added, especially a combo operator, then the column location\n             * has to be adjusted to the end of the operator\n             * @returns {undefined}\n             */\n            var adjust_column_position = function () {\n                lpos = lpos + operator_str.length - 2;\n                col = lpos - 1;\n            };\n            for (; col < L; col++) {\n                var ch = e.charAt(col);\n                if (ch in operators) {\n                    add_token(col);\n                    //is the last token numeric?\n                    var last_token_is_numeric = target[0] && isNumber(target[0]); \n                    //is this character multiplication?\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\n                    //if we're in a new scope then go up by one but if the space \n                    //is right befor an operator then it makes no sense to go up in scope\n                    //consider sin -x. The last position = current position at the minus sign\n                    //this means that we're going for sin(x) -x which is wrong\n                    //Ignore comma since comma is still part of the existing scope.\n                    if (has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\n                        has_space = false;\n                        goUp();\n                    }\n                    //mark the last position that a \n                    set_last_position(col + 1);\n                    var operator_str = get_operator_str(col);\n\n                    adjust_column_position();\n                    target.push.apply(target, chunkify(operator_str));\n                }\n                else if (ch in brackets) {\n                    var bracket = brackets[ch];\n\n                    if (bracket.is_open) {\n                        //mark the bracket\n                        open_brackets.push([bracket, lpos]);\n                        var f = e.substring(lpos, col);\n                        if (f in functions) {\n                            add_function(f);\n                        }\n                        else if (f !== '') {\n                            //assume multiplication\n                            //TODO: Add the multiplication to stack\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\n                        }\n                        //go down one in scope\n                        addScope(bracket.maps_to, col);\n                    }\n                    else if (bracket.is_close) {\n                        //get the matching bracket\n                        var pair = open_brackets.pop();\n                        //throw errors accordingly\n                        //missing open bracket\n                        if (!pair)\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\n                        //incorrect pair\n                        else if (pair[0].id !== bracket.id - 1)\n                            throw new ParityError('Parity error');\n\n                        add_token(col);\n                        goUp();\n                    }\n                    set_last_position(col);\n                }\n                else if (ch === SPACE) {\n                    var prev = e.substring(lpos, col); //look back\n                    var nxt = e.charAt(col+1); //look forward\n                    if (has_space) {\n\n                        if (prev in operators) {\n                            target.push(new Token(prev, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, prev);\n                            //we're at the closing space\n                            goUp(); //go up in scope if we're at a space\n                            \n                            //assume multiplication if it's not an operator except for minus\n                            var is_operator = nxt in operators;\n\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator)\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                        }\n                        has_space = false; //remove the space\n                    }\n                    else {\n                        //we're at the closing space\n                        //check if it's a function\n                        var f = e.substring(lpos, col);\n\n                        if (f in functions) {\n                            //there's no need to go up in scope if the next character is an operator\n                            has_space = true; //mark that a space was found\n                            add_function(f);\n                            addScope();\n                        }\n                        else if (f in operators) {\n                            target.push(new Token(f, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, f);\n                            //peek ahead to the next character\n                            var nxt = e.charAt(col+1);\n\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\n                            //is not an operator\n                            \n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                        }\n                        //Possible source of bug. Review\n                        /*\n                         //space can mean multiplication so add the symbol if the is encountered\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\n                         var next = e.charAt(col+1);\n                         var next_is_operator = next in operators;\n                         var ns = next_space(col+1);\n                         var next_word = e.substring(col+1, ns);\n                         //the next can either be a prefix operator or no operator\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\n                         target.push(new Token('*', Token.OPERATOR, col));\n                         }\n                         */\n                    }\n                    set_last_position(col); //mark this location    \n                }\n            }\n            //check that all brackets were closed\n            if (open_brackets.length) {\n                var b = open_brackets.pop();\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\n            }\n            //add the last token\n            add_token(col);\n\n            return tokens;\n        };\n        /*\n         * Puts token array in Reverse Polish Notation\n         * @param {Token[]} tokens\n         * @returns {Token[]}\n         */\n        this.toRPN = function (tokens) {\n            var fn = tokens.type;\n            var l = tokens.length, i;\n            var output = [];\n            var stack = [];\n            var prefixes = [];\n            var collapse = function (target, destination) {\n                while (target.length)\n                    destination.push(target.pop());\n            };\n            //mark all the prefixes and add them to the stack\n            for (i = 0; i < l; i++) {\n                var token = tokens[i];\n                if (token.type !== Token.OPERATOR)\n                    break;\n                if (!token.prefix)\n                    throw new OperatorError('Not a prefix operator');\n                token.is_prefix = true;\n                stack.push(token);\n            }\n            //begin with remaining tokens\n            for (; i < l; i++) {\n                var e = tokens[i];\n                if (e.type === Token.OPERATOR) {\n                    var operator = e;\n\t\t    \n\t\t    //create the option for the operator being overloaded\n                    if (operator.overloaded) {\n                        var next = tokens[i + 1];\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\n                        if (next && next.type === Token.VARIABLE_OR_LITERAL) {\n                            operator.postfix = false;\n                            //override the original function with the overload function\n                            operator.action = operator.overloadAction;\n\t\t\t    operator.leftAssoc = operator.overloadLeftAssoc;\n                        }\n                    }\n\t\t\t\n                    //if the stack is not empty\n                    while (stack.length) {\n                        var last = stack[stack.length - 1];\n                        //if (there is an operator at the top of the operator stack with greater precedence)\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\n                        if (!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\n                            break;\n                        output.push(stack.pop());\n                    }\n                    \n                    //change the behavior of the operator if it's a vector and we've been asked to do so\n                    if ((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\n                        operator.action = operator.vectorFn;\n\n\n                    //if the operator is a postfix operator then we're ready to go since it belongs\n                    //to the preceding token. However the output cannot be empty. It must have either\n                    //an operator or a variable/literal\n                    if (operator.postfix) {\n                        var previous = tokens[i - 1];\n                        if (!previous)\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\n                        else if (previous.type === Token.OPERATOR) {\n                            //a postfix can only be followed by a postfix\n                            if (!previous.postfix)\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\n                        }\n                    }\n                    else {\n                        //we must be at an infix so point the operator this\n                        do {\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\n                            var next = tokens[i + 1]; //take a look ahead\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\n                            if (next_is_operator) {\n                                //if it's not a prefix operator then it not in the right place\n                                if (!next.prefix) {\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\n                                }\n                                //mark it as a confirmed prefix\n                                next.is_prefix = true;\n                                //add it to the prefixes\n                                prefixes.push(next);\n                                i++;\n                            }\n                        }\n                        while (next_is_operator)\n                    }\n\n                    //if it's a prefix it should be on a special stack called prefixes\n                    //we do this to hold on to prefixes because of left associative operators.\n                    //they belong to the variable/literal but if placed on either the stack\n                    //or output there's no way of knowing this. I might be wrong so I welcome \n                    //any discussion about this.\n\n                    if (operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\n                        prefixes.push(operator);\n                    else\n                        stack.push(operator);\n                    //move the prefixes to the stack\n                    while (prefixes.length) {\n                        if (operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\n                            stack.push(prefixes.pop());\n                        else\n                            break;\n                    }\n                }\n                else if (e.type === Token.VARIABLE_OR_LITERAL) {\n                    //move prefixes to stack at beginning of scope\n                    if (output.length === 0)\n                        collapse(prefixes, stack);\n                    //done with token\n                    output.push(e);\n                    var last_on_stack = stack[stack.length - 1];\n                    //then move all the prefixes to the output\n                    if (!last_on_stack || !last_on_stack.leftAssoc)\n                        collapse(prefixes, output);\n                }\n                else if (e.type === Token.FUNCTION) {\n                    stack.push(e);\n                }\n                else if (e.type === Token.UNIT) {\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\n                    output.push(e);\n                }\n                //if it's an additonal scope then put that into RPN form\n                if (Array.isArray(e)) {\n                    output.push(this.toRPN(e));\n                    if (e.type)\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\n\n                }\n            }\n            //collapse the remainder of the stack and prefixes to output\n            collapse(stack, output);\n            collapse(prefixes, output);\n\n            return output;\n        };\n        /*\n         * Parses the tokens  \n         * @param {Tokens[]} rpn\n         * @param {object} substitutions\n         * @returns {Symbol}\n         */\n        this.parseRPN = function (rpn, substitutions) {\n            try {\n                //default substitutions\n                substitutions = substitutions || {};\n                //prepare the substitutions.\n                //we first parse them out as-is\n                for (var x in substitutions)\n                    substitutions[x] = _.parse(substitutions[x], {});\n                //Although technically constants,\n                //pi and e are only available when evaluating the expression so add to the subs.\n                //Doing this avoids rounding errors \n                //link e and pi\n                if (Settings.PARSE2NUMBER) {\n                    //use the value provided if the individual for some strange reason prefers this.\n                    //one reason could be to sub e but not pi or vice versa\n                    if (!('e' in substitutions))\n                        substitutions.e = new Symbol(Settings.E);\n                    if ((!('pi' in substitutions)))\n                        substitutions.pi = new Symbol(Settings.PI);\n                }\n\n                var Q = [];\n                for (var i = 0, l = rpn.length; i < l; i++) {\n                    var e = rpn[i]; \n\n                    //Arrays indicate a new scope so parse that out\n                    if (Array.isArray(e)) {\n                        e = this.parseRPN(e, substitutions);\n                    }\n\n                    if(e) {\n                        if (e.type === Token.OPERATOR) {\n                            if (e.is_prefix || e.postfix)\n                                //resolve the operation assocated with the prefix\n                                Q.push(e.operation(Q.pop()));\n                            else {\n                                var b = Q.pop();\n                                var a = Q.pop();\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\n                                if (typeof a === 'undefined')\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\n\n                                var is_comma = e.action === 'comma';\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\n                                if(a instanceof Set && !is_comma)\n                                    a = Vector.fromSet(a);\n\n                                if(b instanceof Set && !is_comma)\n                                    b = Vector.fromSet(b);\n\n                                //call all the pre-operators \n                                this.callPeekers('pre_operator', a, b, e);\n                                \n                                var ans = _[e.action](a, b);\n                                \n                                //call all the pre-operators\n                                this.callPeekers('post_operator', ans, a, b, e);\n                                \n                                Q.push(ans);\n                            }\n                        }\n                        else if (e.type === Token.FUNCTION) {\n                            var args = Q.pop();\n                            var parent = args.parent; //make a note of the parent\n                            if (!(args instanceof Collection))\n                                args = Collection.create(args);\n                            //the return value may be a vector. If it is then we check\n                            //Q to see if there's another vector on the stack. If it is then\n                            //we check if has elements. If it does then we know that we're dealing\n                            //with an \"getter\" object and return the requested values\n\n                            //call the function. This is the _.callfunction method in nerdamer\n                            //call the function. This is the _.callfunction method in nerdamer\n                            var fn_name = e.value;\n                            var fn_args = args.getItems();\n                            \n                            //call the pre-function peekers\n                            this.callPeekers('pre_function', fn_name, fn_args);\n                            \n                            var ret = _.callfunction(fn_name, fn_args);                             \n                            \n                            //call the post-function peekers\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\n                            \n                            var last = Q[Q.length - 1];\n                            var next = rpn[i + 1];\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\n\n                            if (!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\n                                //remove the item from the queue\n                                var item = Q.pop();\n\n                                var getter = ret.elements[0];\n                                //check if it's symbolic. If so put it back and add the item to the stack\n                                if (!getter.isConstant()) {\n                                    item.getter = getter;\n                                    Q.push(item);\n                                    Q.push(ret);\n                                }\n                                else if (getter instanceof Slice) {\n                                    //if it's a Slice return the slice\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\n                                }\n                                else {\n                                    var index = Number(getter);\n                                    var il = item.elements.length;\n                                    //support for negative indices\n                                    if (index < 0)\n                                        index = il + index;\n                                    //it it's still out of bounds\n                                    if (index < 0 || index >= il) //index should no longer be negative since it's been reset above\n                                        //range error\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\n                                    \n                                    var element = item.elements[index];\n                                    //cyclic but we need to mark this for future reference\n                                    item.getter = index;\n                                    element.parent = item; \n                                    \n                                    Q.push(element);\n                                }\n                            }\n                            else {\n                                //extend the parent reference\n                                if(parent)\n                                    ret.parent = parent;\n                                Q.push(ret);\n                            }\n\n                        }\n                        else {\n                            var subbed;\n                            var v = e.value;\n\n                            if (v in Settings.ALIASES)\n                                e = _.parse(Settings.ALIASES[e]);\n                            //wrap it in a symbol if need be\n                            else if (e.type === Token.VARIABLE_OR_LITERAL)\n                                e = new Symbol(v);\n                            else if (e.type === Token.UNIT) {\n                                e = new Symbol(v);\n                                e.isUnit = true;\n                            }\n\n                            //make substitutions\n                            //Always constants first. This avoids the being overridden\n                            if (v in _.CONSTANTS) {\n                                subbed = e;\n                                e = new Symbol(_.CONSTANTS[v]);\n                            }\n                            //next substitutions. This allows declared variable to be overridden\n                            //check if the values match to avoid erasing the multiplier. \n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\n                            else if (v in substitutions && v !== substitutions[v].value) {\n                                subbed = e;\n                                e = substitutions[v].clone();\n                            }\n                            //next declare variables\n                            else if (v in VARS) {\n                                subbed = e;\n                                e = VARS[v].clone();\n                            }\n                            //make notation of what it was before\n                            if (subbed)\n                                e.subbed = subbed;\n\n                            Q.push(e);\n                        }\n                    }\n                }\n\n                return Q[0];\n            }\n            catch(error) {\n                throw new ParseError(error.message+': '+e.column);\n            }\n        };\n        /**\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes \n         * it right away. The operator functions are called when their respective operators are reached. For instance\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each \n         * character of the string and placing the operators on the stack and values on the output. When an operator\n         * having a lower order than the last is reached then the stack is processed from the last operator on the \n         * stack.\n         * @param {String} token\n         */\n\n        function Node(token) {\n            this.type = token.type;\n            this.value = token.value;\n            //the incoming token may already be a Node type\n            this.left = token.left;\n            this.right = token.right;\n        }\n\n        Node.prototype.toString = function () {\n            var left = this.left ? this.left.toString() + '---' : '';\n            var right = this.right ? '---' + this.right.toString() : '';\n            return left + '(' + this.value + ')' + right;\n        };\n\n        Node.prototype.toHTML = function (depth, indent) {\n            depth = depth || 0;\n            indent = typeof indent === 'undefined' ? 4 : indent;\n            var tab = function (n) {\n                return ' '.repeat(indent * n);\n            };\n            var html = '';\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\n            if (left || right) {\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\n            }\n            html += '';\n            return html;\n        };\n\n        this.tree = function (tokens) {\n            var Q = [];\n            for (var i = 0; i < tokens.length; i++) {\n                var e = tokens[i];\n                //Arrays indicate a new scope so parse that out\n                if (Array.isArray(e)) {\n                    e = this.tree(e);\n                    //if it's a comma then it's just arguments\n                    Q.push(e);\n                    continue;\n                }\n                if (e.type === Token.OPERATOR) {\n                    if (e.is_prefix || e.postfix) {\n                        //prefixes go to the left, postfix to the right\n                        var location = e.is_prefix ? 'left' : 'right';\n                        var last = Q.pop();\n                        e = new Node(e);\n                        e[location] = last;\n                        Q.push(e);\n                    }\n                    else {\n                        e = new Node(e);\n                        e.right = Q.pop();\n                        e.left = Q.pop();\n                        Q.push(e);\n                    }\n                }\n                else if (e.type === Token.FUNCTION) {\n                    e = new Node(e);\n                    var args = Q.pop();\n                    e.right = args;\n                    if (e.value === 'object') {\n                        //check if Q has a value\n                        var last = Q[Q.length - 1];\n                        if (last) {\n                            while (last.right) {\n                                last = last.right;\n                            }\n                            last.right = e;\n                            continue;\n                        }\n                    }\n\n                    Q.push(e);\n                }\n                else {\n                    Q.push(new Node(e));\n                }\n            }\n\n            return Q[0];\n        };\n        this.parse = function (e, substitutions) {\n            e = prepare_expression(e);\n            substitutions = substitutions || {};\n            //three passes but easier to debug\n            var tokens = this.tokenize(e);\n            var rpn = this.toRPN(tokens);\n            return this.parseRPN(rpn, substitutions);\n        };\n        /**\n         * TODO: Switch to Parser.tokenize for this method\n         * Reads a string into an array of Symbols and operators\n         * @param {String} expression_string\n         * @returns {Array}\n         */\n        this.toObject = function (expression_string) {\n            var objectify = function (tokens) {\n                var output = [];\n                for (var i = 0, l = tokens.length; i < l; i++) {\n                    var token = tokens[i];\n                    var v = token.value;\n                    if (token.type === Token.VARIABLE_OR_LITERAL) {\n                        output.push(new Symbol(v));\n                    }\n                    else if (token.type === Token.FUNCTION) {\n                        //jump ahead since the next object are the arguments\n                        i++;\n                        //create a symbolic function and stick it on output\n                        var f = _.symfunction(v, objectify(tokens[i]));\n                        f.isConversion = true;\n                        output.push(f);\n                    }\n                    else if (token.type === Token.OPERATOR) {\n                        output.push(v);\n                    }\n                    else {\n                        output.push(objectify(token));\n                    }\n                }\n\n                return output;\n            };\n            return objectify(_.tokenize(expression_string));\n        };\n        //helper method for toTeX\n        var chunkAtCommas = function (arr) {\n            var j, k = 0, chunks = [[]];\n            for (var j = 0, l = arr.length; j < l; j++) {\n                if (arr[j] === ',') {\n                    k++;\n                    chunks[k] = [];\n                }\n                else {\n                    chunks[k].push(arr[j]);\n                }\n            }\n            return chunks;\n        };\n        //helper method for toTeX\n        var rem_brackets = function (str) {\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n                if (a)\n                    return a;\n                return str;\n            });\n        };\n        /*\n         * Convert expression or object to LaTeX\n         * @param {String} expression_or_obj\n         * @param {object} opt\n         * @returns {String}\n         */\n        this.toTeX = function (expression_or_obj, opt) {\n            opt = opt || {};\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n                    TeX = [],\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n\n            if (isArray(obj)) {\n                var nobj = [], a, b;\n                //first handle ^\n                for (var i = 0; i < obj.length; i++) {\n                    a = obj[i];\n\n                    if (obj[i + 1] === '^') {\n                        b = obj[i + 2];\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\n                        i += 2;\n                    }\n                    else\n                        nobj.push(a);\n                }\n                obj = nobj;\n            }\n\n            for (var i = 0, l = obj.length; i < l; i++) {\n                var e = obj[i];\n                //convert * to cdot\n                if (e === '*') {\n                    e = cdot;\n                }\n\n                if (isSymbol(e)) {\n                    if (e.group === FN) {\n                        var fname = e.fname, f;\n\n                        if (fname === SQRT)\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\n                        else if (fname === ABS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\n                        else if (fname === PARENTHESIS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        else if (fname === Settings.LOG10) {\n                            f = '\\\\'+Settings.LOG10_LATEX+'\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n                        }\n                        else if (fname === 'integrate') {\n                            /* Retrive [Expression, x] */\n                            var chunks = chunkAtCommas(e.args);\n                            /* Build TeX */\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[1]);\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\n                        }\n                        else if (fname === 'defint') {\n                            var chunks = chunkAtCommas(e.args),\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[3]),\n                                    lb = this.toTeX(chunks[1]),\n                                    ub = this.toTeX(chunks[2]);\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\n\n                        }\n                        else if (fname === 'diff') {\n                            var chunks = chunkAtCommas(e.args);\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n                            if (chunks.length === 1) {\n                                var vars = [];\n                                for (j = 0; j < chunks[0].length; j++) {\n                                    if (chunks[0][j].group === 3) {\n                                        vars.push(chunks[0][j].value);\n                                    }\n                                }\n                                vars.sort();\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\n                            }\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\n                            else if (chunks.length === 2) {\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\n                            }\n                            /* If we have more than 2 arguments, we assume we've got everything */\n                            else {\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\n                            }\n\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\n\n                        }\n                        else if (fname === 'sum' || fname === 'product') {\n                            // Split e.args into 4 parts based on locations of , symbols.\n                            var argSplit = [[], [], [], []], j = 0, i;\n                            for (i = 0; i < e.args.length; i++) {\n                                if (e.args[i] === ',') {\n                                    j++;\n                                    continue;\n                                }\n                                argSplit[j].push(e.args[i]);\n                            }\n                            // Then build TeX string.\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\n                        }\n                        else if (fname === 'limit') {\n                            var args = chunkAtCommas(e.args).map(function (x) {\n                                if (Array.isArray(x))\n                                    return _.toTeX(x.join(''));\n                                return _.toTeX(String(x));\n                            });\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\n                        }\n                        else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL)\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\n                        else {\n                            f = LaTeX.latex(e);\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        }\n\n                        TeX.push(f);\n                    }\n                    else\n                        TeX.push(LaTeX.latex(e));\n                }\n                else if (isArray(e)) {\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\n                }\n                else {\n                    if (e === '/')\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\n                    else\n                        TeX.push(e);\n                }\n            }\n\n            return TeX.join(' ');\n        };\n\n//Parser.functions ==============================================================\n        /* Although parens is not a \"real\" function it is important in some cases when the \n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\n         * as the parser will get rid of it at the first opportunity\n         */\n        function parens(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                return symbol;\n            }\n            return _.symfunction('parens', [symbol]);\n        }\n\n        function abs(symbol) {\n            if (symbol.multiplier.lessThan(0))\n                symbol.multiplier.negate();\n            if (symbol.isImaginary()) {\n                var re = symbol.realpart();\n                var im = symbol.imagpart();\n                if (re.isConstant() && im.isConstant())\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\n            }\n            else if (isNumericSymbol(symbol) || even(symbol.power)) {\n                return symbol;\n            }\n            if (symbol.isComposite()) {\n                var ms = [];\n                symbol.each(function (x) {\n                    ms.push(x.multiplier);\n                });\n                var gcd = Math2.QGCD.apply(null, ms);\n                if (gcd.lessThan(0)) {\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\n                    symbol.distributeMultiplier();\n                }\n            }\n            return _.symfunction(ABS, [symbol]);\n        }\n        /**\n         * The factorial function\n         * @param {Symbol} symbol\n         * @return {Symbol}\n         */\n        function factorial(symbol) {\n            var retval;\n            if (isVector(symbol)) {\n                var V = new Vector();\n                symbol.each(function (x, i) {\n                    //i start at one.\n                    V.set(i - 1, factorial(x));\n                });\n                return V;\n            }\n            if (isMatrix(symbol)) {\n                var M = new Matrix();\n                symbol.each(function (x, i, j) {\n                    //i start at one.\n                    M.set(i, j, factorial(x));\n                });\n                return M;\n            }\n            if (Settings.PARSE2NUMBER && symbol.isConstant()) {\n                if (isInt(symbol)) {\n                    retval = Math2.bigfactorial(symbol);\n                }\n                else {\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\n                }\n\n                retval = bigConvert(retval);\n                return retval;\n            }\n            else if (symbol.isConstant()) {\n                var den = symbol.getDenom();\n                if (den.equals(2)) {\n                    var num = symbol.getNum();\n                    var a, b, c, n;\n\n                    if (!symbol.multiplier.isNegative()) {\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                    }\n                    else {\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\n                    }\n                    c = a.divide(b);\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\n                }\n            }\n            return _.symfunction(FACTORIAL, [symbol]);\n        }\n        ;\n        /**\n         * Returns the continued fraction of a number\n         * @param {Symbol} symbol\n         * @param {Symbol} n\n         * @returns {Symbol}\n         */\n        function continued_fraction(symbol, n) {\n            var _symbol = evaluate(symbol);\n            if (_symbol.isConstant()) {\n                var cf = Math2.continuedFraction(_symbol, n);\n                //convert the fractions array to a new Vector\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\n                    return new Symbol(x);\n                }));\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\n            }\n            return _.symfunction('continued_fraction', arguments);\n        }\n        ;\n        /**\n         * The mod function\n         * @param {Symbol} symbol1\n         * @param {Symbol} symbol2\n         * @returns {Symbol}\n         */\n        function mod(symbol1, symbol2) {\n            if (symbol1.isConstant() && symbol2.isConstant()) {\n                var retval = new Symbol(1);\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\n                return retval;\n            }\n            //try to see if division has remainder of zero\n            var r = _.divide(symbol1.clone(), symbol2.clone());\n            if (isInt(r))\n                return new Symbol(0);\n            return _.symfunction('mod', [symbol1, symbol2]);\n        }\n        /**\n         * A branghing function\n         * @param {Boolean} condition\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        function IF(condition, a, b) {\n            if (typeof condition !== 'boolean')\n                if (isNumericSymbol(condition))\n                    condition = !!Number(condition);\n            if (condition)\n                return a;\n            return b;\n        }\n        /**\n         * \n         * @param {Matrix|Vector|Set|Collection} obj\n         * @param {Symbol} item\n         * @returns {Boolean}\n         */\n        function is_in(obj, item) {\n            if(isMatrix(obj)) {\n                for(var i=0, l=obj.rows(); i<l; i++) {\n                    for(var j=0, l2=obj.cols(); j<l2; j++) {\n                        var element = obj.elements[i][j];\n                        if(element.equals(item))\n                            return new Symbol(1);\n                    }\n                }\n            }\n            else if(obj.elements) {\n                for(var i=0, l=obj.elements.length; i<l; i++) {\n                    if(obj.elements[i].equals(item))\n                        return new Symbol(1);\n                }\n            }\n            \n            return new Symbol(0);\n        }\n        \n        /**\n         * A symbolic extension for sinc\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sinc(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant()) {\n                    return new Symbol(Math2.sinc(symbol));\n                }\n                return _.parse(format('sin({0})/({0})', symbol));\n            }\n            return _.symfunction('sinc', [symbol]);\n        }\n\n        /**\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\n         * Thanks @ Happypig375\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function exp(symbol) {\n            return _.parse(format('e^({0})', symbol));\n        }\n        \n        /**\n         * Converts value degrees to radians\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function radians(symbol) {\n            return _.parse(format('({0})*pi/180', symbol));\n        }\n        \n        /**\n         * Converts value from radians to degrees\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function degrees(symbol) {\n            return _.parse(format('({0})*180/pi', symbol));\n        }\n        \n        function nroots(symbol) {\n            var a, b;\n            if(symbol.group === FN && symbol.fname === '') {\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n                b = _.parse(symbol.power);\n            }\n            else if(symbol.group === P) {\n                a = _.parse(symbol.value);\n                b = _.parse(symbol.power);\n            }\n            \n            if(a && b && a.group === N && b.group === N) {\n                var _roots = [];\n                var parts = Symbol.toPolarFormArray(symbol);\n                var r = _.parse(a).abs().toString();\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n                var x = arg(a).toString();\n                var n = b.multiplier.den.toString();\n                var p = b.multiplier.num.toString();\n                \n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\n                for(var i=0; i<n; i++) {\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n                }\n                return Vector.fromArray(_roots);\n            }\n            else if(symbol.isConstant(true)) {\n                var sign = symbol.sign();\n                var x = evaluate(symbol.abs());\n                var root = _.sqrt(x);\n                \n                var _roots = [root.clone(), root.negate()];\n                \n                if(sign < 0)\n                    _roots = _roots.map(function(x) {\n                        return _.multiply(x, Symbol.imaginary());\n                    });\n            }\n            else {\n                _roots = [_.parse(symbol)];\n            }\n            \n            return Vector.fromArray(_roots);\n        }\n        \n        /**\n         * The square root function\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sqrt(symbol) {\n            if (symbol.fname === '' && symbol.power.equals(1))\n                symbol = symbol.args[0];\n\n            var is_negative = symbol.multiplier.sign() < 0;\n\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant() && !is_negative) {\n                    return new Symbol(Math.sqrt(symbol.multiplier.toDecimal()));\n                }\n                else if (symbol.isImaginary()) {\n                    return complex.sqrt(symbol);\n                }\n            }\n\n            var img, retval,\n                    isConstant = symbol.isConstant();\n\n            if (symbol.group === CB && symbol.isLinear()) {\n                var m = sqrt(Symbol(symbol.multiplier));\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    m = _.multiply(m, sqrt(x));\n                }\n\n                retval = m;\n            }\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\n            else if (symbol.fname === SQRT) {\n                var s = symbol.args[0];\n                var ms = symbol.multiplier;\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\n                retval = s;\n                //grab the multiplier\n                if (!ms.equals(1))\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\n            }\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\n            //no need to keep sqrt(x^(1/3))\n            else if (!symbol.power.isInteger()) {\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\n                retval = symbol;\n            }\n            else {\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\n                //to sqrt(a)*sqrt(b)^1 for better simplification\n                //the sign of the power\n                var sign = symbol.power.sign();\n                //remove the sign\n                symbol.power = symbol.power.abs();\n\n                //if the symbols is imagary then we place in the imaginary part. We'll return it \n                //as a product\n                if (isConstant && symbol.multiplier.lessThan(0)) {\n                    img = Symbol.imaginary();\n                    symbol.multiplier = symbol.multiplier.abs();\n                }\n\n                var q = symbol.multiplier.toDecimal(),\n                        qa = Math.abs(q),\n                        t = Math.sqrt(qa);\n\n                var m;\n                //it's a perfect square so take the square\n                if (isInt(t)) {\n                    m = new Symbol(t);\n                }\n                else if (isInt(q)) {\n                    var factors = Math2.ifactor(q);\n                    var tw = 1;\n                    for (var x in factors) {\n                        var n = factors[x],\n                                nn = (n - (n % 2)); //get out the whole numbers\n                        if (nn) { //if there is a whole number ...\n                            var w = Math.pow(x, nn);\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\n                            q /= w; //reduce the number by the wholes\n                        }\n                    }\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\n                }\n                else {\n                    //reduce the numerator and denominator using prime factorization\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\n                    var r = [new Symbol(1), new Symbol(1)];\n                    var sq = [new Symbol(1), new Symbol(1)];\n                    for (var i = 0; i < 2; i++) {\n                        var n = c[i];\n                        //get the prime factors and loop through each. \n                        pfactor(n).each(function (x) {\n                            x = Symbol.unwrapPARENS(x);\n                            var b = x.clone().toLinear();\n                            var p = Number(x.power);\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\n                        });\n                    }\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\n                }\n\n\n                //strip the multiplier since we already took the sqrt\n                symbol = symbol.toUnitMultiplier(true);\n                //if the symbol is one just return one and not the sqrt function\n                if (symbol.isOne()) {\n                    retval = symbol;\n                }\n                else if (even(symbol.power.toString())) {\n                    //just raise it to the 1/2\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\n                }\n                else {\n                    retval = _.symfunction(SQRT, [symbol]);\n                }\n\n                //put back the sign that was removed earlier\n                if (sign < 0)\n                    retval.power.negate();\n\n                if (m)\n                    retval = _.multiply(m, retval);\n\n                if (img)\n                    retval = _.multiply(img, retval);\n            }\n\n            if (is_negative && Settings.PARSE2NUMBER)\n                return _.parse(retval);\n            return retval;\n        }\n        \n        function scientific(symbol, sigfigs) {\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to \n            //display this\n            symbol.scientific = sigfigs || 10;\n            return symbol;\n        }\n\n        /**\n         * \n         * @param {Symbol} num - the number being raised\n         * @param {Symbol} p - the exponent\n         * @param {type} prec - the precision wanted\n         * @param {bool} asbig - true if a bigDecimal is wanted\n         * @returns {Symbol}\n         */\n        //TODO: this method needs serious optimization\n        function nthroot(num, p, prec, asbig) {\n            if (typeof asbig === 'undefined')\n                asbig = true;\n            prec = prec || 25;\n            if (!isSymbol(p))\n                p = _.parse(p);\n            if (isInt(num) && p.isConstant()) {\n                var sign = num.sign(),\n                        x;\n                num = abs(num); //remove the sign\n                var idx = num + '-' + p;\n                if (idx in Settings.CACHE.roots) {\n                    x = new bigInt(Settings.CACHE.roots[idx]);\n                    if (!even(p))\n                        x = x.multiply(sign);\n                }\n                else {\n                    if (num < 18446744073709551616) //2^64\n                        x = Frac.create(Math.pow(num, 1 / p));\n                    else\n                        x = Math2.nthroot(num, p);\n                }\n                if (isInt(x) || Settings.PARSE2NUMBER) {\n                    if (asbig)\n                        return new Symbol(x);\n                    return new Symbol(x.toDecimal(prec));\n                }\n            }\n\n            if (Number(p) === 2)\n                return _.sqrt(num);\n\n            return _.symfunction('nthroot', arguments);\n        }\n\n        function pfactor(symbol) {\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n            //More Big Number issues >:(\n            if (symbol.greaterThan(9.999999999998891e+41))\n                return symbol;\n            //Fix issue #298\n            if (symbol.equals(Math.PI))\n                return new Symbol(Math.PI);\n            //evaluate the symbol to merge constants\n            symbol = evaluate(symbol.clone());\n\n\n            if (symbol.isConstant()) {\n                var retval = new Symbol(1);\n                var m = symbol.toString();\n                if (isInt(m)) {\n                    var factors = Math2.ifactor(m);\n                    for (var factor in factors) {\n                        var p = factors[factor];\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\n                    }\n                }\n                else {\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\n                }\n            }\n            else\n                retval = _.symfunction('pfactor', arguments);\n            return retval;\n        }\n\n        /**\n         * Get's the real part of a complex number. Return number if real\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function realpart(symbol) {\n            return symbol.realpart();\n        }\n\n        /**\n         * Get's the imaginary part of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function imagpart(symbol) {\n            return symbol.imagpart();\n        }\n\n        /**\n         * Computes the conjugate of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function conjugate(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant())\n                return new Symbol(Math.atan2(im, re));\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant()) {\n                if(im.equals(0) && re.equals(-1)) {\n                    return _.parse('pi');\n                }\n                else if(im.equals(1) && re.equals(0)) {\n                    return _.parse('pi/2');\n                }\n                else if(im.equals(1) && re.equals(1)) {\n                    return _.parse('pi/4');\n                }\n                return new Symbol(Math.atan2(im, re));\n            }\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the polarform of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function polarform(symbol) {\n            var p, r, e, theta;\n            p = Symbol.toPolarFormArray(symbol);\n            theta = p[1];\n            r = p[0];\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\n            return _.multiply(r, e);\n        }\n\n        /**\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function rectform(symbol) {\n            //TODO: e^((i*pi)/4)\n            var original = symbol.clone();\n            try {\n                var f, p, q, s, h, d, n;\n                f = decompose_fn(symbol, 'e', true);\n                p = _.divide(f.x.power, Symbol.imaginary());\n                q = evaluate(trig.tan(p));\n                s = _.pow(f.a, new Symbol(2));\n                d = q.getDenom(true);\n                n = q.getNum();\n                h = Symbol.hyp(n, d);\n                //check \n                if (h.equals(f.a)) {\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\n                }\n                else {\n                    return original;\n                }\n            }\n            catch (e) {\n                return original;\n            }\n        }\n\n        function symMinMax(f, args) {\n            args.map(function (x) {\n                x.numVal = evaluate(x).multiplier;\n            });\n            var l, a, b, a_val, b_val;\n            while (true) {\n                l = args.length;\n                if (l < 2)\n                    return args[0];\n                a = args.pop();\n                b = args[l - 2];\n                if (f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\n                    args.pop();\n                    args.push(a);\n                }\n            }\n        }\n\n        /**\n         * Returns maximum of a set of numbers\n         * @returns {Symbol}\n         */\n        function max() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.max.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('max', args);\n            return _.symfunction('max', args);\n        }\n\n        /**\n         * Returns minimum of a set of numbers\n         * @returns {Symbol}\n         */\n        function min() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.min.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('min', args);\n            return _.symfunction('min', args);\n        }\n\n        /**\n         * Returns the sign of a number\n         * @param {Symbol} x\n         * @returns {Symbol}\n         */\n        function sign(x) {\n            if (x.isConstant(true))\n                return new Symbol(Math.sign(evaluate(x)));\n            return _.symfunction('sign', arguments);\n        }\n\n        function sort(symbol, opt) {\n            opt = opt ? opt.toString() : 'asc';\n            var getval = function (e) {\n                if (e.group === N)\n                    return e.multiplier;\n                if (e.group === FN) {\n                    if (e.fname === '')\n                        return getval(e.args[0]);\n                    return e.fname;\n                }\n                if (e.group === S)\n                    return e.power;\n\n                return e.value;\n            };\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\n            return new Vector(symbols.sort(function (a, b) {\n                var aval = getval(a),\n                        bval = getval(b);\n                if (opt === 'desc')\n                    return bval - aval;\n                return aval - bval;\n            }));\n        }\n\n        /**\n         * The log function\n         * @param {Symbol} symbol\n         * @param {Symbol} base\n         * @returns {Symbol}\n         */\n        function log(symbol, base) {\n            if(symbol.equals(1)) {\n                return new Symbol(0);\n            }\n            \n            var retval;\n            if (symbol.fname === SQRT && symbol.multiplier.equals(1)) {\n                return _.divide(log(symbol.args[0]), new Symbol(2));\n            }\n\n            //log(0) is undefined so complain\n            if (symbol.equals(0)) {\n                throw new UndefinedError(Settings.LOG+'(0) is undefined!');\n            }\n\n            //deal with imaginary values\n            if (symbol.isImaginary()) {\n                return complex.evaluate(symbol, Settings.LOG);\n                /*\n                 var a = format('log(sqrt(({0})^2+({1})^2))-({2})*atan2(({1}),({0}))', symbol.imagpart(), symbol.realpart(), Settings.IMAGINARY),\n                 b = format('({0})*PI/2', Settings.IMAGINARY);\n                 \n                 return _.add(_.parse(a), _.parse(b));\n                 */\n            }\n\n            if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n                /*\n                 var log_sym = Math2.bigLog(symbol.multiplier);\n                 var log_base = Math2.bigLog(base.multiplier);\n                 retval = new Symbol(log_sym.divide());\n                 */\n                var log_sym = Math.log(symbol);\n                var log_base = Math.log(base);\n                retval = new Symbol(log_sym / log_base);\n            }\n            else if (symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n                symbol.power.negate();\n                //move the negative outside but keep the positive inside :)\n                retval = log(symbol).negate();\n            }\n            else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n                var p = symbol.power;\n                retval = isSymbol(p) ? p : new Symbol(p);\n            }\n            else if (symbol.group === FN && symbol.fname === 'exp') {\n                var s = symbol.args[0];\n                if (symbol.multiplier.equals(1))\n                    retval = _.multiply(s, new Symbol(symbol.power));\n                else\n                    retval = _.symfunction(Settings.LOG, [symbol]);\n            }\n            else if (Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\n                var img_part;\n                if (symbol.multiplier.lessThan(0)) {\n                    symbol.negate();\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\n                }\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\n                if (img_part)\n                    retval = _.add(retval, img_part);\n            }\n            else {\n                var s;\n                if (!symbol.power.equals(1)) {\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\n                    symbol.toLinear();\n                }\n                //log(a,a) = 1 since the base is allowed to be changed. \n                //This was pointed out by Happypig375 in issue #280\n                if (arguments.length > 1 && allSame(arguments))\n                    retval = new Symbol(1);\n                else\n                    retval = _.symfunction(Settings.LOG, arguments);\n\n                if (s)\n                    retval = _.multiply(s, retval);\n            }\n            return retval;\n        }\n\n        /**\n         * Round a number up to s decimal places\n         * @param {Number} x\n         * @param {int} s - the number of decimal places\n         * @returns {undefined}\n         */\n        function round(x, s) {\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n            if (x.isConstant() && sIsConstant) {\n                var v, e, exp, retval;\n                v = x;\n                //round the coefficient of then number but not the actual decimal value\n                //we know this because a negative number was passed\n                if (s && s.lessThan(0)) {\n                    s = abs(s);\n                    //convert the number to exponential form\n                    e = Number(x).toExponential().toString().split('e');\n                    //point v to the coefficient of then number\n                    v = e[0];\n                    //set the expontent\n                    exp = e[1];\n                }\n                //round the number to the requested precision\n                retval = new Symbol(nround(v, Number(s || 0)));\n                //if there's a exponent then put it back\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\n            }\n\n\n            return _.symfunction('round', arguments);\n        }\n\n        /**\n         * Gets the quadrant of the trig function\n         * @param {Frac} m\n         * @returns {Int}\n         */\n        function getQuadrant(m) {\n            var v = m % 2, quadrant;\n\n            if (v < 0)\n                v = 2 + v; //put it in terms of pi\n\n            if (v >= 0 && v <= 0.5)\n                quadrant = 1;\n            else if (v > 0.5 && v <= 1)\n                quadrant = 2;\n            else if (v > 1 && v <= 1.5)\n                quadrant = 3;\n            else\n                quadrant = 4;\n            return quadrant;\n        }\n\n        /*\n         * Serves as a bridge between numbers and bigNumbers\n         * @param {Frac|Number} n\n         * @returns {Symbol} \n         */\n        function bigConvert(n) {\n            if (!isFinite(n)) {\n                var sign = Math.sign(n);\n                var r = new Symbol(String(Math.abs(n)));\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\n                return r;\n            }\n            if (isSymbol(n))\n                return n;\n            if (typeof n === 'number') {\n                try {\n                    n = Frac.simple(n);\n                }\n                catch (e) {\n                    n = new Frac(n);\n                }\n            }\n\n            var symbol = new Symbol(0);\n            symbol.multiplier = n;\n            return symbol;\n        }\n        ;\n\n        function clean(symbol) {\n            // handle functions with numeric values\n            // handle denominator within denominator\n            // handle trig simplifications\n            var g = symbol.group, retval;\n            //Now let's get to work\n            if (g === CP) {\n                var num = symbol.getNum(),\n                        den = symbol.getDenom() || new Symbol(1),\n                        p = Number(symbol.power),\n                        factor = new Symbol(1);\n                if (Math.abs(p) === 1) {\n                    den.each(function (x) {\n                        if (x.group === CB) {\n                            factor = _.multiply(factor, clean(x.getDenom()));\n                        }\n                        else if (x.power.lessThan(0)) {\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\n                        }\n                    });\n\n                    var new_den = new Symbol(0);\n                    //now divide out the factor and add to new den\n                    den.each(function (x) {\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\n                    });\n\n                    factor.invert(); //invert so it can be added to the top\n                    var new_num;\n                    if (num.isComposite()) {\n                        new_num = new Symbol(0);\n                        num.each(function (x) {\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\n                        });\n                    }\n                    else\n                        new_num = _.multiply(factor, num);\n\n                    retval = _.divide(new_num, new_den);\n                }\n            }\n            else if (g === CB) {\n                retval = new Symbol(1);\n                symbol.each(function (x) {\n                    retval = _.multiply(retval, _.clean(x));\n                });\n            }\n            else if (g === FN) {\n                if (symbol.args.length === 1 && symbol.args[0].isConstant())\n                    retval = block('PARSE2NUMBER', function () {\n                        return _.parse(symbol);\n                    }, true);\n            }\n\n            if (!retval)\n                retval = symbol;\n\n            return retval;\n        }\n\n        /**\n         * Expands a symbol\n         * @param symbol\n         */\n        function expand(symbol) {\n            //deal with parenthesis\n            if (symbol.group === FN && symbol.fname === '') {\n                return _.expand(symbol.args[0]);\n            }\n\n            //TODO - some test need to be verified in order to implement this\n            /*\n             if(symbol.group === FN) {\n             symbol.args[0] = _.expand(symbol.args[0]);\n             symbol.updateHash();\n             return symbol;\n             }\n             */\n\n            if (!symbol.symbols)\n                return symbol; //nothing to do\n\n            var original = symbol.clone();\n            try {\n\n                if (!symbol.symbols)\n                    return symbol;\n\n                //expand all the symbols\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    symbol.symbols[s] = expand(x);\n                }\n\n                symbol = _.parse(symbol);\n\n                var p = symbol.power,\n                        m = symbol.multiplier.clone(),\n                        pn = Number(p);\n                if (isInt(pn) && pn > 0 && symbol.isComposite()) {\n                    var f = new Symbol(0);\n                    //we loop through the f and make sure that it's fully expanded\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x];\n                        if (sym.power.greaterThan(1))\n                            sym = _.expand(sym);\n                        f = _.add(f, sym);\n                    }\n\n                    //assume (a+b)^3 = (a+b)(a+b)(a+b) = (b^2+2*a*b+a^2)(a+b)\n                    //we have n=p-1=2 iterations where p=3 in this case\n                    var n = pn - 1;\n                    //Initiate with the first term. Remember that we have p-1 iterations because\n                    //the first iteration is equal to P where p is the polynomial\n                    var result = f.clone(); //initiate this as the first term\n                    //the first loop is the top iterator and remains untouched. No sub-symbols\n                    //from this symbol are allowed to be touched\n                    for (var i = 0; i < n; i++) {\n                        var t = new Symbol(0);\n                        for (var x in f.symbols) {\n                            var a = f.symbols[x];\n                            //we now loop through the \n                            for (var y in result.symbols) {\n                                var b = _.multiply(a.clone(), result.symbols[y]);\n                                //the result must always be a composite. If not expand\n                                if (b.group === CB)\n                                    b = _.expand(b);\n                                t = _.add(t, b);\n                            }\n                        }\n                        ;\n                        result = t;\n                    }\n\n                    //put back the multiplier\n                    if (!m.equals(1)) {\n                        for (var s in result.symbols) {\n                            var x = result.symbols[s];\n                            x.multiplier = x.multiplier.multiply(m);\n                            if (x.isComposite())\n                                x.distributeMultiplier();\n                            symbol.symbols[s] = x;\n                        }\n                    }\n\n                    return result;\n                }\n                else if (symbol.group === CB) {\n                    //check if the symbol has composites\n                    var hascomposites = false,\n                            sp = symbol.power.clone(),\n                            sign = symbol.power.sign();\n\n                    for (var x in symbol.symbols) {\n                        var sub = symbol.symbols[x];\n                        if (sub.isComposite()) {\n                            hascomposites = true;\n                            break;\n                        }\n\n                        if (isSymbol(sub.power) || isSymbol(sp)) {\n                            sub.power = _.multiply(sub.power, Symbol(sp));\n                            sub.group = EX;\n                        }\n                        else\n                            sub.power = sub.power.multiply(sp);\n                    }\n\n                    symbol.toLinear();\n\n                    //I'm going to be super lazy here and take the easy way out. TODO: do this without re-parsing\n                    symbol = _.parse(symbol.text());\n\n                    if (!hascomposites)\n                        return symbol; //nothing to do here\n\n                    var result = new Symbol(0);\n                    var composites = [],\n                            non_composites = new Symbol(symbol.multiplier);\n\n                    //sort them out\n                    for (var s in symbol.symbols) {\n                        var x = symbol.symbols[s];\n\n                        if (x.group === EX)\n                            continue;\n                        if (x.isComposite()) {\n                            var p = x.power, isDenom = false;\n                            ;\n                            if (isInt(p)) {\n                                if (p < 0) {\n                                    x.power.negate();\n                                    isDenom = true;\n                                }\n                            }\n\n                            if (isDenom) {\n                                x.power.negate();\n                                non_composites = _.multiply(non_composites, x);\n                            }\n                            else\n                                composites.push(x);\n                        }\n                        else\n                            non_composites = _.multiply(non_composites, x);\n                    }\n\n                    //grab the first symbol since we'll loop over that one to begin\n                    result = composites.pop();\n\n                    while (composites.length) {\n                        var s = composites.pop();\n                        var t = new Symbol(0);\n                        result.each(function (x) {\n                            s.each(function (y) {\n                                var prod = _.multiply(x.clone(), y.clone());\n                                t = _.add(t, prod);\n                            });\n                        });\n\n                        result = t;\n                    }\n\n                    var finalResult = new Symbol(0);\n                    //put back the multiplier\n                    result.each(function (x) {\n                        finalResult = _.add(finalResult, expand(_.multiply(non_composites, x)));\n                    });\n                    //expand the power\n                    finalResult.power = finalResult.power.multiply(sp.abs());\n\n                    symbol = _.expand(finalResult);\n\n                    if (sign < 0)\n                        symbol.invert();\n                }\n            }\n            catch (e) {\n                return original;\n            }\n\n            return symbol;\n        }\n        \n        /**\n         * Returns an identity matrix of nxn\n         * @param {Number} n\n         * @returns {Matrix}\n         */\n        function imatrix(n) {\n            return Matrix.identity(n);\n        }\n        \n        /**\n         * Retrieves and item from a vector\n         * @param {Vector} vector\n         * @param {Number} index\n         * @returns {Vector|Symbol}\n         */\n        function vecget(vector, index) {\n            if (index.isConstant() && isInt(index))\n                return vector.elements[index];\n            return _.symfunction('vecget', arguments);\n        }\n        \n        /**\n         * Removes duplicates from a vector\n         * @param {Vector} vector\n         * @param {Number} tolerance\n         * @returns {Vector}\n         */\n        function vectrim(vector, tolerance) {\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\n            \n            vector = vector.clone();\n            \n            tolerance = Number(tolerance);\n            //place algebraic solutions first\n            vector.elements.sort(function(a, b) {\n                return b.group - a.group;\n            });\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\n            vector.elements = removeDuplicates(vector.elements, function(a, b) {\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\n                return diff <= tolerance;\n            });\n            \n            return vector;\n        }\n        \n        /**\n         * Set a value for a vector at a given index\n         * @param {Vector} vector\n         * @param {Number} index\n         * @param {Symbol} value\n         * @returns {Vector}\n         */\n        function vecset(vector, index, value) {\n            if (!index.isConstant)\n                return _.symfunction('vecset', arguments);\n            vector.elements[index] = value;\n            return vector;\n        }\n\n        function matget(matrix, i, j) {\n            if (i.isConstant() && j.isConstant())\n                return matrix.elements[i][j];\n            return _.symfunction('matget', arguments);\n        }\n\n        function matgetrow(matrix, i) {\n            if (i.isConstant())\n                return new Matrix(matrix.elements[i]);\n            return _.symfunction('matgetrow', arguments);\n        }\n\n        function matsetrow(matrix, i, x) {\n            //handle symbolics\n            if (!i.isConstant())\n                return _.symfunction('matsetrow', arguments);\n            if (matrix.elements[i].length !== x.elements.length)\n                throw new DimensionError('Matrix row must match row dimensions!');\n            var M = matrix.clone();\n            M.elements[i] = x.clone().elements;\n            return M;\n        }\n\n        function matgetcol(matrix, col_index) {\n            //handle symbolics\n            if (!col_index.isConstant())\n                return _.symfunction('matgetcol', arguments);\n            col_index = Number(col_index);\n            var M = Matrix.fromArray([]);\n            matrix.each(function (x, i, j) {\n                if (j === col_index) {\n                    M.elements.push([x.clone()]);\n                }\n            });\n            return M;\n        }\n\n        function matsetcol(matrix, j, col) {\n            //handle symbolics\n            if (!j.isConstant())\n                return _.symfunction('matsetcol', arguments);\n            j = Number(j);\n            if (matrix.rows() !== col.elements.length)\n                throw new DimensionError('Matrix columns must match number of columns!');\n            col.each(function (x, i) {\n                matrix.set(i - 1, j, x.elements[0].clone());\n            });\n            return matrix;\n        }\n\n\n        function matset(matrix, i, j, value) {\n            matrix.elements[i][j] = value;\n            return matrix;\n        }\n\n        //the constructor for vectors\n        function vector() {\n            return new Vector([].slice.call(arguments));\n        }\n\n        //the constructor for matrices\n        function matrix() {\n            return Matrix.fromArray(arguments);\n        }\n        \n        //the constructor for sets\n        function set() {\n            return Set.fromArray(arguments);\n        }\n\n        function determinant(symbol) {\n            if (isMatrix(symbol)) {\n                return symbol.determinant();\n            }\n            return symbol;\n        }\n\n        function size(symbol) {\n            var retval;\n            if (isMatrix(symbol))\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\n            else if(isVector(symbol) || isSet(symbol)) \n                retval = new Symbol(symbol.elements.length);\n            else\n                err('size expects a matrix or a vector');\n            return retval;\n        }\n\n        function dot(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.dot(vec2);\n            err('function dot expects 2 vectors');\n        }\n\n        function cross(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.cross(vec2);\n            err('function cross expects 2 vectors');\n        }\n\n        function transpose(mat) {\n            if (isMatrix(mat))\n                return mat.transpose();\n            err('function transpose expects a matrix');\n        }\n\n        function invert(mat) {\n            if (isMatrix(mat))\n                return mat.invert();\n            err('invert expects a matrix');\n        }\n        \n        //basic set functions\n        function union(set1, set2) {\n            return set1.union(set2);\n        }\n        \n        function intersection(set1, set2) {\n            return set1.intersection(set2);\n        }\n        \n        function contains(set1, e) {\n            return set1.contains(e);\n        }\n        \n        function difference(set1, set2) {\n            return set1.difference(set2);\n        }\n        \n        function intersects(set1, set2) {\n            return new Symbol(Number(set1.intersects(set2)));\n        }\n        \n        function is_subset(set1, set2) {\n            return new Symbol(Number(set1.is_subset(set2)));\n        }\n        \n        function print() {\n            arguments2Array(arguments).map(function(x) {\n                console.log(x.toString());\n            });\n        }\n        \n        function testSQRT(symbol) {\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\n            if (!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\n                var sign = symbol.power.sign();\n                //don't devide the power directly. Notice the use of toString. This makes it possible\n                //to use a bigNumber library in the future\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\n                //place back the sign of the power\n                if (sign < 0)\n                    retval.invert();\n                return retval;\n            }\n            return symbol;\n        }\n\n        //try to reduce a symbol by pulling its power\n        function testPow(symbol) {\n            if (symbol.group === P) {\n                var v = symbol.value;\n                \n                var fct = primeFactors(v)[0];\n                \n                //safety\n                if(!fct) {\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\n                    return symbol;\n                }\n                \n                var n = new Frac(Math.log(v) / Math.log(fct)),\n                    p = n.multiply(symbol.power);\n                \n                //we don't want a more complex number than before \n                if (p.den > symbol.power.den)\n                    return symbol;\n\n                if (isInt(p))\n                    symbol = Symbol(Math.pow(fct, p));\n                else\n                    symbol = new Symbol(fct).setPower(p);\n            }\n\n            return symbol;\n        }\n\n        //Linke the functions to the parse so they're available outside of the library\n        //This is strictly for convenience and may be deprecated.\n        this.expand = expand;\n        this.clean = clean;\n        this.sqrt = sqrt;\n        this.log = log;\n        this.nthroot = nthroot;\n        this.arg = arg;\n        this.conjugate = conjugate;\n        this.imagpart = imagpart;\n        this.realpart = realpart;\n\n//Parser.methods ===============================================================\n        this.addPreprocessor = function (name, action, order, shift_cells) {\n            var names = preprocessors.names;\n            var actions = preprocessors.actions;\n            if ((typeof action !== 'function')) //the person probably forgot to specify a name\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\n            if (!order) {\n                names.push(name);\n                actions.push(action);\n            }\n            else {\n                if (shift_cells) {\n                    names.splice(order, 0, name);\n                    actions.splice(order, 0, action);\n                }\n                else {\n                    names[order] = name;\n                    actions[order] = action;\n                }\n            }\n        };\n\n        this.getPreprocessors = function () {\n            var preprocessors = {};\n            for (var i = 0, l = preprocessors.names.length; i < l; i++) {\n                var name = preprocessors.names[i];\n                preprocessors[name] = {\n                    order: i,\n                    action: preprocessors.actions[i]\n                };\n            }\n            return preprocessors;\n        };\n\n        this.removePreprocessor = function (name, shift_cells) {\n            var i = preprocessors.names.indexOf(name);\n            if (shift_cells) {\n                remove(preprocessors.names, i);\n                remove(preprocessors.actions, i);\n            }\n            else {\n                preprocessors.names[i] = undefined;\n                preprocessors.actions[i] = undefined;\n            }\n        };\n\n        //The loader for functions which are not part of Math2\n        this.mapped_function = function () {\n            var subs = {},\n                    params = this.params;\n            for (var i = 0; i < params.length; i++)\n                subs[params[i]] = arguments[i];\n\n            return _.parse(this.body, subs);\n        };\n        /**\n         * Adds two symbols\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.add = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with two symbols\n            if (aIsSymbol && bIsSymbol) {\n                //forward the adding of symbols with units to the Unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.add(a, b);\n                }\n                //handle Infinity\n                //https://www.encyclopediaofmath.org/index.php/Infinity\n                if (a.isInfinity || b.isInfinity) {\n                    var aneg = a.multiplier.lessThan(0),\n                            bneg = b.multiplier.lessThan(0);\n\n                    if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n                    }\n\n                    var inf = Symbol.infinity();\n                    if (bneg)\n                        inf.negate();\n                    return inf;\n                }\n\n                if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n                    a.distributeMultiplier();\n                    b.distributeMultiplier();\n                }\n                //no need to waste time on zeroes\n                if (a.multiplier.equals(0))\n                    return b;\n                if (b.multiplier.equals(0))\n                    return a;\n\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\n                    return result;\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        ap = a.power.toString(),\n                        bp = b.power.toString();\n\n                //always keep the greater group on the left. \n                if (g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\n                    return this.add(b, a);\n                }\n\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\n                 * because it doesn't know which one to prioritize. */\n                //correction to PL dilemma\n                if (g1 === CB && g2 === PL && a.value === b.value) {\n                    //swap\n                    var t = a;\n                    a = b;\n                    b = t;\n                    g1 = a.group;\n                    g2 = b.group;\n                    ap = a.power.toString();\n                    bp = b.power.toString();\n                }\n\n                var powEQ = ap === bp,\n                        v1 = a.value,\n                        v2 = b.value,\n                        aIsComposite = a.isComposite(),\n                        bIsComposite = b.isComposite(),\n                        h1, h2, result;\n\n                if (aIsComposite)\n                    h1 = text(a, 'hash');\n                if (bIsComposite)\n                    h2 = text(b, 'hash');\n\n                if (g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n                    return this.add(b, a);\n                }\n\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n                if (g1 === PL && g2 === PL) {\n                    v1 = h1;\n                    v2 = h2;\n                }\n\n                var PN = g1 === P && g2 === N,\n                        PNEQ = a.value === b.multiplier.toString(),\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\n\n                //equal values, equal powers\n                if (valEQ && powEQ && g1 === g2) {\n                    //make sure to convert N to something P can work with\n                    if (PN)\n                        b = b.convert(P);//CL\n\n                    //handle PL\n                    if (g1 === PL && (g2 === S || g2 === P)) {\n                        a.distributeMultiplier();\n                        result = a.attach(b);\n                    }\n                    else {\n                        result = a;//CL\n                        if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\n                            for (var s in b.symbols) {\n                                var x = b.symbols[s];\n                                result.attach(x);\n                            }\n                        }\n                        else\n                            result.multiplier = result.multiplier.add(b.multiplier);\n                    }\n                }\n                //equal values uneven powers\n                else if (valEQ && g1 !== PL) {\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n                    if (g1 === CP && g2 === PL) {\n                        b.insert(a);\n                        result = b;\n                    }\n                    else {\n                        result = Symbol.shell(PL).attach([a, b]);\n                        //update the hash\n                        result.value = g1 === PL ? h1 : v1;\n                    }\n                }\n                else if (aIsComposite && a.isLinear()) {\n                    var canIterate = g1 === g2,\n                            bothPL = g1 === PL && g2 === PL;\n\n                    //we can only iterate group PL if they values match\n                    if (bothPL)\n                        canIterate = a.value === b.value;\n                    //distribute the multiplier over the entire symbol\n                    a.distributeMultiplier();\n\n                    if (b.isComposite() && b.isLinear() && canIterate) {\n                        b.distributeMultiplier();\n                        //CL\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            a.attach(x);\n                        }\n                        result = a;\n                    }\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n                    else if (bothPL && a.value !== h2 || g1 === PL && !valEQ) {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n\n                    }\n                    else {\n                        result = a.attach(b);\n                    }\n                }\n                else {\n                    if (g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\n                        var m = b.multiplier.clone();\n                        b = sqrt(b.toUnitMultiplier().toLinear());\n                        b.multiplier = m;\n                    }\n                    //fix for issue #3 and #159\n                    if (a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\n                        result = _.add(expand(a), expand(b));\n                    }\n                    else {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n                    }\n                }\n\n                if (result.multiplier.equals(0))\n                    result = new Symbol(0);\n\n                //make sure to remove unnecessary wraps\n                if (result.length === 1) {\n                    var m = result.multiplier;\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(m);\n                }\n\n                return result;\n            }\n            else {\n                //keep symbols to the right \n                if (bIsSymbol && !aIsSymbol) {\n                    var t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var bIsMatrix = isMatrix(b);\n\n                if (aIsSymbol && bIsMatrix) {\n                    b.eachElement(function (e) {\n                        return _.add(a.clone(), e);\n                    });\n                }\n                else {\n                    if (isMatrix(a) && bIsMatrix) {\n                        b = a.add(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return _.add(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n                return b;\n            }\n\n        };\n        /**\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.subtract = function (a, b) {\n            var aIsSymbol = aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b), t;\n\n            if (aIsSymbol && bIsSymbol) {\n                if (a.unit || b.unit) {\n                    return _.Unit.subtract(a, b);\n                }\n                return this.add(a, b.negate());\n            }\n            else {\n                if (bIsSymbol && isVector(a)) {\n                    b = a.map(function (x) {\n                        return _.subtract(x, b.clone());\n                    });\n                }\n                else if (aIsSymbol && isVector(b)) {\n                    b = b.map(function (x) {\n                        return _.subtract(a.clone(), x);\n                    });\n                }\n                else if (isVector(a) && isVector(b)) {\n                    if (a.dimensions() === b.dimensions())\n                        b = a.subtract(b);\n                    else\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\n                }\n                else if (isMatrix(a) && isVector(b)) {\n                    if (b.elements.length === a.rows()) {\n                        var M = new Matrix(), l = a.cols();\n                        b.each(function (e, i) {\n                            var row = [];\n                            for (var j = 0; j < l; j++) {\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\n                            }\n                            M.elements.push(row);\n                        });\n                        return M;\n                    }\n                    else\n                        err('Dimensions must match!');\n                }\n                else if (isVector(a) && isMatrix(b)) {\n                    var M = b.clone().negate();\n                    return _.add(M, a);\n                }\n                else if (isMatrix(a) && isMatrix(b)) {\n                    b = a.subtract(b);\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the * operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.multiply = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with function assignment here\n            if (aIsSymbol && b instanceof Collection) {\n                b.elements.push(a);\n                return b;\n            }\n            if (aIsSymbol && bIsSymbol) {\n                //if it has a unit then add it and return it right away.\n                if (b.isUnit) {\n                    var result = a.clone();\n                    a.unit = b;\n                    return result;\n                }\n                //if it has units then just forward that problem to the unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.multiply(a, b);\n                }\n\n                //handle Infinty\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.equals(0) || b.equals(0))\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\n                    //x/infinity\n                    if (b.power.lessThan(0)) {\n                        if (!a.isInfinity) {\n                            return new Symbol(0);\n                        }\n                        else {\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\n                        }\n                    }\n\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\n                            inf = Symbol.infinity();\n                    if (a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\n                        if (sign < 0)\n                            inf.negate();\n\n                        return inf;\n                    }\n                }\n                //the quickies\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\n                    var retval = new Symbol(t);\n                    return retval;\n                }\n\n                //don't waste time\n                if (a.isOne()) {\n                    return b.clone();\n                }\n                if (b.isOne()) {\n                    return a.clone();\n                }\n\n                if (a.multiplier.equals(0) || b.multiplier.equals(0))\n                    return new Symbol(0);\n\n                if (b.group > a.group && !(b.group === CP))\n                    return this.multiply(b, a);\n                //correction for PL/CB dilemma\n                if (a.group === CB && b.group === PL && a.value === b.value) {\n                    var t = a;\n                    a = b;\n                    b = t;//swap\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        bnum = b.multiplier.num,\n                        bden = b.multiplier.den;\n\n                if (g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\n                    //unwrap sqrt\n                    var a_pow = a.power;\n                    a = a.args[0].clone();\n                    a.setPower(new Frac(0.5).multiply(a_pow));\n                    g1 = a.group;\n                }\n                //simplify n/sqrt(n). Being very specific\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\n                    a = _.symfunction(SQRT,[b.clone()]);\n                    b = new Symbol(1);\n                };\n\n                var v1 = a.value,\n                        v2 = b.value,\n                        sign = new Frac(a.sign()),\n                        //since P is just a morphed version of N we need to see if they relate\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\n                        //don't multiply the multiplier of b since that's equal to the value of a\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\n                        result = a.clone().toUnitMultiplier();\n                b = b.clone().toUnitMultiplier(true);\n\n                //further simplification of sqrt\n                if (g1 === FN && g2 === FN) {\n                    var u = a.args[0].clone();\n                    var v = b.args[0].clone();\n                    if (a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\n\n                        var q = _.divide(u, v).invert();\n                        if (q.gt(1) && isInt(q)) {\n                            //b contains a factor a which can be moved to a\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\n                            b = new Symbol(1);\n                        }\n                    }\n                    if (a.fname === FACTORIAL && b.fname === FACTORIAL) {\n                        if (a.power.equals(1) && b.power.equals(-1) && _.subtract(v.clone(), u.clone()).equals(1)) {\n                            result = _.divide(u, v);\n                            b = new Symbol(1);\n                        }\n                    }\n                }\n\n\n                //if both are PL then their hashes have to match\n                if (v1 === v2 && g1 === PL && g1 === g2) {\n                    v1 = a.text('hash');\n                    v2 = b.text('hash');\n                }\n\n                //same issue with (x^2+1)^x*(x^2+1)\n                //EX needs an exception when multiplying because it needs to recognize\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\n                if (g2 === EX && b.previousGroup === PL && g1 === PL) {\n                    v1 = text(a, 'hash', EX);\n                }\n\n                if ((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\n                    var p1 = a.power,\n                            p2 = b.power,\n                            isSymbolP1 = isSymbol(p1),\n                            isSymbolP2 = isSymbol(p2),\n                            toEX = (isSymbolP1 || isSymbolP2);\n                    //TODO: this needs cleaning up\n                    if (g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\n                        result = new Symbol(0);\n                        a.each(function (x) {\n                            result = _.add(result, _.multiply(x, b.clone()));\n                        }, true);\n                    }\n                    else {\n                        //add the powers\n                        result.power = toEX ? _.add(\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\n\n                        //eliminate zero power values and convert them to numbers\n                        if (result.power.equals(0))\n                            result = result.convert(N);\n\n                        //properly convert to EX\n                        if (toEX)\n                            result.convert(EX);\n\n                        //take care of imaginaries\n                        if (a.imaginary && b.imaginary) {\n                            var isEven = even(result.power % 2);\n                            if (isEven) {\n                                result = new Symbol(1);\n                                m.negate();\n                            }\n                        }\n\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\n                        if (result.group !== EX && result.previousGroup)\n                            result.previousGroup = undefined;\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\n                        //the sign but this isn't true if they're equals symbols\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                }\n                else if (g1 === CB && a.isLinear()) {\n                    if (g2 === CB)\n                        b.distributeExponent();\n                    if (g2 === CB && b.isLinear()) {\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            result = result.combine(x);\n                        }\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                    else {\n                        result.combine(b);\n                    }\n                }\n                else {\n                    //the multiplier was already handled so nothing left to do\n                    if (g1 !== N) {\n                        if (g1 === CB) {\n                            result.distributeExponent();\n                            result.combine(b);\n                        }\n                        else if (!b.isOne()) {\n                            var bm = b.multiplier.clone();\n                            b.toUnitMultiplier();\n                            result = Symbol.shell(CB).combine([result, b]);\n                            //transfer the multiplier to the outside\n                            result.multiplier = result.multiplier.multiply(bm);\n                        }\n                    }\n                    else {\n                        result = b.clone().toUnitMultiplier();\n                    }\n                }\n\n                if (result.group === P) {\n                    var logV = Math.log(result.value),\n                            n1 = Math.log(bnum) / logV,\n                            n2 = Math.log(bden) / logV,\n                            ndiv = m.num / bnum,\n                            ddiv = m.den / bden;\n                    //we don't want to divide by zero no do we? Strange things happen.\n                    if (n1 !== 0 && isInt(n1) && isInt(ndiv)) {\n                        result.power = result.power.add(new Frac(n1));\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\n                    }\n                    if (n2 !== 0 && isInt(n2) && isInt(ddiv)) {\n                        result.power = result.power.subtract(new Frac(n2));\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\n                    }\n                }\n\n                //unpack CB if length is only one\n                if (result.length === 1) {\n                    var t = result.multiplier;\n                    //transfer the multiplier\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(t);\n                }\n\n                //reduce square root\n                var ps = result.power.toString();\n                if (even(ps) && result.fname === SQRT) {\n                    //grab the sign of the symbol\n                    sign = sign * result.sign();\n                    var p = result.power;\n                    result = result.args[0];\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\n                    //flip it back to the correct sign\n                    if (sign < 0)\n                        result.negate()\n                }\n                else {\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\n                    if (result.group === CP && result.isImaginary())\n                        result.distributeMultiplier();\n                }\n\n                //back convert group P to a simpler group N if possible\n                if (result.group === P && isInt(result.power.toDecimal()))\n                    result = result.convert(N);\n\n                return result;\n            }\n            else {\n                //****** Matrices & Vector *****//\n                if (bIsSymbol && !aIsSymbol) { //keep symbols to the right \n                    t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\n                if (aIsSymbol && isMatrixB) {\n                    b.eachElement(function (e) {\n                        return _.multiply(a.clone(), e);\n                    });\n                }\n                else {\n                    if (isMatrixA && isMatrixB) {\n                        b = a.multiply(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return this.multiply(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the / operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.divide = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n\n            if (aIsSymbol && bIsSymbol) {\n                //forward to Unit division\n                if (a.unit || b.unit) {\n                    return _.Unit.divide(a, b);\n                }\n                var result;\n                if (b.equals(0))\n                    throw new DivisionByZero('Division by zero not allowed!');\n\n                if (a.isConstant() && b.isConstant()) {\n                    result = a.clone();\n                    result.multiplier = result.multiplier.divide(b.multiplier);\n                }\n                else {\n                    b.invert();\n                    result = _.multiply(a, b);\n                }\n                return result;\n            }\n            else {\n                //******* Vectors & Matrices *********//\n                var isVectorA = isVector(a), isVectorB = isVector(b);\n                if (aIsSymbol && isVectorB) {\n                    b = b.map(function (x) {\n                        return _.divide(a.clone(), x);\n                    });\n                }\n                else if (isVectorA && bIsSymbol) {\n                    b = a.map(function (x) {\n                        return _.divide(x, b.clone());\n                    });\n                }\n                else if (isVectorA && isVectorB) {\n                    if (a.dimensions() === b.dimensions()) {\n                        b = b.map(function (x, i) {\n                            return _.divide(a.elements[--i], x);\n                        });\n                    }\n                    else\n                        _.error('Cannot divide vectors. Dimensions do not match!');\n                }\n                else {\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\n                    if (isMatrixA && bIsSymbol) {\n                        a.eachElement(function (x) {\n                            return _.divide(x, b.clone());\n                        });\n                        b = a;\n                    }\n                    else if (isMatrixA && isMatrixB) {\n                        if (a.rows() === b.rows() && a.cols() === b.cols()) {\n                            a.eachElement(function (x, i, j) {\n                                return _.divide(x, b.elements[i][j]);\n                            });\n                        }\n                        else {\n                            _.error('Dimensions do not match!');\n                        }\n                    }\n                    else if (isMatrixA && isVectorB) {\n                        if (a.cols() === b.dimensions()) {\n                            a.eachElement(function (x, i, j) {\n                                return _.divide(x, b.elements[i].clone());\n                            });\n                            b = a;\n                        }\n                        else {\n                            _.error('Unable to divide matrix by vector.');\n                        }\n                    }\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the ^ operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.pow = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            if (aIsSymbol && bIsSymbol) {\n                //it has units then it's the Unit module's problem\n                if (a.unit || b.unit) {\n                    return _.Unit.pow(a, b);\n                }\n                //handle infinity\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.isInfinity && b.isInfinity)\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n                    if (a.isConstant() && b.isInfinity) {\n                        if (a.equals(0)) {\n                            if (b.lessThan(0))\n                                throw new UndefinedError('0^Infinity is undefined!');\n                            return new Symbol(0);\n                        }\n                        if (a.equals(1))\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\n                        //a^-oo\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        //a^oo\n                        if (!a.lessThan(0))\n                            return Symbol.infinity();\n                    }\n\n                    if (a.isInfinity && b.isConstant()) {\n                        if (b.equals(0))\n                            throw new UndefinedError(a + '^0 is undefined!');\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\n                    }\n                }\n\n                var aIsZero = a.equals(0);\n                var bIsZero = b.equals(0);\n                if (aIsZero && bIsZero)\n                    throw new UndefinedError('0^0 is undefined!');\n                //return 0 right away if possible\n                if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\n                    return new Symbol(0);\n\n                if (bIsZero)\n                    return new Symbol(1);\n\n                var bIsConstant = b.isConstant(),\n                        aIsConstant = a.isConstant(),\n                        bIsInt = b.isInteger(),\n                        m = a.multiplier,\n                        result = a.clone();\n                if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\n                    throw new UndefinedError('Division by zero is not allowed!');\n\n                //compute imaginary numbers right away\n                if (Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\n                    var k, re, im;\n                    k = Math.PI * b;\n                    re = new Symbol(Math.cos(k));\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\n                    return _.add(re, im);\n                }\n\n                //imaginary number under negative nthroot or to the n\n                if (Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\n                    var re, im, r, theta, nre, nim;\n                    re = a.realpart();\n                    im = a.imagpart();\n                    if (re.isConstant('all') && im.isConstant('all')) {\n                        theta = new Symbol(Math.atan2(im, re) * b);\n                        r = _.pow(Symbol.hyp(re, im), b);\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\n                        nim = _.multiply(r, _.trig.sin(theta));\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\n                    }\n                }\n\n                /*\n                 if(a.isImaginary() && bIsConstant && b.multiplier.num.abs().equals(1) && !b.multiplier.den.equals(1)) { \n                 var sign = b.sign();\n                 b = abs(b);\n                 var p, re, im, theta, n, ai, bi, di, ei, ii, th;\n                 p = Symbol.toPolarFormArray(a);\n                 theta = _.multiply(b.clone(), arg(a));\n                 di = _.pow(p[0], b);\n                 ai = _.trig.cos(theta.clone());\n                 bi = _.trig.sin(theta);\n                 \n                 if(sign < 0) {\n                 re = _.divide(ai, di.clone());\n                 im = _.divide(bi, di);\n                 }\n                 else {\n                 re = _.multiply(ai, di.clone());\n                 im = _.multiply(bi, di);\n                 }\n                 return _.add(re, _.multiply(im, Symbol.imaginary()));\n                 }\n                 */\n\n                //take care of the symbolic part\n                result.toUnitMultiplier();\n                //simpifly sqrt\n                if (result.group === FN && result.fname === SQRT && !bIsConstant) {\n                    var s = result.args[0];\n                    s.multiplyPower(new Symbol(0.5));\n                    s.multiplier.multiply(result.multiplier);\n                    s.multiplyPower(b);\n                    result = s;\n                }\n                else {\n                    var sign = m.sign();\n                    //handle cases such as (-a^3)^(1/4)\n                    if (evenFraction(b) && sign < 0) {\n                        //swaperoo\n                        //first put the sign back on the symbol\n                        result.negate();\n                        //wrap it in brackets\n                        result = _.symfunction(PARENTHESIS, [result]);\n                        //move the sign back the exterior and let nerdamer handle the rest\n                        result.negate();\n                    }\n                    \n                    result.multiplyPower(b);\n                }\n\n                if (aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\n                        var c;\n                        //remove the sign\n                        if (sign < 0) {\n                            a.negate();\n                            if (b.multiplier.den.equals(2))\n                                //we know that the numerator has to be odd and therefore it's i\n                                c = new Symbol(Settings.IMAGINARY);\n                            else if (isInt(b.multiplier)) {\n                                if (even(b.multiplier))\n                                    c = new Symbol(1);\n                                else\n                                    c = new Symbol(-1);\n                            }\n                            else if (!even(b.multiplier.den)) { \n                                c = new Symbol(Math.pow(sign, b.multiplier.num));\n                            }\n                            else {\n                                c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            }\n                        }\n\n                        result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\n                        \n                        //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n                        //put the back sign\n                        if (c)\n                            result = _.multiply(result, c);\n                }\n                else if (bIsInt && !m.equals(1)) {\n                    var abs_b = b.abs();     \n                    // Provide fall back to JS until big number implementation is improved\n                    if(abs_b.gt(Settings.MAX_EXP)) {\n                        if(b.sign() < 0)\n                            return new Symbol(0);\n                        return Symbol.infinity();\n                    }\n                    else {\n                        var p = b.multiplier.toDecimal();\n                        var sgn = Math.sign(p);\n                        p = Math.abs(p);\n                        var multiplier = new Frac(1);\n                        multiplier.num = m.num.pow(p);\n                        multiplier.den = m.den.pow(p);\n                        if (sgn < 0)\n                            multiplier.invert();\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\n                        result.multiplier = result.multiplier.multiply(multiplier);\n                    }\n                }\n                else { \n                    var sign = a.sign();\n                    if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\n                        if (b.multiplier.den.equals(2)) {\n                            var i = new Symbol(Settings.IMAGINARY);\n                            a.negate();//remove the sign\n                            //if the power is negative then i is negative\n                            if (b.lessThan(0)) {\n                                i.negate();\n                                b.negate();//remove the sign from the power\n                            }\n                            //pull the power normally and put back the imaginary\n                            result = _.multiply(_.pow(a, b), i);\n                        }\n                        else {\n//                            if(a.equals(-1)) {\n//                                var theta = _.multiply(b, _.parse('pi'));\n//                                result = evaluate(_.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta))));\n//                            }\n//                            else {\n                            var aa = a.clone();\n                            aa.multiplier.negate();\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\n                            var r = _.divide(_a, _b);\n                            result = _.multiply(result, r);\n//                            }  \n                        }\n                    }\n                    else if (Settings.PARSE2NUMBER && b.isImaginary()) {\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\n                        var re, im, aa, a1, b1, c1;\n                        aa = a.clone().toLinear();\n                        re = b.realpart();\n                        im = b.imagpart();\n                        a1 = _.pow(aa.clone(), re);\n                        b1 = trig.cos(_.multiply(im.clone(), log(aa.clone())));\n                        c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\n                        result = _.multiply(a1, _.add(b1, c1));\n                        result = _.expand(_.parse(result));\n                    }\n                    else {\n                        //b is a symbol\n                        var neg_num = a.group === N && sign < 0,\n                                num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n                                den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\n\n                        //eliminate imaginary if possible\n                        if (a.imaginary) {\n                            if (bIsInt) {\n                                var s, p, n;\n                                s = Math.sign(b);\n                                p = abs(b);\n                                n = p % 4;\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\n                                if (n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\n                                    result.negate();\n                                }\n                            }\n                            else {\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\n                                        tn = Math.pow(-1, nr.num);\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\n                            }\n                        }\n                        //ensure that the sign is carried by the symbol and not the multiplier\n                        //this enables us to check down the line if the multiplier can indeed be transferred\n                        if (sign < 0 && !neg_num)\n                            result.negate();\n\n                        //retain the absolute value\n                        if (bIsConstant && a.group !== EX) {\n                            var evenr = even(b.multiplier.den),\n                                    evenp = even(a.power),\n                                    n = result.power.toDecimal(),\n                                    evennp = even(n);\n                            if (evenr && evenp && !evennp) {\n                                if (n === 1)\n                                    result = _.symfunction(ABS, [result]);\n                                else if (!isInt(n)) {\n                                    var p = result.power;\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\n                                }\n                                else {\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\n                                            result.clone().setPower(new Frac(n - 1)));\n                                }\n                                //quick workaround. Revisit\n                                if (Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\n                                    result = result.args[0];\n                            }\n                        }\n                    }\n                }\n\n                result = testSQRT(result);\n\n                //don't multiply until we've tested the remaining symbol\n                if (num && den)\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\n\n                //reduce square root\n                if (result.fname === SQRT) {\n                    var isEX = result.group === EX;\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n                    if (even(t)) {\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\n                                m = result.multiplier;\n                        result = _.pow(result.args[0], pt);\n                        result.multiplier = result.multiplier.multiply(m);\n                    }\n                }\n                //detect Euler's identity\n                else if (!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\n                        && result.power.contains(Settings.IMAGINARY)) {\n                    var theta = b.stripVar(Settings.IMAGINARY);\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\n//                    //we have a match\n//                    var m1 = result.multiplier,\n//                            m2 = result.power.multiplier;\n//                    result = new Symbol(even(m2.num) ? m1 : m1.negate());\n//                    result = _.pow(result, new Symbol(m2.den).invert());\n                }\n                \n                return result;\n            }\n            else {\n                if (isVector(a) && bIsSymbol) {\n                    a = a.map(function (x) {\n                        return _.pow(x, b.clone());\n                    });\n                }\n                else if (isMatrix(a) && bIsSymbol) {\n                    a.eachElement(function (x) {\n                        return _.pow(x, b.clone());\n                    });\n                }\n                return a;\n            }\n        };\n        //gets called when the parser finds the , operator. \n        //Commas return a Collector object which roughly an array\n        this.comma = function (a, b) {\n            if (!(a instanceof Collection))\n                a = Collection.create(a);\n            a.append(b);\n            return a;\n        };\n        //link to modulus\n        this.mod = function (a, b) {\n            return mod(a, b);\n        };\n        //used to slice elements from arrays\n        this.slice = function (a, b) {\n            return new Slice(a, b);\n        };\n        //the equality setter\n        this.equals = function (a, b) {\n            //equality can only be set for group S so complain it's not\n            if (a.group !== S && !a.isLinear())\n                err('Cannot set equality for ' + a.toString());\n            VARS[a.value] = b.clone();\n            return b;\n        };\n        //percent\n        this.percent = function (a) {\n            return _.divide(a, new Symbol(100));\n        };\n        //set variable\n        this.assign = function (a, b) {\n            if (a instanceof Collection && b instanceof Collection) {\n                a.elements.map(function (x, i) {\n                    return _.assign(x, b.elements[i]);\n                });\n                return Vector.fromArray(b.elements);\n            }\n            if(a.parent) {\n                //it's referring to the parent instead. The current item can be discarded\n                var e = a.parent;\n                e.elements[e.getter] = b;\n                delete e.getter;\n                return e;\n            }\n            \n            if (a.group !== S)\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n            VARS[a.value] = b;\n            return b;\n        };\n        this.function_assign = function (a, b) {\n            var f = a.elements.pop();\n            return setFunction(f, a.elements, b);\n        };\n        //function to quickly convert bools to Symbols\n        var bool2Symbol = function (x) {\n            return new Symbol(x === true ? 1 : 0);\n        };\n        //check for equality\n        this.eq = function (a, b) {\n            return bool2Symbol(a.equals(b));\n        };\n        //checks for greater than\n        this.gt = function (a, b) {\n            return bool2Symbol(a.gt(b));\n        };\n        //checks for greater than equal\n        this.gte = function (a, b) {\n            return bool2Symbol(a.gte(b));\n        };\n        //checks for less than\n        this.lt = function (a, b) {\n            return bool2Symbol(a.lt(b));\n        };\n        //checks for less than equal\n        this.lte = function (a, b) {\n            return bool2Symbol(a.lte(b));\n        };\n        //wraps the factorial\n        this.factorial = function (a) {\n            return this.symfunction(FACTORIAL, [a]);\n        };\n        //wraps the double factorial\n        this.dfactorial = function (a) {\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\n        };\n    }\n    ;\n\n    /* \"STATIC\" */\n    //converts a number to a fraction. \n    var Fraction = {\n        /**\n         * Converts a decimal to a fraction\n         * @param {number} value\n         * @param {object} opts\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        convert: function (value, opts) {\n            var frac;\n            if (value === 0) {\n                frac = [0, 1];\n            }\n            else {\n                if (value < 1e-6 || value > 1e20) {\n                    var qc = this.quickConversion(Number(value));\n                    if (qc[1] <= 1e20) {\n                        var abs = Math.abs(value);\n                        var sign = value / abs;\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n                        frac[0] = frac[0] * sign;\n                    }\n                    else {\n                        frac = qc;\n                    }\n                }\n                else {\n                    frac = this.fullConversion(value);\n                }\n            }\n            return frac;\n        },\n        /**\n         * If the fraction is too small or too large this gets called instead of fullConversion method\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        quickConversion: function (dec) {\n            var x = (dec.toExponential() + '').split('e');\n            var d = x[0].split('.')[1];// get the number of places after the decimal\n            var l = (d ? d.length : 0)-parseInt(x[1]); // maybe the coefficient is an integer;\n            //call Math.round to avoid rounding error\n            return [Math.round(Math.pow(10, l) * x[0]), Math.pow(10, Math.abs(x[1]) + l)];\n        },\n        /**\n         * Returns a good approximation of a fraction. This method gets called by convert\n         * http://mathforum.org/library/drmath/view/61772.html\n         * Decimal To Fraction Conversion - A Simpler Version\n         * Dr Peterson\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        fullConversion: function (dec) {\n            var done = false;\n            //you can adjust the epsilon to a larger number if you don't need very high precision\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\n            while (!done) {\n                n++;\n                if (n > 10000) {\n                    done = true;\n                }\n                var a = Math.floor(q);\n                var num = n1 + a * n2;\n                var den = d1 + a * d2;\n                var e = (q - a);\n                if (e < epsilon) {\n                    done = true;\n                }\n                q = 1 / e;\n                n1 = n2;\n                d1 = d2;\n                n2 = num;\n                d2 = den;\n                if (Math.abs(num / den - dec) < epsilon || n > 30) {\n                    done = true;\n                }\n            }\n            return [num, den];\n        }\n    };\n    //Depends on Fraction\n\n    //The latex generator\n    var LaTeX = {\n        parser: (function () {\n            //create a parser and strip it from everything except the items that you need\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\n            var parser = new Parser();\n            for (var x in parser) {\n                if (keep.indexOf(x) === -1)\n                    delete parser[x];\n            }\n            //declare the operators\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\,',\n                action: 'slash_comma',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            //have braces not map to anything. We want them to be return as-is\n            var brackets = parser.getBrackets();\n            brackets['{'].maps_to = undefined;\n            return parser;\n        })(),\n        space: '~',\n        dot: ' \\\\cdot ',\n        //grab a list of supported functions but remove the excluded ones found in exclFN\n\n        latex: function (symbol, option) {\n            //it might be an array\n            if (symbol.clone) {\n                symbol = symbol.clone(); //leave original as-is\n            }\n            if (symbol instanceof _.classes.Collection)\n                symbol = symbol.elements;\n\n            if (isArray(symbol)) {\n                var LaTeXArray = [];\n                for (var i = 0; i < symbol.length; i++) {\n                    var sym = symbol[i];\n                    //This way I can generate LaTeX on an array of strings.\n                    if (!isSymbol(sym))\n                        sym = _.parse(sym);\n                    LaTeXArray.push(this.latex(sym, option));\n                }\n                return this.brackets(LaTeXArray.join(', '), 'square');\n            }\n\n            else if (isMatrix(symbol)) {\n                var TeX = '\\\\begin{pmatrix}\\n';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    var rowTeX = [],\n                            e = symbol.elements[i];\n                    for (var j = 0; j < e.length; j++) {\n                        rowTeX.push(this.latex(e[j], option));\n                    }\n                    TeX += rowTeX.join(' & ');\n                    if (i < symbol.elements.length - 1) {\n                        TeX += '\\\\\\\\\\n';\n                    }\n                }\n                TeX += '\\\\end{pmatrix}';\n                return TeX;\n            }\n\n            else if (isVector(symbol)) {\n                var TeX = '\\\\left[';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\right]';\n                return TeX;\n            }\n            \n            else if(isSet(symbol)) {\n                var TeX = '\\\\{';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\}';\n                return TeX;\n            }\n\n            symbol = symbol.clone();\n            var decimal = (option === 'decimal' || option === 'decimals'),\n                    power = symbol.power,\n                    invert = isNegative(power),\n                    negative = symbol.multiplier.lessThan(0);\n\n            if (symbol.group === P && decimal) {\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\n            }\n            else {\n                symbol.multiplier = symbol.multiplier.abs();\n\n                //if the user wants the result in decimal format then return it as such by placing it at the top part\n                var m_array;\n\n                if (decimal) {\n                    var m = String(symbol.multiplier.toDecimal());\n                    //if(String(m) === '1' && !decimal) m = '';\n                    m_array = [m, ''];\n                }\n                else {\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\n                }\n                //get the value as a two part array\n                var v_array = this.value(symbol, invert, option, negative),\n                        p;\n                //make it all positive since we know whether to push the power to the numerator or denominator already.\n                if (invert)\n                    power.negate();\n                //the power is simple since it requires no additional formatting. We can get it to a\n                //string right away. pass in true to neglect unit powers\n                if (decimal) {\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\n                    if (String(p) === '1')\n                        p = '';\n                }\n                //get the latex representation\n                else if (isSymbol(power))\n                    p = this.latex(power, option);\n                //get it as a fraction\n                else\n                    p = this.formatFrac(power, true);\n                //use this array to specify if the power is getting attached to the top or the bottom\n                var p_array = ['', ''],\n                        //stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\n                        index = invert ? 1 : 0;\n                p_array[index] = p;\n\n                //special case group P and decimal\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\n\n                return retval.replace(/\\+\\-/gi, '-');\n            }\n\n        },\n        //greek mapping\n        greek: {\n            alpha: '\\\\alpha',\n            beta: '\\\\beta',\n            gamma: '\\\\gamma',\n            delta: '\\\\delta',\n            epsilon: '\\\\epsilon',\n            zeta: '\\\\zeta',\n            eta: '\\\\eta',\n            theta: '\\\\theta',\n            iota: '\\\\iota',\n            kappa: '\\\\kappa',\n            lambda: '\\\\lambda',\n            mu: '\\\\mu',\n            nu: '\\\\nu',\n            xi: '\\\\xi',\n            omnikron: '\\\\omnikron',\n            pi: '\\\\pi',\n            rho: '\\\\rho',\n            sigma: '\\\\sigma',\n            tau: '\\\\tau',\n            upsilon: '\\\\upsilon',\n            phi: '\\\\phi',\n            chi: '\\\\chi',\n            psi: '\\\\psi',\n            omega: '\\\\omega',\n            Gamma: '\\\\Gamma',\n            Delta: '\\\\Delta',\n            Epsilon: '\\\\Epsilon',\n            Theta: '\\\\Theta',\n            Lambda: '\\\\Lambda',\n            Xi: '\\\\Xi',\n            Pi: '\\\\Pi',\n            Sigma: '\\\\Sigma',\n            Phi: '\\\\Phi',\n            Psi: '\\\\Psi',\n            Omega: '\\\\Omega'\n        },\n        symbols: {\n            arccos: '\\\\arccos',\n            cos: '\\\\cos',\n            csc: '\\\\csc',\n            exp: '\\\\exp',\n            ker: '\\\\ker',\n            limsup: '\\\\limsup',\n            min: '\\\\min',\n            sinh: '\\\\sinh',\n            arcsin: '\\\\arcsin',\n            cosh: '\\\\cosh',\n            deg: '\\\\deg',\n            gcd: '\\\\gcd',\n            lg: '\\\\lg',\n            ln: '\\\\ln',\n            Pr: '\\\\Pr',\n            sqrt: '\\\\sqrt',\n            sup: '\\\\sup',\n            arctan: '\\\\arctan',\n            cot: '\\\\cot',\n            det: '\\\\det',\n            hom: '\\\\hom',\n            lim: '\\\\lim',\n            log: '\\\\log',\n            LN:  '\\\\LN',\n            sec: '\\\\sec',\n            tan: '\\\\tan',\n            arg: '\\\\arg',\n            coth: '\\\\coth',\n            dim: '\\\\dim',\n            inf: '\\\\inf',\n            liminf: '\\\\liminf',\n            max: '\\\\max',\n            sin: '\\\\sin',\n            tanh: '\\\\tanh'\n        },\n        //get the raw value of the symbol as an array\n        value: function (symbol, inverted, option, negative) {\n            var group = symbol.group,\n                    previousGroup = symbol.previousGroup,\n                    v = ['', ''],\n                    index = inverted ? 1 : 0;\n            /*if(group === N) //do nothing since we want to return top & bottom blank; */\n            if (symbol.isInfinity) {\n                v[index] = '\\\\infty';\n            }\n            else if (group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\n                var value = symbol.value;\n                if (value.replace)\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\n                //split it so we can check for instances of alpha as well as alpha_b\n                var t_varray = String(value).split('_');\n                var greek = this.greek[t_varray[0]];\n                if (greek) {\n                    t_varray[0] = greek;\n                    value = t_varray.join('_');\n                }\n                var symbol = this.symbols[t_varray[0]];\n                if (symbol) {\n                    t_varray[0] = symbol;\n                    value = t_varray.join('_');\n                }\n                v[index] = value;\n            }\n            else if (group === FN || previousGroup === FN) {\n                var name,\n                        input = [],\n                        fname = symbol.fname;\n                //collect the arguments\n                for (var i = 0; i < symbol.args.length; i++) {\n                    var arg = symbol.args[i], item;\n                    if (typeof arg === 'string')\n                        item = arg;\n                    else {\n                        item = this.latex(arg, option);\n                    }\n                    input.push(item);\n                }\n\n                if (fname === SQRT) {\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\n                }\n                else if (fname === ABS) {\n                    v[index] = this.brackets(input.join(','), 'abs');\n                }\n                else if (fname === PARENTHESIS) {\n                    v[index] = this.brackets(input.join(','), 'parens');\n                }\n                else if (fname === 'limit') {\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\n                }\n                else if (fname === 'integrate') {\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\n                }\n                else if (fname === 'defint') {\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\n                }\n                else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n                    var arg = symbol.args[0];\n                    if (arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\n                        input[0] = this.brackets(input[0]);\n                    }\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\n                }\n                else if (fname === 'floor') {\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\n                }\n                else if (fname === 'ceil') {\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG && input.length > 1) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG10) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\n                }\n                else if (fname === 'sum') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'product') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'nthroot') {\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\n                }\n                else if (fname === 'mod') {\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\n                }\n                else if (fname === 'realpart') {\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\n                }\n                else if (fname === 'imagpart') {\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\n                }\n                else {\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\n                    if (symbol.isConversion)\n                        v[index] = name + this.brackets(input.join(''), 'parens');\n                    else\n                        v[index] = name + this.brackets(input.join(','), 'parens');\n                }\n            }\n            else if (symbol.isComposite()) {\n                var collected = symbol.collectSymbols().sort(\n                        group === CP || previousGroup === CP ?\n                        function (a, b) {\n                            return b.group - a.group;\n                        } :\n                        function (a, b) {\n                            var x = isSymbol(a.power) ? -1 : a.power;\n                            var y = isSymbol(b.power) ? -1 : b.power;\n                            return y - x;\n                        }\n                ),\n                        symbols = [],\n                        l = collected.length;\n                for (var i = 0; i < l; i++) {\n                    symbols.push(LaTeX.latex(collected[i], option));\n                }\n                var value = symbols.join('+');\n\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\n            }\n            else if (group === CB || previousGroup === EX || previousGroup === CB) {\n                if (group === CB)\n                    symbol.distributeExponent();\n                //this almost feels a little like cheating but I need to know if I should be wrapping the symbol\n                //in brackets or not. We'll do this by checking the value of the numerator and then comparing it \n                //to whether the symbol value is \"simple\" or not.\n                var denominator = [],\n                        numerator = [];\n                //generate a profile\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\n                var setBrackets = function (container, map, counter) {\n                    if (counter > 1 && map.length > 0) {\n                        var l = map.length;\n                        for (var i = 0; i < l; i++) {\n                            var idx = map[i], item = container[idx];\n                            if (!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\n                                container[idx] = LaTeX.brackets(item, 'parens');\n                            }\n                        }\n                    }\n                    return container;\n                };\n\n                //generate latex for each of them\n                symbol.each(function (x) {\n                    var isDenom = isNegative(x.power),\n                            laTex;\n\n                    if (isDenom) {\n                        laTex = LaTeX.latex(x.invert(), option);\n                        den_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            den_map.push(denominator.length); //make a note of where the composite was found \n                        }\n\n                        denominator.push(laTex);\n                    }\n                    else {\n                        laTex = LaTeX.latex(x, option);\n                        num_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            num_map.push(numerator.length);   //make a note of where the composite was found \n                        }\n                        numerator.push(laTex);\n                    }\n                });\n\n                //apply brackets\n                setBrackets(numerator, num_map, num_c);\n                v[0] = numerator.join(this.dot); //collapse the numerator into one string\n\n                setBrackets(denominator, den_map, den_c);\n                v[1] = denominator.join(this.dot);\n            }\n\n            return v;\n        },\n        set: function (m, v, p, combine_power) {\n            var isBracketed = function (v) {\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\n            };\n            //format the power if it exists\n            if (p)\n                p = this.formatP(p);\n            //group CB will have to be wrapped since the power applies to both it's numerator and denominator\n            if (combine_power) {\n                //POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\n                //the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\n                //of a case where this isn't true\n                var tp = p[0];\n                p[0] = ''; //temporarily make p blank\n            }\n\n            //merge v and p. Not that v MUST be first since the order matters\n            v = this.merge(v, p);\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\n            //filters\n            //if the top has a variable but the numerator is one drop it\n            if (vn && Number(mn) === 1)\n                mn = '';\n            //if denominator is 1 drop it always\n            if (Number(md) === 1)\n                md = '';\n            //prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\n\n            //prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\n            //format the power if it exists\n            //make it a fraction if both top and bottom exists\n            if (top && bottom) {\n                var frac = this.frac(top, bottom);\n                if (combine_power && tp)\n                    frac = this.brackets(frac) + tp;\n                return frac;\n            }\n            //otherwise only the top exists so return that\n            else\n                return top;\n        },\n        merge: function (a, b) {\n            var r = [];\n            for (var i = 0; i < 2; i++)\n                r[i] = a[i] + b[i];\n            return r;\n        },\n        //joins together two strings if both exist\n        join: function (n, d, glue) {\n            if (!n && !d)\n                return '';\n            if (n && !d)\n                return n;\n            if (d && !n)\n                return d;\n            return n + glue + d;\n        },\n        formatP: function (p_array) {\n            for (var i = 0; i < 2; i++) {\n                var p = p_array[i];\n                if (p)\n                    p_array[i] = '^' + this.braces(p);\n            }\n            return p_array;\n        },\n        /**\n         * formats the fractions accordingly.\n         * @param {Frac} f\n         * @param {bool} is_pow\n         */\n        formatFrac: function (f, is_pow) {\n            var n = f.num.toString(),\n                    d = f.den.toString();\n            //no need to have x^1\n            if (is_pow && n === '1' && d === '1')\n                return '';\n            //no need to have x/1\n            if (d === '1')\n                return n;\n            return this.frac(n, d);\n        },\n        frac: function (n, d) {\n            return '\\\\frac' + this.braces(n) + this.braces(d);\n        },\n        braces: function (e) {\n            return '{' + e + '}';\n        },\n        brackets: function (e, typ) {\n            typ = typ || 'parens';\n            var bracketTypes = {\n                parens: ['(', ')'],\n                square: ['[', ']'],\n                brace: ['{', '}'],\n                abs: ['|', '|'],\n                angle: ['\\\\langle', '\\\\rangle']\n            };\n            var bracket = bracketTypes[typ];\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\n        },\n        /**\n         * Removes extreneous tokens\n         * @param {Tokens[]} tokens\n         * @returns {Tokens[]}\n         */\n        filterTokens: function (tokens) {\n            var filtered = [];\n            //the items that need to be disposed\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\n            for (var i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                if (isArray(token))\n                    filtered.push(LaTeX.filterTokens(token));\n                else if (d.indexOf(token.value) === -1)\n                    filtered.push(token);\n            }\n            return filtered;\n        },\n        /*\n         * Parses tokens from LaTeX string. Does not do any error checking\n         * @param {Tokens[]} rpn\n         * @returns {String}\n         */\n        parse: function (raw_tokens) {\n            var i, l;\n            var retval = '';\n            var tokens = this.filterTokens(raw_tokens);\n            var replace = {\n                'cdot': '*',\n                'times': '*',\n                'infty': 'Infinity'\n            };\n            //get the next token\n            var next = function () {\n                return tokens[++i];\n            };\n            var parse_next = function () {\n                return LaTeX.parse(next());\n            };\n            var get = function (token) {\n                if (token in replace)\n                    return replace[token];\n                return token;\n            };\n\n            //start parsing the tokens\n            for (i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                //fractions\n                if (token.value === 'frac') {\n                    //parse and wrap it in brackets\n                    var n = parse_next();\n                    var d = parse_next();\n                    retval += n + '/' + d;\n                }\n                else if (token.value in LaTeX.symbols) {\n                    retval += token.value + parse_next();\n                }\n                else if (token.value === 'int') {\n                    var f = parse_next();\n                    //skip the comma\n                    i++;\n                    //get the variable of integration\n                    var dx = next().value;\n                    dx = get(dx.substring(1, dx.length));\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\n                }\n                else if (token.value === 'mathrm') {\n                    var f = tokens[++i][0].value;\n                    retval += f + parse_next();\n                }\n                //sum and product\n                else if (token.value === 'sum_' || token.value === 'prod_') {\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\n                    var nxt = next();\n                    i++; //skip the caret\n                    var end = parse_next();\n                    var f = parse_next();\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\n                }\n                else if (token.value === 'lim_') {\n                    var nxt = next();\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\n                }\n                else {\n                    if(Array.isArray(token)) {\n                        retval += get(LaTeX.parse(token));\n                    }\n                    else\n                        retval += get(token.value.toString());\n                }\n            }\n            return inBrackets(retval);\n        }\n    };\n//Vector =======================================================================    \n    function Vector(v) {\n        if (isVector(v))\n            this.elements = v.items.slice(0);\n        else if (isArray(v))\n            this.elements = v.slice(0);\n        else\n            this.elements = [].slice.call(arguments);\n    }\n    /*\n     * Generates a pre-filled array\n     * @param {type} n\n     * @param {type} val\n     * @returns {unresolved}\n     */\n    Vector.arrayPrefill = function (n, val) {\n        var a = [];\n        val = val || 0;\n        for (var i = 0; i < n; i++)\n            a[i] = val;\n        return a;\n    };\n    /**\n     * Generate a vector from and array\n     * @param {type} a\n     * @returns {unresolved}\n     */\n    Vector.fromArray = function (a) {\n        var v = new Vector();\n        v.elements = a;\n        return v;\n    };\n    \n    /**\n     * Convert a Set to a Vector\n     * @param {Set} set\n     * @returns {Vector}\n     */\n    Vector.fromSet = function(set) {\n        return Vector.fromArray(set.elements);\n    };\n    \n    //Ported from Sylvester.js\n    Vector.prototype = {\n        custom: true,\n        // Returns element i of the vector\n        e: function (i) {\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\n        },\n\n        set: function (i, val) {\n            if (!isSymbol(val))\n                val = new Symbol(val);\n            this.elements[i] = val;\n        },\n\n        // Returns the number of elements the vector has\n        dimensions: function () {\n            return this.elements.length;\n        },\n\n        // Returns the modulus ('length') of the vector\n        modulus: function () {\n            return block('SAFE', function () {\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is equal to the argument\n        eql: function (vector) {\n            var n = this.elements.length;\n            var V = vector.elements || vector;\n            if (n !== V.length) {\n                return false;\n            }\n            do {\n                if (Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\n                    return false;\n                }\n            }\n            while (--n);\n            return true;\n        },\n\n        // Returns a clone of the vector\n        clone: function () {\n            var V = new Vector(),\n                    l = this.elements.length;\n            for (var i = 0; i < l; i++) {\n                //Rule: all items within the vector must have a clone method.\n                V.elements.push(this.elements[i].clone());\n            }\n            if (this.getter) {\n                V.getter = this.getter.clone();\n            }\n            return V;\n        },\n\n        // Maps the vector to another vector according to the given function\n        map: function (fn) {\n            var elements = [];\n            this.each(function (x, i) {\n                elements.push(fn(x, i));\n            });\n\n            return new Vector(elements);\n        },\n\n        // Calls the iterator for each element of the vector in turn\n        each: function (fn) {\n            var n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                fn(this.elements[i], i + 1);\n            }\n            while (--n);\n        },\n\n        // Returns a new vector created by normalizing the receiver\n        toUnitVector: function () {\n            return block('SAFE', function () {\n                var r = this.modulus();\n                if (r.valueOf() === 0) {\n                    return this.clone();\n                }\n                return this.map(function (x) {\n                    return _.divide(x, r);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the angle between the vector and the argument (also a vector)\n        angleFrom: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\n                // Work things out in parallel to save time\n                this.each(function (x, i) {\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\n                    mod1 = _.add(mod1, _.multiply(x, x));//will not conflict in safe block\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));//will not conflict in safe block\n                });\n                mod1 = _.pow(mod1, new Symbol(0.5));\n                mod2 = _.pow(mod2, new Symbol(0.5));\n                var product = _.multiply(mod1, mod2);\n                if (product.valueOf() === 0) {\n                    return null;\n                }\n                var theta = _.divide(dot, product);\n                var theta_val = theta.valueOf();\n                if (theta_val < -1) {\n                    theta = -1;\n                }\n                if (theta_val > 1) {\n                    theta = 1;\n                }\n                return new Symbol(Math.acos(theta));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is parallel to the argument\n        isParallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (angle <= PRECISION);\n        },\n\n        // Returns true iff the vector is antiparallel to the argument\n        isAntiparallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\n        },\n\n        // Returns true iff the vector is perpendicular to the argument\n        isPerpendicularTo: function (vector) {\n            var dot = this.dot(vector);\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\n        },\n\n        // Returns the result of adding the argument to the vector\n        add: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.add(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of subtracting the argument from the vector\n        subtract: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.subtract(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of multiplying the elements of the vector by the argument\n        multiply: function (k) {\n            return this.map(function (x) {\n                return x.clone() * k.clone();\n            });\n        },\n\n        x: function (k) {\n            return this.multiply(k);\n        },\n\n        // Returns the scalar product of the vector with the argument\n        // Both vectors must have equal dimensionality\n        dot: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var product = new Symbol(0), n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                do {\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\n                }\n                while (--n);\n                return product;\n            }, undefined, this);\n        },\n\n        // Returns the vector product of the vector with the argument\n        // Both vectors must have dimensionality 3\n        cross: function (vector) {\n            var B = vector.elements || vector;\n            if (this.elements.length !== 3 || B.length !== 3) {\n                return null;\n            }\n            var A = this.elements;\n            return block('SAFE', function () {\n                return new Vector([\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\n                ]);\n            }, undefined, this);\n        },\n\n        // Returns the (absolute) largest element of the vector\n        max: function () {\n            var m = 0, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\n                    m = this.elements[i];\n                }\n            }\n            while (--n);\n            return m;\n        },\n        magnitude: function() {\n            var magnitude = new Symbol(0);\n            this.each(function(e) {\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\n            });\n            return _.sqrt(magnitude);\n        },\n        // Returns the index of the first match found\n        indexOf: function (x) {\n            var index = null, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (index === null && this.elements[i].valueOf() === x.valueOf()) {\n                    index = i + 1;\n                }\n            }\n            while (--n);\n            return index;\n        },\n        text: function (x) {\n            return text(this);\n        },\n        toString: function () {\n            return this.text();\n        },\n        latex: function (option) {\n            var tex = [];\n            for (var i = 0; i < this.elements.length; i++) {\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\n            }\n            return '[' + tex.join(', ') + ']';\n        }\n    };\n\n//Matrix =======================================================================\n    function Matrix() {\n        var m = arguments,\n                l = m.length, i, el = [];\n        if (isMatrix(m)) { //if it's a matrix then make a clone\n            for (i = 0; i < l; i++) {\n                el.push(m[i].slice(0));\n            }\n        }\n        else {\n            var row, lw, rl;\n            for (i = 0; i < l; i++) {\n                row = m[i];\n                if (isVector(row))\n                    row = row.elements;\n                if (!isArray(row))\n                    row = [row];\n                rl = row.length;\n                if (lw && lw !== rl)\n                    err('Unable to create Matrix. Row dimensions do not match!');\n                el.push(row);\n                lw = rl;\n            }\n        }\n        this.elements = el;\n    }\n    Matrix.identity = function (n) {\n        var m = new Matrix();\n        for (var i = 0; i < n; i++) {\n            m.elements.push([]);\n            for (var j = 0; j < n; j++) {\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\n            }\n        }\n        return m;\n    };\n    Matrix.fromArray = function (arr) {\n        function F(args) {\n            return Matrix.apply(this, args);\n        }\n        F.prototype = Matrix.prototype;\n\n        return new F(arr);\n    };\n    Matrix.zeroMatrix = function (rows, cols) {\n        var m = new Matrix();\n        for (var i = 0; i < rows; i++) {\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\n        }\n        return m;\n    };\n    Matrix.prototype = {\n        //needs be true to let the parser know not to try to cast it to a symbol\n        custom: true,\n        get: function (row, column) {\n            if (!this.elements[row])\n                return undefined;\n            return this.elements[row][column];\n        },\n        map: function(f, raw_values) {\n            var M = new Matrix();\n            this.each(function(e, i, j) {\n                M.set( i, j, f.call(M, e), raw_values);\n            });\n            return M;\n        },\n        set: function (row, column, value, raw) {\n            if (!this.elements[row])\n                this.elements[row] = [];\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\n        },\n        cols: function () {\n            return this.elements[0].length;\n        },\n        rows: function () {\n            return this.elements.length;\n        },\n        row: function (n) {\n            if (!n || n > this.cols())\n                return [];\n            return this.elements[n - 1];\n        },\n        col: function (n) {\n            var nr = this.rows(),\n                    col = [];\n            if (n > this.cols() || !n)\n                return col;\n            for (var i = 0; i < nr; i++) {\n                col.push(this.elements[i][n - 1]);\n            }\n            return col;\n        },\n        eachElement: function (fn) {\n            var nr = this.rows(),\n                    nc = this.cols(), i, j;\n            for (i = 0; i < nr; i++) {\n                for (j = 0; j < nc; j++) {\n                    fn.call(this, this.elements[i][j], i, j);\n                }\n            }\n        },\n        //ported from Sylvester.js\n        determinant: function () {\n            if (!this.isSquare()) {\n                return null;\n            }\n            var M = this.toRightTriangular();\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\n            do {\n                i = k - n + 1;\n                det = _.multiply(det, M.elements[i][i]);\n            }\n            while (--n);\n            return det;\n        },\n        isSquare: function () {\n            return this.elements.length === this.elements[0].length;\n        },\n        isSingular: function () {\n            return this.isSquare() && this.determinant() === 0;\n        },\n        augment: function (m) {\n            var r = this.rows(), rr = m.rows();\n            if (r !== rr)\n                err(\"Cannot augment matrix. Rows don't match.\");\n            for (var i = 0; i < r; i++) {\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\n            }\n\n            return this;\n        },\n        clone: function () {\n            var r = this.rows(), c = this.cols(),\n                    m = new Matrix();\n            for (var i = 0; i < r; i++) {\n                m.elements[i] = [];\n                for (var j = 0; j < c; j++) {\n                    var symbol = this.elements[i][j];\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\n                }\n            }\n            return m;\n        },\n        //ported from Sylvester.js\n        invert: function () {\n            if (!this.isSquare())\n                err('Matrix is not square!');\n            return block('SAFE', function () {\n                var ni = this.elements.length, ki = ni, i, j;\n                var imatrix = Matrix.identity(ni);\n                var M = this.augment(imatrix).toRightTriangular();\n                var np, kp = M.elements[0].length, p, els, divisor;\n                var inverse_elements = [], new_element;\n                // Matrix is non-singular so there will be no zeros on the diagonal\n                // Cycle through rows from last to first\n                do {\n                    i = ni - 1;\n                    // First, normalise diagonal elements to 1\n                    els = [];\n                    np = kp;\n                    inverse_elements[i] = [];\n                    divisor = M.elements[i][i];\n                    do {\n                        p = kp - np;\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\n                        els.push(new_element);\n                        // Shuffle of the current row of the right hand side into the results\n                        // array as it will not be modified by later runs through this loop\n                        if (p >= ki) {\n                            inverse_elements[i].push(new_element);\n                        }\n                    }\n                    while (--np);\n                    M.elements[i] = els;\n                    // Then, subtract this row from those above it to\n                    // give the identity matrix on the left hand side\n                    for (j = 0; j < i; j++) {\n                        els = [];\n                        np = kp;\n                        do {\n                            p = kp - np;\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\n                        }\n                        while (--np);\n                        M.elements[j] = els;\n                    }\n                }\n                while (--ni);\n                return Matrix.fromArray(inverse_elements);\n            }, undefined, this);\n        },\n        //ported from Sylvester.js\n        toRightTriangular: function () {\n            return block('SAFE', function () {\n                var M = this.clone(), els, fel, nel,\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\n                do {\n                    i = k - n;\n                    fel = M.elements[i][i];\n                    if (fel.valueOf() === 0) {\n                        for (var j = i + 1; j < k; j++) {\n                            nel = M.elements[j][i];\n                            if (nel && nel.valueOf() !== 0) {\n                                els = [];\n                                np = kp;\n                                do {\n                                    p = kp - np;\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\n                                }\n                                while (--np);\n                                M.elements[i] = els;\n                                break;\n                            }\n                        }\n                    }\n                    var fel = M.elements[i][i];\n                    if (fel.valueOf() !== 0) {\n                        for (j = i + 1; j < k; j++) {\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\n                            els = [];\n                            np = kp;\n                            do {\n                                p = kp - np;\n                                // Elements with column numbers up to an including the number\n                                // of the row that we're subtracting can safely be set straight to\n                                // zero, since that's the point of this routine and it avoids having\n                                // to loop over and correct rounding errors later\n                                els.push(p <= i ? new Symbol(0) :\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\n                            }\n                            while (--np);\n                            M.elements[j] = els;\n                        }\n                    }\n                }\n                while (--n);\n\n                return M;\n            }, undefined, this);\n        },\n        transpose: function () {\n            var rows = this.elements.length, cols = this.elements[0].length;\n            var M = new Matrix(), ni = cols, i, nj, j;\n\n            do {\n                i = cols - ni;\n                M.elements[i] = [];\n                nj = rows;\n                do {\n                    j = rows - nj;\n                    M.elements[i][j] = this.elements[j][i].clone();\n                }\n                while (--nj);\n            }\n            while (--ni);\n            return M;\n        },\n        // Returns true if the matrix can multiply the argument from the left\n        canMultiplyFromLeft: function (matrix) {\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\n            // this.columns should equal matrix.rows\n            return (this.elements[0].length === l);\n        },\n        sameSize: function (matrix) {\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\n        },\n        multiply: function (matrix) {\n            return block('SAFE', function () {\n                var M = matrix.elements || matrix;\n                if (!this.canMultiplyFromLeft(M)) {\n                    if (this.sameSize(matrix)) {\n                        var MM = new Matrix();\n                        var rows = this.rows();\n                        for (var i = 0; i < rows; i++) {\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\n                            MM.elements[i] = e.elements;\n                        }\n                        return MM;\n                    }\n                    return null;\n                }\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\n                do {\n                    i = ki - ni;\n                    elements[i] = [];\n                    nj = kj;\n                    do {\n                        j = kj - nj;\n                        sum = new Symbol(0);\n                        nc = cols;\n                        do {\n                            c = cols - nc;\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\n                        }\n                        while (--nc);\n                        elements[i][j] = sum;\n                    }\n                    while (--nj);\n                }\n                while (--ni);\n                return Matrix.fromArray(elements);\n            }, undefined, this);\n        },\n        add: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        subtract: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        negate: function () {\n            this.each(function (e) {\n                return e.negate();\n            });\n            return this;\n        },\n        toVector: function () {\n            if (this.rows() === 1 || this.cols() === 1) {\n                var v = new Vector();\n                v.elements = this.elements;\n                return v;\n            }\n            return this;\n        },\n        toString: function (newline, to_decimal) {\n            var l = this.rows(),\n                    s = [];\n            newline = newline === undefined ? '\\n' : newline;\n            for (var i = 0; i < l; i++) {\n                s.push('[' + this.elements[i].map(function (x) {\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\n                    return x !== undefined ? v : '';\n                }).join(',') + ']');\n            }\n            return 'matrix' + inBrackets(s.join(','));\n        },\n        text: function () {\n            return 'matrix(' + this.elements.toString('') + ')';\n        },\n        latex: function (option) {\n            var cols = this.cols(), elements = this.elements;\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\n                var tex = [];\n                for (var row in elements) {\n                    var row_tex = [];\n                    for (var i = 0; i < cols; i++) {\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\n                    }\n                    tex.push(row_tex.join(' & '));\n                }\n                return tex.join(' \\\\cr ');\n            });\n        }\n    };\n    //aliases\n    Matrix.prototype.each = Matrix.prototype.eachElement;\n\n\n    function Set(set) {\n        this.elements = [];\n        //if the first object isn't an array, convert it to one.\n        if(!isVector(set))\n            set = Vector.fromArray(arguments);\n        \n        if(set) { \n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                this.add(elements[i]);\n            }\n        }\n    }\n    \n    Set.fromArray = function (arr) {\n        function F(args) {\n            return Set.apply(this, args);\n        }\n        F.prototype = Set.prototype;\n\n        return new F(arr);\n    };\n    \n    Set.prototype = {\n        add: function(x) {\n            if(!this.contains(x))\n                this.elements.push(x.clone());\n        },\n        contains: function(x) {\n            for(var i=0; i<this.elements.length; i++) {\n                var e = this.elements[i];\n                if(x.equals(e))\n                    return true;\n            }\n            return false;\n        },\n        each: function(f) {\n            var elements = this.elements;\n            var set = new Set();\n            for(var i=0, l=elements.length; i<l; i++) {\n                var e = elements[i];\n                f.call(this, e, set, i);\n            }\n            return set;\n        },\n        clone: function() {\n            var set = new Set();\n            this.each(function(e) {\n                set.add(e.clone());\n            });\n            return set;\n        },\n        union: function(set) {\n            var _union = this.clone();\n            set.each(function(e) {\n                _union.add(e);\n            });\n            \n            return _union;\n        },\n        difference: function(set) {\n            var diff = this.clone();\n            set.each(function(e) {\n                diff.remove(e);\n            });\n            return diff;\n        },\n        remove: function(element) {\n            for(var i=0, l=this.elements.length; i<l; i++) {\n                var e = this.elements[i];\n                if(e.equals(element)) {\n                    remove(this.elements, i);\n                    return true;\n                }\n            }\n            return false;\n        },\n        intersection: function(set) { \n            var _intersection = new Set();\n            var A = this;\n            set.each(function(e) {\n                if(A.contains(e)) {\n                    _intersection.add(e);\n                };\n            });\n            \n            return _intersection;\n        },\n        intersects: function(set) {\n            return this.intersection(set).elements.length > 0;\n        },\n        is_subset: function(set) {\n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                if(!this.contains(elements[i])) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        toString: function() {\n            return '{'+this.elements.join(',')+'}';\n        }\n    };\n\n//build ========================================================================\n    var Build = {\n        dependencies: {\n            _rename: {\n                'Math2.factorial': 'factorial'\n            },\n            factorial: {\n                'Math2.gamma': Math2.gamma\n            },\n            gamma_incomplete: {\n                'Math2.factorial': Math2.factorial\n            },\n            Li: {\n                'Math2.Ei': Math2.Ei,\n                'Math2.bigLog': Math2.bigLog,\n                'Frac': Frac\n            },\n            Ci: {\n                'Math2.factorial': Math2.factorial\n            },\n            Ei: {\n                'Math2.factorial': Math2.factorial\n            },\n            Si: {\n                'Math2.factorial': Math2.factorial\n            },\n            Shi: {\n                'Math2.factorial': Math2.factorial\n            },\n            Chi: {\n                'isInt': isInt,\n                'nround': nround,\n                'Math2.num_integrate': Math2.num_integrate\n            },\n            factor: {\n                'Math2.ifactor': Math2.ifactor,\n                'Symbol': Symbol\n            },\n            num_integrate: {\n                'Math2.simpson': Math2.simpson,\n                'nround': nround\n            },\n            fib: {\n                'even': even\n            }\n        },\n        /* Some functions need to be made numeric safe. Build checks if there's a \n         * reformat option and calls that instead when compiling the function string.\n         */\n        reformat: {\n            //this simply extends the build function\n            diff: function(symbol, deps) {\n                var f = 'var f = '+Build.build(symbol.args[0].toString())+';';\n                deps[1] += 'var diff = '+Math2.diff.toString()+';';\n                deps[1] += f;\n\n                return ['diff(f)('+symbol.args[1].toString()+')', deps];\n            }\n        },\n        getProperName: function(f) {\n            var map = {\n                continued_fraction: 'continuedFraction'\n            };\n            return map[f] || f;\n        },\n        //assumes that dependences are at max 2 levels\n        compileDependencies: function(f, deps) {\n            //grab the predefined dependiences\n            var dependencies = Build.dependencies[f];\n\n            //the dependency string\n            var dep_string = deps && deps[1] ? deps[1] : '';\n            \n            //the functions to be replaced\n            var replacements = deps && deps[0] ? deps[0] : {};\n            \n            //loop through them and add them to the list\n            for(var x in dependencies) {\n                if(typeof dependencies[x] === 'object')\n                    continue; //skip object\n                var components = x.split('.'); //Math.f becomes f\n                //if the function isn't part of an object then reference the function itself\n                dep_string += 'var '+(components.length > 1 ? components[1] : components[0])+'='+dependencies[x]+';';\n                replacements[x] = components.pop();\n            }\n            \n            return [replacements, dep_string];\n        },\n        getArgsDeps: function(symbol, dependencies) {\n            var args = symbol.args;\n            for(var i=0; i<args.length; i++) {\n                symbol.args[i].each(function(x) {\n                    if(x.group === FN)\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\n                });\n            }\n            return dependencies;\n        },\n        build: function (symbol, arg_array) {\n            symbol = block('PARSE2NUMBER', function () {\n                return _.parse(symbol);\n            }, true);\n            var args = variables(symbol);\n            var supplements = [];\n            var dependencies = [];\n            var ftext = function (symbol, xports) {\n                xports = xports || [];\n                var c = [],\n                        group = symbol.group,\n                        prefix = '';\n\n                var ftext_complex = function (group) {\n                    var d = group === CB ? '*' : '+',\n                            cc = [];\n\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x],\n                                ft = ftext(sym, xports)[0];\n                        //wrap it in brackets if it's group PL or CP\n                        if (sym.isComposite())\n                            ft = inBrackets(ft);\n                        cc.push(ft);\n                    }\n                    var retval = cc.join(d);\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\n                    return retval;\n                },\n                ftext_function = function (bn) {\n                    var retval;\n                    if (bn in Math)\n                        retval = 'Math.' + bn;\n                    else {\n                        bn = Build.getProperName(bn);\n                        if (supplements.indexOf(bn) === -1) { //make sure you're not adding the function twice\n                            //Math2 functions aren't part of the standard javascript\n                            //Math library and must be exported.\n                            xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\n                            supplements.push(bn);\n                        }\n                        retval = bn;\n                    }\n                    retval = retval + inBrackets(symbol.args.map(function (x) {\n                        return ftext(x, xports)[0];\n                    }).join(','));\n\n                    return retval;\n                };\n                \n                //the multiplier\n                if (group === N)\n                    c.push(symbol.multiplier.toDecimal());\n                else if (symbol.multiplier.equals(-1))\n                    prefix = '-';\n                else if (!symbol.multiplier.equals(1))\n                    c.push(symbol.multiplier.toDecimal());\n                //the value\n                var value;\n\n                if (group === S || group === P)\n                    value = symbol.value;\n                else if (group === FN) {\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\n                    if(Build.reformat[symbol.fname]) {\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\n                        dependencies = components[1];\n                        value = components[0];\n                    }\n                    else {\n                        value =  ftext_function(symbol.fname);\n                    }\n                    \n                }\n                else if (group === EX) {\n                    var pg = symbol.previousGroup;\n                    if (pg === N || pg === S)\n                        value = symbol.value;\n                    else if (pg === FN) {\n                        value = ftext_function(symbol.fname);\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\n                    }\n                    else\n                        value = ftext_complex(symbol.previousGroup);\n                }\n                else {\n                    value = ftext_complex(symbol.group);\n                }\n\n                if (symbol.group !== N && !symbol.power.equals(1)) {\n                    var pow = ftext(_.parse(symbol.power));\n                    xports.push(pow[1]);\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\n                }\n\n                if (value)\n                    c.push(prefix + value);\n\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\n            };\n            if (arg_array) {\n                for (var i = 0; i < args.length; i++) {\n                    var arg = args[i];\n                    if (arg_array.indexOf(arg) === -1)\n                        err(arg + ' not found in argument array');\n                }\n                args = arg_array;\n            }\n\n            var f_array = ftext(symbol);\n            \n            //make all the substitutions;\n            for(var x in dependencies[0]) {\n                var alias = dependencies[0][x];\n                f_array[1] = f_array[1].replace(x, alias);\n                dependencies[1] = dependencies[1].replace(x, alias);\n            }\n\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\n            \n            return f;\n        }\n    };\n    \n    \n//finalize =====================================================================\n    /* FINALIZE */\n    (function () {\n        reserveNames(_.CONSTANTS);\n        reserveNames(_.functions);\n        _.initConstants();\n        //bug fix for error but needs to be revisited\n        if (!_.error)\n            _.error = err;\n        \n        //Store the log and log10 functions\n        Settings.LOG_FNS = {\n            log: _.functions['log'],\n            log10: _.functions['log10']\n        };\n        \n    })();\n    \n    /* END FINALIZE */\n\n//Core =========================================================================\n    var Utils = {\n        allSame: allSame,\n        allNumeric: allNumeric,\n        arguments2Array: arguments2Array,\n        arrayAddSlices: arrayAddSlices,\n        arrayClone: arrayClone,\n        arrayMax: arrayMax,\n        arrayMin: arrayMin,\n        arrayUnique: arrayUnique,\n        arraySum: arraySum,\n        block: block,\n        build: Build.build,\n        clearU: clearU,\n        comboSort: comboSort,\n        compare: compare,\n        convertToVector: convertToVector,\n        customError: customError,\n        customType: customType,\n        decompose_fn: decompose_fn,\n        each: each,\n        evaluate: evaluate,\n        even: even,\n        evenFraction: evenFraction,\n        fillHoles: fillHoles,\n        firstObject: firstObject,\n        format: format,\n        generatePrimes: generatePrimes,\n        getCoeffs: getCoeffs,\n        getU: getU,\n        importFunctions: importFunctions,\n        inBrackets: inBrackets,\n        isArray: isArray,\n        isExpression: isExpression,\n        isFraction: isFraction,\n        isInt: isInt,\n        isMatrix: isMatrix,\n        isNegative: isNegative,\n        isNumericSymbol: isNumericSymbol,\n        isPrime: isPrime,\n        isReserved: isReserved,\n        isSymbol: isSymbol,\n        isVariableSymbol: isVariableSymbol,\n        isVector: isVector,\n        keys: keys,\n        nroots: nroots,\n        remove: remove,\n        reserveNames: reserveNames,\n        range: range,\n        round: nround,\n        sameSign: sameSign,\n        scientificToDecimal: scientificToDecimal,\n        separate: separate,\n        stringReplace: stringReplace,\n        text: text,\n        validateName: validateName,\n        variables: variables,\n        warn: warn\n    };\n\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\n    //to be used.\n    var C = {\n        groups: Groups,\n        Symbol: Symbol,\n        Expression: Expression,\n        Frac: Frac,\n        Vector: Vector,\n        Matrix: Matrix,\n        Parser: Parser,\n        Fraction: Fraction,\n        Math2: Math2,\n        LaTeX: LaTeX,\n        Utils: Utils,\n        PARSER: _,\n        PARENTHESIS: PARENTHESIS,\n        Settings: Settings,\n        err: err,\n        bigInt: bigInt,\n        exceptions: exceptions\n    };\n\n//libExports ===================================================================  \n    /**\n     * \n     * @param {String} expression the expression to be evaluated\n     * @param {Object} subs the object containing the variable values\n     * @param {Integer} location a specific location in the equation list to \n     * insert the evaluated expression\n     * @param {String} option additional options\n     * @returns {Expression} \n     */\n    var libExports = function (expression, subs, option, location) {\n        //is the user declaring a function?\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\n        if (fndec)\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\n\n        //var variable, fn, args;\n        //convert any expression passed in to a string\n        if (expression instanceof Expression)\n            expression = expression.toString();\n\n        var multi_options = isArray(option),\n                expand = 'expand',\n                numer = multi_options ? option.indexOf('numer') !== -1 : option === 'numer';\n        if ((multi_options ? option.indexOf(expand) !== -1 : option === expand)) {\n            expression = format('{0}({1})', expand, expression);\n        }\n        var e = block('PARSE2NUMBER', function () {\n            return _.parse(expression, subs);\n        }, numer || Settings.PARSE2NUMBER);\n\n        if (location) {\n            EXPRESSIONS[location - 1] = e;\n        }\n        else {\n            EXPRESSIONS.push(e);\n        }\n\n        /*\n         if(variable) libExports.setVar(variable, e);\n         if(fn) libExports.setFunction(fn, args, e);\n         */\n\n        return new Expression(e);\n    };\n    /**\n     * Converts expression into rpn form\n     * @param {String} expression\n     * @returns {Token[]}\n     */\n    libExports.rpn = function (expression) {\n        return _.tokenize(_.toRPN(expression));\n    };\n\n    /**\n     * Generates LaTeX from expression string\n     * @param {String} e\n     * @param {object} opt\n     * @returns {String}\n     */\n    libExports.convertToLaTeX = function (e, opt) {\n        return _.toTeX(e, opt);\n    };\n\n    /**\n     * Converts latex to text - Very very very basic at the moment\n     * @param {String} e\n     * @returns {String}\n     */\n    libExports.convertFromLaTeX = function (e) {\n        var txt = LaTeX.parse(_.tokenize(e));\n        return new Expression(_.parse(txt));\n    };\n\n    /**\n     * Get the version of nerdamer or a loaded add-on\n     * @param {String} add_on - The add-on being checked\n     * @returns {String} returns the version of nerdamer\n     */\n    libExports.version = function (add_on) {\n        if (add_on) {\n            try {\n                return C[add_on].version;\n            }\n            catch (e) {\n                return \"No module named \" + add_on + \" found!\";\n            }\n        }\n        return version;\n    };\n\n    /**\n     * Get nerdamer generated warnings\n     * @returns {String[]}\n     */\n    libExports.getWarnings = function () {\n        return WARNINGS;\n    };\n\n    /**\n     * \n     * @param {String} constant The name of the constant to be set\n     * @param {mixed} value The value of the constant \n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setConstant = function (constant, value) {\n        validateName(constant);\n        if (!isReserved(constant)) {\n            //fix for issue #127\n            if (value === 'delete' || value === '') {\n                delete _.CONSTANTS[constant];\n            }\n            else {\n                if (isNaN(value))\n                    throw new NerdamerTypeError('Constant must be a number!');\n                _.CONSTANTS[constant] = value;\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a previously set constant\n     * @param {type} constant\n     * @returns {String}\n     */\n    libExports.getConstant = function (constant) {\n        return String(_.constant[constant]);\n    };\n\n    /**\n     * \n     * @param {String} name The name of the function\n     * @param {Array} params_array A list containing the parameter name of the functions\n     * @param {String} body The body of the function\n     * @returns {Boolean} returns true if succeeded and falls on fail\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\n     */\n    libExports.setFunction = setFunction;\n\n    /**\n     * \n     * @returns {C} Exports the nerdamer core functions and objects\n     */\n    libExports.getCore = function () {\n        return C;\n    };\n\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\n\n    /**\n     * \n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\n     * @returns {String|Array}\n     */\n    libExports.reserved = function (asArray) {\n        if (asArray) {\n            return RESERVED;\n        }\n        return RESERVED.join(', ');\n    };\n\n    /**\n     * \n     * @param {Integer} equation_number the number of the equation to clear. \n     * If 'all' is supplied then all equations are cleared\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\n        if (equation_number === 'all') {\n            EXPRESSIONS = [];\n        }\n        else if (equation_number === 'last') {\n            EXPRESSIONS.pop();\n        }\n        else if (equation_number === 'first') {\n            EXPRESSIONS.shift();\n        }\n        else {\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\n        }\n        return this;\n    };\n\n    /**\n     * Alias for nerdamer.clear('all')\n     */\n    libExports.flush = function () {\n        this.clear('all');\n        return this;\n    };\n\n    /**\n     * \n     * @param {Boolean} asObject\n     * @param {Boolean} asLaTeX\n     * @param {String|String[]} option \n     * @returns {Array}\n     */\n    libExports.expressions = function (asObject, asLaTeX, option) {\n        var result = asObject ? {} : [];\n        for (var i = 0; i < EXPRESSIONS.length; i++) {\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\n            asObject ? result[i + 1] = eq : result.push(eq);\n        }\n        return result;\n    };\n\n    //the method for registering modules\n    libExports.register = function (obj) {\n        var core = this.getCore();\n\n        if (isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj)\n                    this.register(obj[i]);\n            }\n        }\n        else if (obj && Settings.exclude.indexOf(obj.name) === -1) {\n            //make sure all the dependencies are available\n            if (obj.dependencies) {\n                for (var i = 0; i < obj.dependencies.length; i++)\n                    if (!core[obj.dependencies[i]])\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\n            }\n            //if no parent object is provided then the function does not have an address and cannot be called directly\n            var parent_obj = obj.parent,\n                    fn = obj.build.call(core); //call constructor to get function\n            if (parent_obj) {\n                if (!core[parent_obj])\n                    core[obj.parent] = {};\n\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\n                //attach the function to the core\n                ref_obj[obj.name] = fn;\n            }\n            if (obj.visible)\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\n\n        }\n    };\n\n    /**\n     * @param {String} name variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validateName = validateName;\n\n    /**\n     * @param {String} varname variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validVarName = function (varname) {\n        try {\n            validateName(varname);\n            return RESERVED.indexOf(varname) === -1;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n\n    /**\n     * \n     * @returns {Array} Array of functions currently supported by nerdamer\n     */\n    libExports.supported = function () {\n        return keys(_.functions);\n    };\n\n    /**\n     * \n     * @returns {Number} The number equations/expressions currently loaded\n     */\n    libExports.numEquations = libExports.numExpressions = function () {\n        return EXPRESSIONS.length;\n    };\n    /* END EXPORTS */\n\n    /**\n     * \n     * @param {String} v variable to be set\n     * @param {String} val value of variable. This can be a variable expression or number\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setVar = function (v, val) {\n        validateName(v);\n        //check if it's not already a constant\n        if (v in _.CONSTANTS)\n            err('Cannot set value for constant ' + v);\n        if (val === 'delete' || val === '')\n            delete VARS[v];\n        else {\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a set variable\n     * @param {type} v\n     * @returns {varies}\n     */\n    libExports.getVar = function (v) {\n        return VARS[v];\n    };\n    /**\n     * Clear the variables from the VARS object\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clearVars = function () {\n        VARS = {};\n        return this;\n    };\n\n    /**\n     * \n     * @param {Function} loader\n     * @returns {nerdamer}\n     */\n    libExports.load = function (loader) {\n        loader.call(this);\n        return this;\n    };\n\n    /**\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\n     * @param {String|String[]} option\n     * @returns {Object} Returns an object with the variables\n     */\n    libExports.getVars = function (output, option) {\n        output = output || 'text';\n        var variables = {};\n        if (output === 'object')\n            variables = VARS;\n        else {\n            for (var v in VARS) {\n                if (output === 'latex') {\n                    variables[v] = VARS[v].latex(option);\n                }\n                else if (output === 'text') {\n                    variables[v] = VARS[v].text(option);\n                }\n            }\n        }\n        return variables;\n    };\n\n    /**\n     * Set the value of a setting\n     * @param {String} setting The setting to be changed\n     * @param {boolean} value \n     */\n    libExports.set = function (setting, value) {\n        //current options:\n        //PARSE2NUMBER, suppress_errors\n        if (typeof setting === 'object')\n            for (var x in setting) {\n                libExports.set(x, setting[x]);\n            }\n\n        var disallowed = ['SAFE'];\n        if (disallowed.indexOf(setting) !== -1)\n            err('Cannot modify setting: ' + setting);\n\n        if (setting === 'PRECISION')\n            bigDec.set({precision: value});\n        else if(setting === 'USE_LN' && value === true) {\n            //set log as LN\n            Settings.LOG = 'LN';\n            //set log10 as log\n            Settings.LOG10 = 'log';\n            //point the functions in the right direction\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\n            //the log10 function must be explicitly set\n            _.functions['log'][0] = function(x) {\n                if(x.isConstant())\n                    return new Symbol(Math.log10(x));\n                return _.symfunction(Settings.LOG10, [x]);\n            };\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\n            \n            //remove log10\n            delete _.functions['log10'];\n        }\n        else\n            Settings[setting] = value;\n    };\n\n    /**\n     * Get the value of a setting\n     * @param {type} setting\n     * @returns {undefined}\n     */\n    libExports.get = function (setting) {\n        return Settings[setting];\n    };\n\n    /**\n     * This functions makes internal functions available externally\n     * @param {bool} override Override the functions when calling api if it exists \n     */\n    libExports.api = function (override) {\n        //Map internal functions to external ones\n        var linker = function (fname) {\n            return function () {\n                var args = [].slice.call(arguments);\n                for (var i = 0; i < args.length; i++)\n                    args[i] = _.parse(args[i]);\n                return new Expression(block('PARSE2NUMBER', function () {\n                    return _.callfunction(fname, args);\n                }));\n            };\n        };\n        //perform the mapping\n        for (var x in _.functions)\n            if (!(x in libExports) || override)\n                libExports[x] = linker(x);\n    };\n\n    libExports.replaceFunction = function (name, fn, num_args) {\n        var existing = _.functions[name];\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\n    };\n\n    libExports.setOperator = function (operator, shift) {\n        _.setOperator(operator, shift);\n    };\n    \n    libExports.getOperator = function(operator) {\n        return _.getOperator(operator);\n    };\n\n    libExports.aliasOperator = function(operator, withOperator) {\n        _.aliasOperator(operator, withOperator);\n    };\n\n    libExports.tree = function (expression) {\n        return _.tree(_.toRPN(_.tokenize(expression)));\n    };\n\n    libExports.htmlTree = function (expression, indent) {\n        var tree = this.tree(expression);\n\n        return '<div class=\"tree\">\\n' +\n                '    <ul>\\n' +\n                '        <li>\\n' +\n                tree.toHTML(3, indent) + '\\n' +\n                '        </li>\\n' +\n                '    </ul>\\n' +\n                '</div>';\n    };\n    \n    libExports.addPeeker = function(name, f) {\n        if(_.peekers[name])\n            _.peekers[name].push(f);\n    };\n    \n    libExports.removePeeker = function(name, f) {\n        remove(_.peekers[name], f);\n    };\n    \n    libExports.parse = function(e) {\n        return String(e).split(';').map(function(x) {\n            return _.parse(x);\n        });\n    };\n\n    libExports.api();\n\n    return libExports; //Done\n//imports ======================================================================\n})({\n    //https://github.com/peterolson/BigInteger.js\n    bigInt: (function(){\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\n        return bigInt;\n    })(),\n    /* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n    bigDec: function(n){\"use strict\";var e,i,t,r=9e15,s=1e9,o=\"0123456789abcdef\",u=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",c=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",f={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-r,maxE:r,crypto:!1},h=!0,a=\"[DecimalError] \",d=a+\"Invalid argument: \",l=a+\"Precision limit exceeded\",p=a+\"crypto unavailable\",g=Math.floor,w=Math.pow,m=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,v=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,N=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,E=1e7,x=7,M=u.length-1,y=c.length-1,q={name:\"[object Decimal]\"};function O(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=x-t.length)&&(s+=S(i)),s+=t;o=n[e],(i=x-(t=o+\"\").length)&&(s+=S(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(d+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=x,r=0):(r=Math.ceil((e+1)/x),e%=x),s=w(10,x-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function D(n,e,i){for(var t,r,s=[0],u=0,c=n.length;u<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=o.indexOf(n.charAt(u++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}q.absoluteValue=q.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},q.ceil=function(){return P(new this.constructor(this),this.e+1,2)},q.comparedTo=q.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},q.cosine=q.cos=function(){var n,e,i=this,r=i.constructor;return i.d?i.d[0]?(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=Math.pow(4,-i).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=W(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(r,J(r,i)),r.precision=n,r.rounding=e,P(2==t||3==t?i.neg():i,n,e,!0)):new r(1):new r(NaN)},q.cubeRoot=q.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*Math.pow(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=O(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=Math.pow(i,1/3),n=g((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),O(u.d).slice(0,o)===(i=O(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},q.decimalPlaces=q.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-g(this.e/x))*x,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},q.dividedBy=q.div=function(n){return Z(this,new this.constructor(n))},q.dividedToIntegerBy=q.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},q.equals=q.eq=function(n){return 0===this.cmp(n)},q.floor=function(){return P(new this.constructor(this),this.e+1,3)},q.greaterThan=q.gt=function(n){return this.cmp(n)>0},q.greaterThanOrEqualTo=q.gte=function(n){var e=this.cmp(n);return 1==e||0===e},q.hyperbolicCosine=q.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?(n=Math.ceil(r/3),e=Math.pow(4,-n).toString()):(n=16,e=\"2.3283064365386962890625e-10\"),s=W(o,1,s.times(e),new o(1),!0);for(var c,f=n,h=new o(8);f--;)c=s.times(s),s=u.minus(c.times(h.minus(c.times(h))));return P(s,o.precision=i,o.rounding=t,!0)},q.hyperbolicSine=q.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=W(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=W(s,2,r=r.times(Math.pow(5,-n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},q.hyperbolicTangent=q.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},q.inverseCosine=q.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?_(i,r,s):new i(0):new i(NaN):e.isZero()?_(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=_(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},q.inverseHyperbolicCosine=q.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},q.inverseHyperbolicSine=q.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},q.inverseHyperbolicTangent=q.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},q.inverseSine=q.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=_(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},q.inverseTangent=q.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=y)return(o=_(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=y)return(o=_(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/x+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/x),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},q.isFinite=function(){return!!this.d},q.isInteger=q.isInt=function(){return!!this.d&&g(this.e/x)>this.d.length-2},q.isNaN=function(){return!this.s},q.isNegative=q.isNeg=function(){return this.s<0},q.isPositive=q.isPos=function(){return this.s>0},q.isZero=function(){return!!this.d&&0===this.d[0]},q.lessThan=q.lt=function(n){return this.cmp(n)<0},q.lessThanOrEqualTo=q.lte=function(n){return this.cmp(n)<1},q.logarithm=q.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=B(this,u=a+5),t=e?U(f,u+10):B(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=B(this,u+=10),t=e?U(f,u+10):B(n,u),c=Z(o,t,u,1),!s){+O(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},q.minus=q.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=w.precision,c=w.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new w(3===c?-0:0);n=new w(p)}return h?P(n,u,c):n}if(i=g(n.e/x),a=g(p.e/x),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/x),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=E-1;--f[r],f[t]+=E}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new w(3===c?-0:0)},q.modulo=q.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},q.naturalExponential=q.exp=function(){return H(this)},q.naturalLogarithm=q.ln=function(){return B(this)},q.negated=q.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},q.plus=q.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=g(d.e/x),t=g(n.e/x),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/x))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/E|0,f[r]%=E;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},q.precision=q.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(d+n);return i.d?(e=k(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},q.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},q.sine=q.sin=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return W(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(Math.pow(5,-i)),e=W(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(r,J(r,i)),r.precision=n,r.rounding=e,P(t>2?i.neg():i,n,e,!0)):new r(NaN)},q.squareRoot=q.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=O(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=g((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"1e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),O(s.d).slice(0,i)===(e=O(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},q.tangent=q.tan=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+10,r.rounding=1,(i=i.sin()).s=1,i=Z(i,new r(1).minus(i.times(i)).sqrt(),n+10,0),r.precision=n,r.rounding=e,P(2==t||4==t?i.neg():i,n,e,!0)):new r(NaN)},q.times=q.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=g(a.e/x)+g(n.e/x),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%E|0,e=u/E|0;s[r]=(s[r]+e)%E|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},q.toBinary=function(n,e){return z(this,2,n,e)},q.toDecimalPlaces=q.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,s),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},q.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toFixed=function(n,e){var i,t,r=this,o=r.constructor;return void 0===n?i=R(r):(F(n,0,s),void 0===e?e=o.rounding:F(e,0,8),i=R(t=P(new o(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},q.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,l,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=k(m)-g.e-1)%x,e.d[0]=w(10,o<0?x+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(d+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(O(m)),a=v.precision,v.precision=s=m.length*x*2;l=Z(u,e,0,1,1),1!=(r=i.plus(l.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(l.times(r)),c=r,r=e,e=u.minus(l.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},q.toHexadecimal=q.toHex=function(n,e){return z(this,16,n,e)},q.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},q.toNumber=function(){return+this},q.toOctal=function(n,e){return z(this,8,n,e)},q.toPower=q.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=g(n.e/x))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=T(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:g(f*(Math.log(\"0.\"+O(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=H(n.times(B(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+O((r=P(H(n.times(B(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},q.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toSignificantDigits=q.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,s),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},q.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},q.truncated=q.trunc=function(){return P(new this.constructor(this),this.e+1,1)},q.valueOf=q.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var h,a,d,l,p,w,m,v,N,b,M,y,q,O,F,A,D,Z,R,L,U=r.constructor,_=r.s==s.s?1:-1,k=r.d,S=s.d;if(!(k&&k[0]&&S&&S[0]))return new U(r.s&&s.s&&(k?!S||k[0]!=S[0]:S)?k&&0==k[0]||!S?0*_:_/0:NaN);for(f?(p=1,a=r.e-s.e):(f=E,p=x,a=g(r.e/p)-g(s.e/p)),R=S.length,D=k.length,b=(N=new U(_)).d=[],d=0;S[d]==(k[d]||0);d++);if(S[d]>(k[d]||0)&&a--,null==o?(O=o=U.precision,u=U.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),w=!0;else{if(O=O/p+2|0,d=0,1==R){for(l=0,S=S[0],O++;(d<D||l)&&O--;d++)F=l*f+(k[d]||0),b[d]=F/S|0,l=F%S|0;w=l||d<D}else{for((l=f/(S[0]+1)|0)>1&&(S=n(S,l,f),k=n(k,l,f),R=S.length,D=k.length),A=R,y=(M=k.slice(0,R)).length;y<R;)M[y++]=0;(L=S.slice()).unshift(0),Z=S[0],S[1]>=f/2&&++Z;do{l=0,(h=e(S,M,R,y))<0?(q=M[0],R!=y&&(q=q*f+(M[1]||0)),(l=q/Z|0)>1?(l>=f&&(l=f-1),1==(h=e(m=n(S,l,f),M,v=m.length,y=M.length))&&(l--,t(m,R<v?L:S,v,f))):(0==l&&(h=l=1),m=S.slice()),(v=m.length)<y&&m.unshift(0),t(M,m,y,f),-1==h&&(h=e(S,M,R,y=M.length))<1&&(l++,t(M,R<y?L:S,y,f)),y=M.length):0===h&&(l++,M=[0]),b[d++]=l,h&&M[0]?M[y++]=k[A]||0:(M=[k[A]],y=1)}while((A++<D||void 0!==M[0])&&O--);w=void 0!==M[0]}b[0]||b.shift()}if(1==p)N.e=a,i=w;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+a*p-1,P(N,c?o+N.e+1:o,u,w)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=x,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/x))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=x)-x+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=x)-x+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(x-e%x)%x),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,x-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==E&&(d[0]=1));break}if(d[l]+=u,d[l]!=E)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return V(n);var t,r=n.e,s=O(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+S(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+S(-r-1)+s,i&&(t=i-o)>0&&(s+=S(t))):r>=o?(s+=S(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+S(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=S(t))),s}function L(n,e){var i=n[0];for(e*=x;i>=10;i/=10)e++;return e}function U(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(l);return P(new n(u),e,1,!0)}function _(n,e,i){if(e>y)throw Error(l);return P(new n(c),e,i,!0)}function k(n){var e=n.length-1,i=e*x+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function S(n){for(var e=\"\";n--;)e+=\"0\";return e}function T(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/x+4);for(h=!1;;){if(i%2&&G((s=s.times(e)).d,o)&&(r=!0),0===(i=g(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}G((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function C(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function H(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),O((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===O(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function B(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,w=g.d,m=g.constructor,v=m.rounding,N=m.precision;if(g.s<0||!w||!w[0]||!g.e&&1==w[0]&&1==w.length)return new m(w&&!w[0]?-1/0:1!=g.s?NaN:w?0:g);if(null==e?(h=!1,a=N):a=e,m.precision=a+=10,t=(i=O(w)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=U(m,a+2,N).times(s+\"\"),g=B(new m(t+\".\"+i.slice(1)),a-10).plus(f),m.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=O((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new m(\"0.\"+i),s++):g=new m(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),O((f=c.plus(Z(o,new m(r),a,1))).d).slice(0,a)===O(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(U(m,a+2,N).times(s+\"\"))),c=Z(c,new m(p),a,1),null!=e)return m.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,m.precision=N,v,h=!0);m.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function V(n){return String(n.s*n.s/0)}function j(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%x,i<0&&(t+=x),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=x;t<r;)n.d.push(+e.slice(t,t+=x));e=e.slice(t),t=x-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function $(n,i){var t,r,s,o,u,c,f,a,l;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(v.test(i))t=16,i=i.toLowerCase();else if(m.test(i))t=2;else{if(!N.test(i))throw Error(d+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=T(r,new r(t),o,2*o)),o=l=(a=D(i,t,E)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,l),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?Math.pow(2,f):e.pow(2,f))),h=!0,n)}function W(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/x);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function J(n,e){var i,r=e.s<0,s=_(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return t=r?4:1,e;if((i=e.divToInt(s)).isZero())t=r?3:2;else{if((e=e.minus(i.times(s))).lte(o))return t=I(i)?r?2:3:r?4:1,e;t=I(i)?r?1:4:r?3:2}return e.minus(s).abs()}function z(n,e,t,r){var u,c,f,h,a,d,l,p,g,w=n.constructor,m=void 0!==t;if(m?(F(t,1,s),void 0===r?r=w.rounding:F(r,0,8)):(t=w.precision,r=w.rounding),n.isFinite()){for(m?(u=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):u=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new w(1)).e=l.length-f,g.d=D(R(g),10,u),g.e=g.d.length),c=a=(p=D(l,10,u)).length;0==p[--a];)p.pop();if(p[0]){if(f<0?c--:((n=new w(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,u)).d,c=n.e,d=i),f=p[t],h=u/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>h||f===h&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>u-1;)p[t]=0,t||(++c,p.unshift(1));for(a=p.length;!p[a-1];--a);for(f=0,l=\"\";f<a;f++)l+=o.charAt(p[f]);if(m){if(a>1)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)l+=\"0\";for(a=(p=D(l,u,e)).length;!p[a-1];--a);for(f=1,l=\"1.\";f<a;f++)l+=o.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>a)for(c-=a;c--;)l+=\"0\";else c<a&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=m?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=V(n);return n.s<0?\"-\"+l:l}function G(n,e){if(n.length>e)return n.length=e,!0}function K(n){return new this(n).abs()}function Q(n){return new this(n).acos()}function X(n){return new this(n).acosh()}function Y(n,e){return new this(n).plus(e)}function nn(n){return new this(n).asin()}function en(n){return new this(n).asinh()}function tn(n){return new this(n).atan()}function rn(n){return new this(n).atanh()}function sn(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?_(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=_(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=_(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=_(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function on(n){return new this(n).cbrt()}function un(n){return P(n=new this(n),n.e+1,2)}function cn(n){if(!n||\"object\"!=typeof n)throw Error(a+\"Object expected\");var e,i,t,o=!0===n.defaults,u=[\"precision\",1,s,\"rounding\",0,8,\"toExpNeg\",-r,0,\"toExpPos\",0,r,\"maxE\",0,r,\"minE\",-r,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!(g(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(d+i+\": \"+t);this[i]=t}if(i=\"crypto\",o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(d+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[i]=!0}else this[i]=!1}return this}function fn(n){return new this(n).cos()}function hn(n){return new this(n).cosh()}function an(n,e){return new this(n).div(e)}function dn(n){return new this(n).exp()}function ln(n){return P(n=new this(n),n.e+1,3)}function pn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function gn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function wn(n){return new this(n).ln()}function mn(n,e){return new this(n).log(e)}function vn(n){return new this(n).log(2)}function Nn(n){return new this(n).log(10)}function bn(){return C(this,arguments,\"lt\")}function En(){return C(this,arguments,\"gt\")}function xn(n,e){return new this(n).mod(e)}function Mn(n,e){return new this(n).mul(e)}function yn(n,e){return new this(n).pow(e)}function qn(n){var e,i,t,r,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,s),t=Math.ceil(n/x),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));o<t;)(r=e[o])>=429e7?e[o]=crypto.getRandomValues(new Uint32Array(1))[0]:c[o++]=r%1e7;else{if(!crypto.randomBytes)throw Error(p);for(e=crypto.randomBytes(t*=4);o<t;)(r=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,o):(c.push(r%1e7),o+=4);o=t/4}else for(;o<t;)c[o++]=1e7*Math.random()|0;for(t=c[--o],n%=x,t&&n&&(r=w(10,x-n),c[o]=(t/r|0)*r);0===c[o];o--)c.pop();if(o<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=x)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<x&&(i-=x-t)}return u.e=i,u.d=c,u}function On(n){return P(n=new this(n),n.e+1,this.rounding)}function Fn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function An(n){return new this(n).sin()}function Dn(n){return new this(n).sinh()}function Zn(n){return new this(n).sqrt()}function Pn(n,e){return new this(n).sub(e)}function Rn(n){return new this(n).tan()}function Ln(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):j(r,n.toString())}if(\"string\"!==t)throw Error(d+n);return 45===n.charCodeAt(0)?(n=n.slice(1),r.s=-1):r.s=1,b.test(n)?j(r,n):$(r,n)}if(s.prototype=q,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=cn,s.clone=n,s.isDecimal=gn,s.abs=K,s.acos=Q,s.acosh=X,s.add=Y,s.asin=nn,s.asinh=en,s.atan=tn,s.atanh=rn,s.atan2=sn,s.cbrt=on,s.ceil=un,s.cos=fn,s.cosh=hn,s.div=an,s.exp=dn,s.floor=ln,s.hypot=pn,s.ln=wn,s.log=mn,s.log10=Nn,s.log2=vn,s.max=bn,s.min=En,s.mod=xn,s.mul=Mn,s.pow=yn,s.random=qn,s.round=On,s.sign=Fn,s.sin=An,s.sinh=Dn,s.sqrt=Zn,s.sub=Pn,s.tan=Rn,s.tanh=Ln,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(f)).default=e.Decimal=e,u=new e(u),c=new e(c),e}()\n//    bigDec: require('decimal.js')\n});\n\nif ((typeof module) !== 'undefined') {\n    module.exports = nerdamer;\n};\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/function-bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/engine-is-ios');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","module.exports = {};\n","/* global module */\r\n\r\n/*\r\n* Author : Martin Donk\r\n* Website : http://www.nerdamer.com\r\n* Email : martin.r.donk@gmail.com\r\n* Source : https://github.com/jiggzson/nerdamer\r\n*/\r\n\r\nif((typeof module) !== 'undefined' && typeof nerdamer === 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Algebra.js');\r\n}\r\n\r\n(function() {\r\n    \"use strict\";\r\n    \r\n    var core = nerdamer.getCore(),\r\n        _ = core.PARSER,\r\n        Frac = core.Frac,\r\n        Settings = core.Settings,\r\n        isSymbol = core.Utils.isSymbol,\r\n        FN = core.groups.FN,\r\n        Symbol = core.Symbol,\r\n        text = core.Utils.text,\r\n        inBrackets = core.Utils.inBrackets,\r\n        isInt = core.Utils.isInt,\r\n        format = core.Utils.format,\r\n        even = core.Utils.even,\r\n        evaluate = core.Utils.evaluate,\r\n        N = core.groups. N,\r\n        S = core.groups.S,\r\n        FN = core.groups.FN,\r\n        PL = core.groups.PL,\r\n        CP = core.groups.CP,\r\n        CB = core.groups.CB,\r\n        EX = core.groups.EX,\r\n        P = core.groups.P,\r\n        LOG = Settings.LOG, \r\n        EXP = 'exp', \r\n        ABS = 'abs', \r\n        SQRT = 'sqrt',\r\n        SIN = 'sin',  \r\n        COS = 'cos', \r\n        TAN = 'tan',\r\n        SEC = 'sec', \r\n        CSC = 'csc', \r\n        COT = 'cot',\r\n        ASIN = 'asin', \r\n        ACOS = 'acos', \r\n        ATAN = 'atan',\r\n        ASEC = 'asec', \r\n        ACSC = 'acsc', \r\n        ACOT = 'acot',\r\n        SINH = 'sinh',   \r\n        COSH = 'cosh',\r\n        TANH = 'tanh',\r\n        CSCH = 'csch',\r\n        SECH = 'sech',\r\n        COTH = 'coth',\r\n        ASECH = 'asech',\r\n        ACSCH = 'acsch',\r\n        ACOTH = 'acoth';\r\n        \r\n        \r\n    //custom errors\r\n    function NoIntegralFound(msg){\r\n        this.message = msg || \"\";\r\n    }\r\n    NoIntegralFound.prototype = new Error();\r\n    \r\n    //Preparations\r\n    Symbol.prototype.hasIntegral = function() {\r\n        return this.containsFunction('integrate');\r\n    };\r\n    //transforms a function\r\n    Symbol.prototype.fnTransform = function() { \r\n        if(this.group !== FN)\r\n            return this;\r\n        var retval, a = this.args[0];\r\n        var m = new Symbol(this.multiplier);\r\n        var sym = this.clone().toUnitMultiplier();\r\n        if(this.isLinear()) {\r\n            switch(this.fname) {\r\n                case SINH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('(e^({0})+e^(-({0})))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))', a));\r\n                    break;\r\n                case TAN:\r\n                    retval = _.parse(format('sin({0})/cos({0})', a));\r\n                    break;\r\n                case CSC:\r\n                    retval = _.parse(format('1/sin({0})', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('1/cos({0})', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.power.equals(2)) {\r\n            switch(this.fname) {\r\n                case SIN:\r\n                    retval = _.parse(format('1/2-cos(2*({0}))/2', a));\r\n                    break;\r\n                case COS:\r\n                    retval = _.parse(format('1/2+cos(2*({0}))/2', a));\r\n                    break;\r\n                case TAN:\r\n                    //retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))', a));\r\n                    retval = _.parse(format('sin({0})^2/cos({0})^2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case SINH:\r\n                    retval = _.parse(format('-1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.fname === SEC) {\r\n            retval = _.parse(format('1/cos({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === CSC) {\r\n            retval = _.parse(format('1/sin({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === TAN) {\r\n            if(this.power.lessThan(0)) {\r\n                retval = _.parse(format('cos({0})^(-({1}))/sin({0})^({1})', this.args[0], this.power.negate()));\r\n            }\r\n            else {\r\n                retval = _.parse(format('sin({0})^({1})/cos({0})^({1})', this.args[0], this.power));\r\n            }\r\n        }\r\n        else if(this.fname === SIN && this.power.lessThan(0)) {\r\n            retval = _.parse(format('csc({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === COS && this.power.lessThan(0)) {\r\n            retval = _.parse(format('sec({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === SIN && this.power.equals(3)) {\r\n            retval = _.parse(format('(3*sin({0})-sin(3*({0})))/4', this.args[0]));\r\n        }\r\n        else if(this.fname === COS && this.power.equals(3)) {\r\n            retval = _.parse(format('(cos(3*({0}))+3*cos({0}))/4', this.args[0]));\r\n        }\r\n        else\r\n            retval = sym;\r\n        \r\n        return _.multiply(retval, m);\r\n    };\r\n\r\n    core.Expression.prototype.hasIntegral = function() {\r\n        return this.symbol.hasIntegral();\r\n    };\r\n    /**\r\n     * Attempts to rewrite a symbol under one common denominator\r\n     * @param {Symbol} symbol \r\n     */\r\n    core.Utils.toCommonDenominator = function(symbol) {\r\n        //transform x/a+x -> (ax+x)/a\r\n        if(symbol.isComposite() && symbol.isLinear()) {\r\n            var m = new Symbol(symbol.multiplier);\r\n            var denominator = new Symbol(1);\r\n            var numerator = new Symbol(0);\r\n            symbol.each(function(x) {\r\n                denominator = _.multiply(denominator, x.getDenom());\r\n            }, true);\r\n\r\n            //remove the denomitor in each term\r\n            symbol.each(function(x) {\r\n                var num = x.getNum();\r\n                var den = x.getDenom();\r\n                var factor = _.multiply(num, _.divide(denominator.clone(), den));\r\n                numerator = _.add(numerator, factor);\r\n            });\r\n            var retval = _.multiply(m, core.Algebra.divide(_.expand(numerator), _.expand(denominator)));\r\n            return retval;\r\n        }\r\n        return symbol;\r\n    };\r\n    //A function to check if a function name is an inverse trig function\r\n    core.Utils.in_inverse_trig = function(x) {\r\n        var inv_trig_fns = [ASIN, ACOS, ATAN,   ACSC, ASEC, ACOT];\r\n        return inv_trig_fns.indexOf(x) !== -1;\r\n    };\r\n    //A function to check if a function name is a trig function\r\n    core.Utils.in_trig = function(x) {\r\n        var trig_fns = [COS, SIN, TAN, SEC, CSC, COT];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n    \r\n    core.Utils.in_htrig = function(x) {\r\n        var trig_fns = [SINH, COSH, TANH, ACSCH, ASECH, ACOTH];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n    \r\n    var all_functions = core.Utils.all_functions = function(arr) {\r\n        for(var i=0, l=arr.length; i<l; i++)\r\n            if(arr[i].group !== FN)\r\n                return false;\r\n        return true;\r\n    },\r\n    cosAsinBtransform = core.Utils.cosAsinBtranform = function(symbol1, symbol2) {\r\n        var a, b;\r\n        a = symbol1.args[0];\r\n        b = symbol2.args[0];\r\n        return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2', a, b));\r\n    },\r\n    cosAsinAtransform = core.Utils.cosAsinAtranform = function(symbol1, symbol2) {\r\n        //TODO: temporary fix for integrate(e^x*sin(x)*cos(x)^2).\r\n        //we technically know how to do this transform but more is needed for correct output\r\n        if(Number(symbol2.power) !== 1)\r\n            return _.multiply(symbol1, symbol2);\r\n        var a;\r\n        a = symbol1.args[0];\r\n        return _.parse(format('(sin(2*({0})))/2', a));\r\n    },\r\n    sinAsinBtransform = core.Utils.cosAsinBtranform = function(symbol1, symbol2) { \r\n        var a, b;\r\n        a = symbol1.args[0];\r\n        b = symbol2.args[0];\r\n        return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2', a, b));\r\n    },\r\n    trigTransform = core.Utils.trigTransform = function(arr) { \r\n        var map = {}, symbol, t,\r\n            retval = new Symbol(1);\r\n        for(var i=0, l=arr.length; i<l; i++) {\r\n            symbol = arr[i]; \r\n            if(symbol.group === FN) {\r\n                var fname = symbol.fname;\r\n                if(fname === COS && map[SIN]) { \r\n                    if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                        t = cosAsinBtransform(symbol, map[SIN]);\r\n                    }\r\n                    else{\r\n                        t = cosAsinAtransform(symbol, map[SIN]);\r\n                    }\r\n                    delete map[SIN];\r\n                    retval = _.multiply(retval, t);\r\n                }\r\n                else if(fname === SIN && map[COS]) { \r\n                    if(map[COS].args[0].toString() !== symbol.args[0].toString()) {\r\n                        t = cosAsinBtransform(symbol, map[COS]);\r\n                    }\r\n                    else {\r\n                        t = cosAsinAtransform(symbol, map[COS]);\r\n                    }\r\n                    delete map[COS];\r\n                    retval = _.multiply(retval, t);\r\n                }\r\n                else if(fname === SIN && map[SIN]) {\r\n                    if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                        t = sinAsinBtransform(symbol, map[SIN]);\r\n                        delete map[SIN];\r\n                    }\r\n                    else {\r\n                        //This should actually be redundant code but let's put just in case\r\n                        t = _.multiply(symbol, map[SIN]);\r\n                        delete map[SIN];\r\n                    }\r\n                         \r\n                    retval = t;\r\n                }\r\n                else\r\n                    map[fname] = symbol;\r\n            }\r\n            else\r\n                retval = _.multiply(retval, symbol);\r\n        }\r\n        \r\n        //put back the remaining functions\r\n        for(var x in map) \r\n            retval = _.multiply(retval, map[x]);\r\n        \r\n        return retval;\r\n\r\n    };\r\n    \r\n    core.Settings.integration_depth = 10;\r\n    \r\n    var __ = core.Calculus = {\r\n\r\n        version: '1.4.5',\r\n\r\n        sum: function(fn, index, start, end) {\r\n            if(!(index.group === core.groups.S)) throw new core.exceptions.NerdamerTypeError('Index must be symbol. '+text(index)+' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                start = Number(start);\r\n                end = Number(end);\r\n                retval = core.Utils.block(modifier, function() {\r\n                    var f = fn.text(),\r\n                        subs = {'~': true}, //lock subs. Is this even being used?\r\n                    retval = new core.Symbol(0);\r\n\r\n                    for(var i=start; i<=end; i++) {\r\n                        subs[index] = new Symbol(i); \r\n                        var ans = _.parse(f, subs);\r\n                        retval = _.add(retval, ans);\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('sum',arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        product: function(fn, index, start, end) {\r\n            if(!(index.group === core.groups.S)) throw new core.exceptions.NerdamerTypeError('Index must be symbol. '+text(index)+' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                retval = core.Utils.block(modifier, function() {\r\n                    start = Number(start);\r\n                    end = Number(end.multiplier);\r\n\r\n                    var f = fn.text(),\r\n                        subs = {},\r\n                        retval = new core.Symbol(1);\r\n\r\n                    for(var i=start; i<=end; i++) {\r\n                        subs[index] = new Symbol(i); \r\n                        retval = _.multiply(retval, _.parse(f, subs));\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('product', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        diff: function(symbol, wrt, nth) { \r\n            if(core.Utils.isVector(symbol)) {\r\n                var vector = new core.Vector([]);\r\n                symbol.each(function(x) {\r\n                    vector.elements.push(__.diff(x, wrt));\r\n                });\r\n                return vector;\r\n            }\r\n\r\n            var d = isSymbol(wrt) ? wrt.text() : wrt; \r\n            //the nth derivative\r\n            nth = isSymbol(nth) ? nth.multiplier : nth || 1;\r\n            \r\n            if(d === undefined) d = core.Utils.variables(symbol)[0];\r\n            \r\n            //unwrap sqrt\r\n            if(symbol.group === FN && symbol.fname === SQRT) {\r\n                var s = symbol.args[0],\r\n                    sp = symbol.power.clone();\r\n                //these groups go to zero anyway so why waste time?\r\n                if(s.group !== N || s.group !== P) {\r\n                    s.power = isSymbol(s.power) ? _.multiply(s.power, _.multiply(new Symbol(1/2)), sp) : s.power.multiply(new Frac(0.5)).multiply(sp);\r\n                    s.multiplier = s.multiplier.multiply(symbol.multiplier);\r\n                }\r\n                    \r\n                symbol = s;\r\n            }\r\n\r\n            if(symbol.group === FN && !isSymbol(symbol.power)) {\r\n                var a = derive(_.parse(symbol)); \r\n                var b = __.diff(symbol.args[0].clone(), d); \r\n                symbol = _.multiply(a, b);//chain rule\r\n            }\r\n            else {\r\n                symbol = derive(symbol);\r\n            }\r\n            \r\n            if(nth > 1) { \r\n                nth--;\r\n                symbol = __.diff(symbol, wrt, nth);\r\n            }\r\n\r\n            return symbol;\r\n  \r\n             // Equivalent to \"derivative of the outside\".\r\n            function polydiff(symbol) {\r\n                if(symbol.value === d || symbol.contains(d, true)) { \r\n                    symbol.multiplier = symbol.multiplier.multiply(symbol.power);\r\n                    symbol.power = symbol.power.subtract(new Frac(1)); \r\n                    if(symbol.power.equals(0)) {\r\n                        symbol = Symbol(symbol.multiplier);\r\n                    }\r\n                } \r\n                \r\n                return symbol;\r\n            };\r\n            function derive(symbol) { \r\n                var g = symbol.group, a, b, cp; \r\n\r\n                if(g === N || g === S && symbol.value !== d || g === P) { \r\n                    symbol = Symbol(0);\r\n                }\r\n                else if(g === S) {  \r\n                    symbol = polydiff(symbol);\r\n                }\r\n                else if(g === CB) { \r\n                    var m = symbol.multiplier.clone();\r\n                    symbol.toUnitMultiplier();\r\n                    var retval =  _.multiply(product_rule(symbol),polydiff(symbol));\r\n                    retval.multiplier = retval.multiplier.multiply(m);\r\n                    return retval;\r\n                }\r\n                else if(g === FN && symbol.power.equals(1)) { \r\n                    // Table of known derivatives\r\n                    switch(symbol.fname) {\r\n                        case LOG:\r\n                            cp = symbol.clone(); \r\n                            symbol = symbol.args[0].clone();//get the arguments\r\n                            symbol.power = symbol.power.negate();\r\n                            symbol.multiplier = cp.multiplier.divide(symbol.multiplier); \r\n                            break;\r\n                        case COS:\r\n                            //cos -> -sin\r\n                            symbol.fname = SIN;\r\n                            symbol.multiplier.negate();\r\n                            break;\r\n                        case SIN: \r\n                            //sin -> cos\r\n                            symbol.fname = COS;\r\n                            break;\r\n                        case TAN:\r\n                            //tan -> sec^2\r\n                            symbol.fname = SEC;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SEC: \r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, TAN);\r\n                            break;\r\n                        case CSC:\r\n                            symbol = qdiff(symbol, '-cot');\r\n                            break;\r\n                        case COT:\r\n                            symbol.fname = CSC;\r\n                            symbol.multiplier.negate();\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case ASIN:\r\n                            symbol = _.parse('(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');\r\n                            break;\r\n                        case ACOS:\r\n                            symbol = _.parse('-(sqrt(1-('+text(symbol.args[0])+')^2))^(-1)');\r\n                            break;\r\n                        case ATAN:\r\n                            symbol = _.parse('(1+('+text(symbol.args[0])+')^2)^(-1)');\r\n                            break;\r\n                        case ABS: \r\n                            m = symbol.multiplier.clone(); \r\n                            symbol.toUnitMultiplier();\r\n                            //depending on the complexity of the symbol it's easier to just parse it into a new symbol\r\n                            //this should really be readdressed soon\r\n                            b = symbol.args[0].clone();\r\n                            b.toUnitMultiplier();\r\n                            symbol = _.parse(inBrackets(text(symbol.args[0]))+'/abs'+inBrackets(text(b)));\r\n                            symbol.multiplier = m;\r\n                            break;\r\n                        case 'parens':\r\n                            //see product rule: f'.g goes to zero since f' will return zero. This way we only get back\r\n                            //1*g'\r\n                            symbol = Symbol(1);\r\n                            break;\r\n                        case 'cosh':\r\n                            //cosh -> -sinh\r\n                            symbol.fname = 'sinh';\r\n                            break;\r\n                        case 'sinh': \r\n                            //sinh -> cosh\r\n                            symbol.fname = 'cosh';\r\n                            break;\r\n                        case TANH:\r\n                            //tanh -> sech^2\r\n                            symbol.fname = SECH;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SECH: \r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, '-tanh');\r\n                            break;\r\n                        case CSCH: \r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-coth('+arg+')*csch('+arg+')');\r\n                            break;\r\n                        case COTH: \r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-csch('+arg+')^2');\r\n                            break;\r\n                        case 'asinh':\r\n                            symbol = _.parse('(sqrt(1+('+text(symbol.args[0])+')^2))^(-1)');\r\n                            break;\r\n                        case 'acosh':\r\n                            symbol = _.parse('(sqrt(-1+('+text(symbol.args[0])+')^2))^(-1)');\r\n                            break;\r\n                        case 'atanh':\r\n                            symbol = _.parse('(1-('+text(symbol.args[0])+')^2)^(-1)');\r\n                            break;\r\n                        case ASECH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/('+arg+')^2-1)*('+arg+')^2)');\r\n                            break;\r\n                        case ACOTH:\r\n                            symbol = _.parse('-1/(('+symbol.args[0]+')^2-1)');\r\n                            break;\r\n                        case ACSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/('+arg+')^2+1)*('+arg+')^2)');\r\n                            break;\r\n                        case ASEC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('1/(sqrt(1-1/('+arg+')^2)*('+arg+')^2)');\r\n                            break;\r\n                        case ACSC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1-1/('+arg+')^2)*('+arg+')^2)');\r\n                            break;\r\n                        case ACOT:\r\n                            symbol = _.parse('-1/(('+symbol.args[0]+')^2+1)');\r\n                            break;\r\n                        case 'S':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('sin((pi*('+arg+')^2)/2)');\r\n                            break;\r\n                        case 'C':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('cos((pi*('+arg+')^2)/2)');\r\n                            break;\r\n                        case 'Si':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sin('+arg+')/('+arg+')');\r\n                            break;\r\n                        case 'Shi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sinh('+arg+')/('+arg+')');\r\n                            break;\r\n                        case 'Ci':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cos('+arg+')/('+arg+')');\r\n                            break;\r\n                        case 'Chi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cosh('+arg+')/('+arg+')');\r\n                            break;\r\n                        case 'Ei':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('e^('+arg+')/('+arg+')');\r\n                            break;\r\n                        case 'Li':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('1/'+Settings.LOG+'('+arg+')');\r\n                            break;\r\n                        case 'erf':\r\n                            symbol = _.parse('(2*e^(-('+symbol.args[0]+')^2))/sqrt(pi)');\r\n                            break;\r\n                        case 'atan2':\r\n                            var x_ = String(symbol.args[0]),\r\n                                y_ = String(symbol.args[1]);\r\n                            symbol = _.parse('('+y_+')/(('+y_+')^2+('+x_+')^2)');\r\n                            break;\r\n                        case 'sign':\r\n                            symbol = new Symbol(0);\r\n                            break;\r\n                        case Settings.LOG10:\r\n                            symbol = _.parse('1/(('+symbol.args[0]+')*'+Settings.LOG+'(10))');\r\n                            break;\r\n                        default:\r\n                            symbol = _.symfunction('diff', [symbol, wrt]);\r\n                    }\r\n                }\r\n                else if(g === EX || g === FN && isSymbol(symbol.power)) { \r\n                    var value;\r\n                    if(g === EX) {\r\n                        value = symbol.value;\r\n                    }\r\n                    else if(g === FN && symbol.contains(d)) { \r\n                        value = symbol.fname + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    else {\r\n                        value = symbol.value + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                        a = _.multiply(_.parse(LOG+inBrackets(value)), symbol.power.clone()); \r\n                        b = __.diff(_.multiply(_.parse(LOG+inBrackets(value)), symbol.power.clone()), d); \r\n                    symbol = _.multiply(symbol, b);\r\n                }\r\n                else if(g === FN && !symbol.power.equals(1)) { \r\n                    b = symbol.clone();\r\n                    b.toLinear();\r\n                    b.toUnitMultiplier();\r\n                    symbol = _.multiply(polydiff(symbol.clone()), derive(b));  \r\n                }\r\n                else if( g === CP || g === PL ) { \r\n                    var result = new Symbol(0);\r\n                    for(var x in symbol.symbols) {\r\n                        result = _.add(result, __.diff(symbol.symbols[x].clone(), d));\r\n                    }\r\n                    symbol = _.multiply(polydiff(symbol.clone()), result);\r\n                }\r\n\r\n                symbol.updateHash();\r\n                return symbol;\r\n            };\r\n\r\n            function qdiff(symbol, val, altVal) {\r\n                return _.multiply(symbol, _.parse(val+inBrackets(altVal || text(symbol.args[0]))));\r\n            };\r\n\r\n            function product_rule(symbol) { \r\n                //grab all the symbols within the CB symbol\r\n                var symbols = symbol.collectSymbols(), \r\n                    result = new Symbol(0),\r\n                    l = symbols.length;\r\n                //loop over all the symbols\r\n                for(var i=0; i<l; i++) {\r\n                    var df = __.diff(symbols[i].clone(), d);\r\n                    for(var j=0; j<l; j++) {\r\n                        //skip the symbol of which we just pulled the derivative\r\n                        if(i !== j) {\r\n                            //multiply out the remaining symbols\r\n                            df = _.multiply(df, symbols[j].clone());\r\n                        }\r\n                    }\r\n                    //add the derivative to the result\r\n                    result = _.add(result, df);\r\n                }\r\n                return result; //done\r\n            };\r\n        },\r\n        integration: {\r\n            u_substitution: function(symbols, dx) { \r\n                function try_combo(a, b, f) {\r\n                    var q = f ? f(a, b) : _.divide(a.clone(), __.diff(b, dx));\r\n                    if(!q.contains(dx, true)) \r\n                        return q;\r\n                    return null;\r\n                }\r\n                function do_fn_sub(fname, arg) { \r\n                    var subbed = __.integrate(_.symfunction(fname, [new Symbol(u)]), u, 0);\r\n                    subbed = subbed.sub(new Symbol(u), arg);\r\n                    subbed.updateHash();\r\n                    return subbed;\r\n                }\r\n\r\n                var a = symbols[0].clone(),\r\n                    b = symbols[1].clone(),\r\n                    g1 = a.group,\r\n                    g2 = b.group,\r\n                    //may cause problems if person is using this already. Will need\r\n                    //to find algorithm for detecting conflict\r\n                    u = '__u__', \r\n                    Q;\r\n                if(g1 === FN && g2 !== FN) {\r\n                    //e.g. 2*x*cos(x^2)\r\n                    var arg = a.args[0];\r\n                    Q = try_combo(b, arg.clone());\r\n                    if(Q) \r\n                        return _.multiply(Q, do_fn_sub(a.fname, arg));\r\n                    Q = try_combo(b, a);\r\n                    if(Q) {\r\n                        return __.integration.poly_integrate(a);\r\n                    }\r\n                }\r\n                else if(g2 === FN && g1 !== FN) {\r\n                    //e.g. 2*(x+1)*cos((x+1)^2\r\n                    var arg = b.args[0];\r\n                    Q = try_combo(a, arg.clone());\r\n                    if(Q) \r\n                        return _.multiply(Q, do_fn_sub(b.fname, arg));\r\n                }\r\n                else if(g1 === FN && g2 === FN) {\r\n                    Q = try_combo(a.clone(), b.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(b.clone(), a.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                }\r\n                else if(g1 === EX && g2 !== EX) { \r\n                    var p = a.power; \r\n                    Q = try_combo(b, p.clone());\r\n                    if(!Q) {\r\n                        //one more try\r\n                        var dc = __.integration.decompose_arg(p.clone(), dx);\r\n                        //consider the possibility of a^x^(n-1)*x^n dx\r\n                        var xp = __.diff(dc[2].clone(), dx);\r\n                        var dc2 = __.integration.decompose_arg(xp.clone(), dx);\r\n                        //if their powers equal, so if dx*p == b\r\n                        if(_.multiply(dc[1], dc2[1]).power.equals(b.power)) {\r\n                            var m = _.divide(dc[0].clone(), dc2[0].clone());\r\n\r\n                            var new_val = _.multiply(m.clone(), _.pow(new Symbol(a.value), _.multiply(dc[0], new Symbol(u))));\r\n                            new_val = _.multiply(new_val, new Symbol(u));\r\n                            return __.integration.by_parts(new_val, u, 0, {}).sub(u, dc[1].clone());\r\n                        }\r\n\r\n                    }\r\n                    var integrated = __.integrate(a.sub(p.clone(), new Symbol(u)), u, 0),\r\n                            retval = _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                        \r\n                    \r\n                    return retval;\r\n                }\r\n                else if(g2 === EX && g1 !== EX) {\r\n                    var p = b.power;\r\n                    Q = try_combo(a, p.clone());\r\n                    var integrated = __.integrate(b.sub(p, new Symbol(u)), u, 0);\r\n                    return _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                }\r\n                else if(a.isComposite() || b.isComposite()) { \r\n                    var f = function(a, b) {\r\n                        var A = core.Algebra.Factor.factor(a),\r\n                            B = core.Algebra.Factor.factor(__.diff(b, dx));\r\n                        var q = _.divide(A, B);\r\n                        return q;\r\n                    };\r\n                    var f1 = a.isComposite() ? a.clone().toLinear() : a.clone(),\r\n                        f2 = b.isComposite() ? b.clone().toLinear() : b.clone(); \r\n                    Q = try_combo(f1.clone(), f2.clone(), f); \r\n                    if(Q) \r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(f2.clone(), f1.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(a), Q);\r\n                }\r\n            },\r\n            //simple integration of a single polynomial x^(n+1)/(n+1)\r\n            poly_integrate: function(x) { \r\n                var p = x.power.toString(),\r\n                    m = x.multiplier.toDecimal(), \r\n                    s = x.toUnitMultiplier().toLinear();\r\n                if(Number(p) === -1) {\r\n                    return _.multiply(new Symbol(m), _.symfunction(LOG, [s]));\r\n                }\r\n                return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)', m, s, p));\r\n            },\r\n            //If we're just spinning wheels we want to stop. This is why we \r\n            //wrap integration in a try catch block and call this to stop.\r\n            stop: function(msg) {\r\n                msg = msg || 'Unable to compute integral!';\r\n                core.Utils.warn(msg);\r\n                throw new NoIntegralFound(msg);\r\n            },\r\n            partial_fraction: function(input, dx, depth, opt) { \r\n                //TODO: This whole thing needs to be rolled into one but for now I'll leave it as two separate parts\r\n                if(!isSymbol(dx))\r\n                    dx = _.parse(dx);\r\n                var result, partial_fractions;\r\n                result = new Symbol(0);\r\n                partial_fractions = core.Algebra.PartFrac.partfrac(input, dx);\r\n                if(partial_fractions.group === CB && partial_fractions.isLinear()) {\r\n                    partial_fractions.each(function(x) {\r\n                        result = _.add(result, __.integrate(x, dx, depth, opt));\r\n                    });\r\n                }\r\n                else {\r\n                    result = _.add(result, __.integrate(partial_fractions, dx, depth, opt));\r\n                }\r\n                return result;\r\n            },\r\n            get_udv: function(symbol) { \r\n                var parts = [[/*L*/], [/*I*/], [/*A*/], [/*T*/], [/*E*/]];\r\n                //first we sort them \r\n                var setSymbol = function(x) { \r\n                    var g = x.group; \r\n                    if(g === FN) {\r\n                        var fname = x.fname;\r\n                        if(core.Utils.in_trig(fname) || core.Utils.in_htrig(fname))\r\n                            parts[3].push(x);\r\n                        else if(core.Utils.in_inverse_trig(fname))\r\n                            parts[1].push(x);\r\n                        else if(fname === LOG)\r\n                            parts[0].push(x);\r\n                        else { \r\n                            __.integration.stop();\r\n                        }\r\n                    }\r\n                    else if(g === S || x.isComposite() && x.isLinear() || g === CB && x.isLinear()) {\r\n                        parts[2].push(x);\r\n                    }\r\n                    else if(g === EX || x.isComposite() && !x.isLinear())\r\n                        parts[4].push(x);\r\n                    else\r\n                        __.integration.stop();\r\n                };\r\n                \r\n                if(symbol.group === CB) \r\n                    symbol.each(function(x) { \r\n                        setSymbol(Symbol.unwrapSQRT(x, true));\r\n                    });\r\n                else \r\n                    setSymbol(symbol);\r\n                var u, dv = new Symbol(1);\r\n                //compile u and dv\r\n                for(var i=0; i<5; i++) { \r\n                    var part = parts[i], t,\r\n                        l = part.length;\r\n                    if(l > 0) {\r\n                        if(l > 1) {\r\n                            t = new Symbol(1);\r\n                            for(var j=0; j<l; j++) \r\n                                t = _.multiply(t, part[j].clone());\r\n                        }\r\n                        else\r\n                            t = part[0].clone();\r\n\r\n                        if(!u) { \r\n                            u = t;//the first u encountered gets chosen\r\n                            u.multiplier = u.multiplier.multiply(symbol.multiplier); //the first one gets the mutliplier\r\n                        } \r\n                        else dv = _.multiply(dv, t); //everything else belongs to dv\r\n                    }  \r\n                }\r\n\r\n                return [u, dv];\r\n            },\r\n            \r\n            trig_sub: function(symbol, dx, depth, opt, parts, symbols) {  \r\n                parts = parts || __.integration.decompose_arg(symbol.clone().toLinear(), dx);\r\n                var b = parts[3],\r\n                    ax = parts[2],\r\n                    a = parts[0],\r\n                    x = parts[1]; \r\n                if(x.power.equals(2) && a.greaterThan(0)) {\r\n                    //use tan(x)\r\n                    var t = core.Utils.getU(symbol), //get an appropriate u\r\n                        u = _.parse(TAN+inBrackets(t)), //u\r\n                        du = _.parse(SEC+inBrackets(t)+'^2'), //du\r\n                        f = _.multiply(symbol.sub(x, u), du);\r\n                    var integral = __.integrate(f, t, depth, opt).sub(u, x);\r\n                    core.Utils.clearU(u);\r\n                    return integral;\r\n                }\r\n            },\r\n            \r\n            by_parts: function(symbol, dx, depth, o) { \r\n                o.previous = o.previous || [];\r\n                var udv, u, dv, du, v, vdu, uv, retval, integral_vdu, m, c, vdu_s;\r\n                //first LIATE\r\n                udv = __.integration.get_udv(symbol);\r\n                u = udv[0]; \r\n                dv = udv[1]; \r\n                du = Symbol.unwrapSQRT(_.expand(__.diff(u.clone(), dx)), true); \r\n                c = du.clone().stripVar(dx);\r\n                //strip any coefficients\r\n                du = _.divide(du, c.clone());\r\n                v = __.integrate(dv.clone(), dx, depth || 0); \r\n                vdu = _.multiply(v.clone(), du); \r\n                vdu_s = vdu.toString();\r\n                //currently only supports e^x*(some trig)\r\n                if(o.previous.indexOf(vdu_s) !== -1 && (core.Utils.in_trig(u.fname)) && dv.isE()) { \r\n                    //We're going to exploit the fact that vdu can never be constant\r\n                    //to work out way out of this cycle. We'll return the length of\r\n                    //the this.previous array until we're back at level one\r\n                    o.is_cyclic = true;\r\n                    //return the integral. \r\n                    return new Symbol(1);\r\n                }\r\n                else\r\n                    o.previous.push(vdu_s);\r\n\r\n                uv = _.multiply(u, v); \r\n                //clear the multiplier so we're dealing with a bare integral\r\n                m = vdu.multiplier.clone();\r\n                vdu.toUnitMultiplier();\r\n                integral_vdu = _.multiply(__.integrate(vdu.clone(), dx, depth, o), c); \r\n                integral_vdu.multiplier = integral_vdu.multiplier.multiply(m);\r\n                retval = _.subtract(uv, integral_vdu);\r\n                //we know that there cannot be constants so they're a holdover from a cyclic integral\r\n                if(o.is_cyclic) { \r\n                    //start popping the previous stack so we know how deep in we are\r\n                    o.previous.pop();\r\n                    if(o.previous.length === 0) {\r\n                        retval = _.expand(retval);\r\n                        var rem = new Symbol(0);\r\n                        retval.each(function(x) {\r\n                            if(!x.contains(dx))\r\n                                rem = _.add(rem, x.clone());\r\n                        });\r\n                        //get the actual uv\r\n                        retval = _.divide(_.subtract(retval, rem.clone()), _.subtract(new Symbol(1), rem));\r\n                    }\r\n                }\r\n                \r\n                return retval;\r\n            },\r\n            /*\r\n             * dependents: [Solve, integrate]\r\n             */\r\n            decompose_arg: core.Utils.decompose_fn\r\n        },\r\n        //TODO: nerdamer.integrate('-e^(-a*t)*sin(t)', 't') -> gives incorrect output\r\n        integrate: function(original_symbol, dt, depth, opt) { \r\n            //assume integration wrt independent variable if expression only has one variable\r\n            if(!dt) {\r\n                var vars = core.Utils.variables(original_symbol);\r\n                if(vars.length === 1)\r\n                    dt = vars[0]; \r\n                //defaults to x\r\n                dt = dt || 'x';\r\n            }\r\n            //add support for integrating vectors\r\n            if(core.Utils.isVector(original_symbol)) {\r\n                var vector = new core.Vector([]);\r\n                original_symbol.each(function(x) {\r\n                    vector.elements.push(__.integrate(x, dt));\r\n                });\r\n                return vector;\r\n            }\r\n            if(!isNaN(dt))\r\n                _.error('variable expected but received '+dt);\r\n            //get rid of constants right away\r\n            if(original_symbol.isConstant(true))\r\n                return _.multiply(original_symbol.clone(), _.parse(dt));\r\n            \r\n            //configurations options for integral. This is needed for tracking extra options\r\n            //e.g. cyclic integrals or additional settings\r\n            opt = opt || {};\r\n            return core.Utils.block('PARSE2NUMBER', function() {\r\n                //make a note of the original symbol. Set only if undefined\r\n                depth = depth || 0;\r\n                var dx = isSymbol(dt) ? dt.toString() : dt,\r\n                    //we don't want the symbol in sqrt form. x^(1/2) is prefererred\r\n                    symbol = Symbol.unwrapSQRT(original_symbol.clone(), true), \r\n                    g = symbol.group,\r\n                    retval;\r\n\r\n                try { \r\n                    //We stop integration after x amount of recursive calls\r\n                    if(++depth > core.Settings.integration_depth) \r\n                        __.integration.stop('Maximum depth reached. Exiting!');\r\n\r\n                    //constants. We first eliminate anything that doesn't have dx. Everything after this has \r\n                    //to have dx or else it would have been taken care of below\r\n                    if(!symbol.contains(dx, true)) { \r\n                        retval = _.multiply(symbol.clone(), _.parse(dx));\r\n                    }\r\n                    //e.g. 2*x\r\n                    else if(g === S) {\r\n                        retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                    }\r\n                    else if(g === EX) { \r\n                        if(symbol.previousGroup === FN && !(symbol.fname === 'sqrt' || symbol.fname === Settings.PARENTHESIS))\r\n                            __.integration.stop();\r\n                        //check the base\r\n                        if(symbol.contains(dx) && symbol.previousGroup !== FN) {\r\n                            //if the symbol also contains dx then we stop since we currently \r\n                            //don't know what to do with it e.g. x^x\r\n                            if(symbol.power.contains(dx))\r\n                                __.integration.stop();\r\n                            else { \r\n                                var t = __.diff(symbol.clone().toLinear(), dx);\r\n                                if(t.contains(dx))\r\n                                    __.integration.stop();\r\n                                //since at this point it's the base only then we do standard single poly integration\r\n                                //e.g. x^y\r\n                                retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                            }\r\n                        }\r\n                        //e.g. a^x or 9^x\r\n                        else {\r\n                            var a = __.diff(symbol.power.clone(), dx);\r\n                            if(a.contains(dx)) {\r\n                                var aa = a.stripVar(dx),\r\n                                    x = _.divide(a.clone(), aa.clone());\r\n                                if(x.group === S && x.isLinear()) {\r\n                                    aa.multiplier = aa.multiplier.divide(new Frac(2));\r\n                                    return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))', aa, dx, symbol.multiplier));\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            if(symbol.isE()) { \r\n                                if(a.isLinear())\r\n                                    retval = symbol;\r\n                                else {\r\n                                    if(a.isE() && a.power.group === S && a.power.power.equals(1))\r\n                                        retval = _.multiply(_.symfunction('Ei', [symbol.power.clone()]), symbol.power);\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                var d = _.symfunction(LOG, [_.parse(symbol.value)]);\r\n                                retval = _.divide(symbol, d);\r\n                            }\r\n                            retval = _.divide(retval, a);\r\n                        }\r\n                    }\r\n                    else if(symbol.isComposite() && symbol.isLinear()) { \r\n                        var m = _.parse(symbol.multiplier);\r\n                        symbol.toUnitMultiplier();\r\n                        retval = new Symbol(0);\r\n                        symbol.each(function(x) {\r\n                            retval = _.add(retval, __.integrate(x, dx, depth));\r\n                        });\r\n                        retval = _.multiply(m, retval);\r\n                    }\r\n                    else if(g === CP) { \r\n                        if(symbol.power.greaterThan(1))\r\n                            symbol = _.expand(symbol);\r\n                        if(symbol.power.equals(1)) {\r\n                            retval = new Symbol(0);\r\n                            symbol.each(function(x) {\r\n                                retval = _.add(retval, __.integrate(x, dx, depth));\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            var p = Number(symbol.power),\r\n                                m = symbol.multiplier.clone();//temporarily remove the multiplier\r\n                            symbol.toUnitMultiplier();\r\n                            var //below we consider the form ax+b\r\n                                fn = symbol.clone().toLinear(), //get just the pure function without the power\r\n                                decomp = __.integration.decompose_arg(fn, dx),\r\n                                //I have no idea why I used bx+a and not ax+b. TODO change this to something that makes sense\r\n                                b = decomp[3],\r\n                                ax = decomp[2],\r\n                                a = decomp[0],\r\n                                x = decomp[1]; \r\n                            if(p === -1 && x.group !== PL && x.power.equals(2)) { \r\n                                var b_is_positive = isInt(b) ? b > 0 : true;\r\n                                //we can now check for atan\r\n                                if(x.group === S && x.power.equals(2) && b_is_positive) { \r\n                                    ////then we have atan\r\n                                    //abs is redundants since the sign appears in both denom and num.\r\n                                    var unwrapAbs = function(s) {\r\n                                        var result = new Symbol(1);\r\n                                        s.each(function(x) {\r\n                                            result = _.multiply(result, x.fname === 'abs' ? x.args[0] : x);\r\n                                        });\r\n                                        return result;\r\n                                    };\r\n                                    var A = a.clone(),\r\n                                        B = b.clone();\r\n                                    A = _.pow(A, new Symbol(1/2));\r\n                                    B = _.pow(B, new Symbol(1/2));\r\n                                    //unwrap abs\r\n\r\n                                    var d = _.multiply(unwrapAbs(B), unwrapAbs(A)),\r\n                                        f = _.symfunction(ATAN, [_.divide(_.multiply(a, x.toLinear()), d.clone())]);\r\n                                    retval = _.divide(f, d);\r\n                                }\r\n                                else if(x.group === S && x.isLinear()) {\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                }\r\n                                else { \r\n                                    //1/(x^4+1)\r\n                                    if(x.power.equals(4)) {\r\n                                        //https://www.freemathhelp.com/forum/threads/55678-difficult-integration-int-1-(1-x-4)-dx\r\n                                        var A, B, C, D, E, F, f1, f2, f3, f4, L1, L2;\r\n                                        var br = inBrackets;\r\n                                        //apply rule: ax^4+b = (√ax^2+√2∜a∜bx+√b)(√ax^2-√2∜a∜bx+√b)\r\n                                        //get quadratic factors\r\n                                        A = _.parse(SQRT+br(a)+'*'+dx+'^2');\r\n                                        B = _.parse(SQRT+br(2)+'*'+br(a)+'^'+br('1/4')+'*'+br(b)+'^'+br('1/4')+'*'+dx);\r\n                                        C = _.parse(SQRT+br(b));\r\n                                        f1 = _.add(_.add(A.clone(), B.clone()), C.clone());\r\n                                        f2 = _.add(_.subtract(A, B), C);\r\n                                        //calculate numerators: [D+E, D-E] -> [√2*b^(3/4)+√b∜ax, √2*b^(3/4)-√b∜ax]\r\n                                        D = _.parse(SQRT+br(2)+'*'+br(b)+'^'+br('3/4'));\r\n                                        E = _.parse(SQRT+br(b)+'*'+br(b)+'^'+br('1/4')+'*'+dx);\r\n                                        //let F = 2b√2∜b\r\n                                        F = _.parse(2+'*'+br(b)+'*'+SQRT+br(2)+'*'+br(b)+'^'+br('1/4'));\r\n                                        //calculate the factors\r\n                                        L1 = _.divide(_.subtract(D.clone(), E.clone()), _.multiply(F.clone(), f2));\r\n                                        L2 = _.divide(_.add(D, E), _.multiply(F, f1.clone()));\r\n                                        retval = _.add(\r\n                                                    __.integrate(L1, dx, depth, opt),\r\n                                                    __.integrate(L2, dx, depth, opt)\r\n                                                );\r\n                                    }\r\n                                    else\r\n                                        //let's try partial fractions\r\n                                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                }\r\n                            }\r\n                            else if(p === -1/2) {\r\n                                //detect asin and atan\r\n                                if(x.group === S && x.power.equals(2)) {\r\n                                    if(ax.multiplier.lessThan(0) && !b.multiplier.lessThan(0)) {\r\n                                        a.negate();\r\n                                        //it's asin\r\n                                        if(b.isConstant() && a.isConstant()) {\r\n                                            var d = _.symfunction(SQRT, [a.clone()]),\r\n                                                d2 = _.symfunction(SQRT, [_.multiply(a.clone(), b)]);\r\n                                            retval = _.divide(_.symfunction(ASIN, [_.divide(ax.toLinear(), d2)]), d);\r\n                                        }\r\n                                        //I'm not sure about this one. I'm trusting Wolfram Alpha here\r\n                                        else {\r\n                                            var sqrt_a = _.symfunction(SQRT, [a]),\r\n                                                sqrt_ax = _.multiply(sqrt_a.clone(), x.clone().toLinear());\r\n                                            retval = _.divide(_.symfunction(ATAN, [_.divide(sqrt_ax, _.symfunction(SQRT, [fn.clone()]))]), sqrt_a);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        /*WHAT HAPPENS HERE???? e.g. integrate(3/sqrt(-a+b*x^2),x) or integrate(3/sqrt(a+b*x^2),x)*/\r\n                                        __.integration.stop();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //This would be a case like 1/(sqrt(1-x^3) or 1/(1-(x+1)^2)\r\n                                    __.integration.stop();\r\n                                }\r\n                            }\r\n                            else { \r\n                                if(x.isLinear() && x.group !== PL) \r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                else if(x.power.equals(2) && a.greaterThan(0)) { \r\n                                    var sqa, sqb, aob, bsqi, n, integral, u, v, uv;\r\n                                    //1/(a*x^2+b^2)^n\r\n                                    //strip the value of b so b = 1\r\n                                    sqa = _.parse(SQRT+inBrackets(a)); //strip a so b = 1\r\n                                    sqb = _.parse(SQRT+inBrackets(b));\r\n                                    aob = _.multiply(sqa.clone(), sqb.clone()).invert();\r\n                                    bsqi = _.pow(b, new Symbol(symbol.power));\r\n                                    uv = core.Utils.getU(symbol);\r\n                                    u = _.multiply(aob, x.clone().toLinear());\r\n                                    v = _.parse(ATAN+inBrackets(u));\r\n                                    //the conversion will be 1+tan(x)^2 -> sec(x)^2\r\n                                    //since the denominator is now (sec(x)^2)^n and the numerator is sec(x)^2 \r\n                                    //then the remaining sec will be (n-1)*2;\r\n                                    var n = (Math.abs(symbol.power)-1)*2; \r\n                                    //1/sec(x)^n can now be converted to cos(x)^n and we can pull the integral of that\r\n                                    var integral = __.integrate(_.parse(COS+inBrackets(uv)+'^'+n));\r\n                                    core.Utils.clearU(uv);\r\n                                    return _.multiply(integral.sub(uv, v), bsqi);\r\n                                }\r\n                                else { \r\n                                    if(symbol.group !== CB && !symbol.power.lessThan(0)) {\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n                                    else { \r\n                                        var f = symbol.clone().toLinear();\r\n                                        var factored = core.Algebra.Factor.factor(f);\r\n                                        var was_factored = factored.toString() !== f.toString();\r\n                                        if(core.Algebra.degree(f, _.parse(dx)).equals(2) && !was_factored) { \r\n                                            try {\r\n                                                var f1, fx, u, sq;\r\n                                                sq = core.Algebra.sqComplete(f, dx);\r\n                                                u = core.Utils.getU(f);\r\n                                                f1 = sq.f.sub(sq.a, u);\r\n                                                fx = _.pow(f1, _.parse(symbol.power));\r\n                                                retval = __.integrate(fx, u).sub(u, sq.a);\r\n                                            }\r\n                                            catch(e) {\r\n                                                __.integration.stop();\r\n                                            }\r\n                                        }\r\n                                        else\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                    }\r\n                                }\r\n                            }\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === FN) { \r\n                        var arg = symbol.args[0],\r\n                            m = symbol.multiplier.clone();\r\n                        symbol.toUnitMultiplier();\r\n                        var decomp = __.integration.decompose_arg(arg, dx);\r\n                        //easies way I can think of to get the coefficient and to make sure\r\n                        //that the symbol is linear wrt dx. I'm not actually trying to get the \r\n                        //derivative\r\n                        var a = decomp[0],\r\n                            x = decomp[1],\r\n                            fname = symbol.fname;\r\n                        //log is a special case that can be handled with integration by parts\r\n                        if(fname === LOG || (fname === ASIN || fname === ACOS || fname === ATAN && x.isLinear())) { \r\n                            /*integration by parts */\r\n                            var p = symbol.power.toString(); \r\n                            if(isInt(p))\r\n                                depth = depth - p; //it needs more room to find the integral\r\n                            \r\n                            if(!arg.isComposite())\r\n                                retval = _.multiply(_.parse(m),__.integration.by_parts(symbol, dx, depth, opt)); \r\n                            else {\r\n                                //integral u du\r\n                                var u = core.Utils.getU(symbol);\r\n                                var f = _.pow(_.parse(LOG+inBrackets(u)),new Symbol(p));\r\n                                var du = __.diff(arg, dx);\r\n                                var u_du = _.multiply(f, du);\r\n                                var integral = __.integrate(u_du, u, depth, opt);\r\n                                retval = _.multiply(_.parse(m),integral.sub(u, arg));\r\n                            }\r\n\r\n                        }\r\n                        else if(fname === TAN && symbol.power.lessThan(0)) {\r\n                            //convert to cotangent\r\n                            var sym  = symbol.clone();\r\n                            sym.power.negate();\r\n                            sym.fname = COT;\r\n                            return _.multiply(_.parse(m),__.integrate(sym, dx, depth));\r\n                        }\r\n                        else {\r\n                            if(!a.contains(dx, true) && symbol.isLinear()) { //perform a deep search for safety\r\n                                //first handle the special cases \r\n                                if(fname === ABS) {\r\n                                    //REVISIT **TODO**\r\n                                    var x = _.divide(arg.clone(), a.clone());\r\n                                    if(x.group === S && !x.power.lessThan(0)) {\r\n                                        if(core.Utils.even(x.power)) {\r\n                                            retval = __.integrate(arg, dx, depth);\r\n                                        }\r\n                                        else {\r\n                                            var integrated = __.integrate(x, dx, depth);\r\n                                            integrated.power = integrated.power.subtract(new Frac(1));\r\n                                            retval = _.multiply(_.multiply(_.symfunction(ABS, [x.toLinear()]), integrated), a);\r\n                                        }\r\n                                    }\r\n                                    else \r\n                                        __.integration.stop();\r\n                                }\r\n                                else { \r\n                                    var ag = symbol.args[0].group,\r\n                                        decomposed = __.integration.decompose_arg(arg, dx);\r\n                                    \r\n                                    if(!(ag === CP || ag === S || ag === CB) || !decomposed[1].power.equals(1) || arg.hasFunc())\r\n                                        __.integration.stop();\r\n                                    /**TODO**/ //ASIN, ACOS, ATAN\r\n                                    switch(fname) {\r\n                                        case COS:\r\n                                            retval = _.symfunction(SIN, [arg]);\r\n                                            break;\r\n                                        case SIN:\r\n                                            retval = _.symfunction(COS, [arg]);\r\n                                            retval.negate();\r\n                                            break;\r\n                                        case TAN:\r\n                                            retval = _.parse(format(Settings.LOG+'(sec({0}))', arg));\r\n                                            break;\r\n                                        case SEC:\r\n                                            retval = _.parse(format(Settings.LOG+'(tan({0})+sec({0}))', arg));\r\n                                            break;\r\n                                        case CSC:\r\n                                            retval = _.parse(format('-'+Settings.LOG+'(csc({0})+cot({0}))', arg));\r\n                                            break;\r\n                                        case COT:\r\n                                            retval = _.parse(format(Settings.LOG+'(sin({0}))', arg));\r\n                                            break;\r\n                                        case SINH:\r\n                                            retval = _.symfunction(COSH, [arg]);\r\n                                            break;\r\n                                        case COSH:\r\n                                            retval = _.symfunction(SINH, [arg]);\r\n                                            break;\r\n                                        case TANH:\r\n                                            retval = _.parse(format(Settings.LOG+'(cosh({0}))', arg));\r\n                                            break;\r\n                                        case ASEC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOT:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        //inverse htrig\r\n                                        case ASECH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSCH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOTH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        //end inverse htrig\r\n                                        //htrigh\r\n                                        case SECH:\r\n                                            retval = _.parse(format('atan(sinh({0}))', arg));\r\n                                            break;\r\n                                        case CSCH:\r\n                                            retval = _.parse(format(Settings.LOG+'(tanh(({0})/2))', arg));\r\n                                            break;\r\n                                        case COTH:\r\n                                            retval = _.parse(format(Settings.LOG+'(sinh({0}))', arg));\r\n                                            break;\r\n                                        //end htrig\r\n                                        case EXP:\r\n                                            retval = __.integrate(_.parse(format('e^({0})', arg)), dx, depth);\r\n                                            break;\r\n                                        case 'S':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                dc = __.integration.decompose_arg(arg, dx),\r\n                                                x_ = dc[1],\r\n                                                a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)', a_, b_, x));\r\n                                            break;\r\n                                        case 'C':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                dc = __.integration.decompose_arg(arg, dx),\r\n                                                x_ = dc[1],\r\n                                                a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)', a_, b_, x_));\r\n                                            break;\r\n                                        case 'erf':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                dc = __.integration.decompose_arg(arg, dx),\r\n                                                x_ = dc[1],\r\n                                                a_ = dc[0];\r\n                                            retval = _.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))', a_, x_, arg));\r\n                                            break;\r\n                                        case 'sign':\r\n                                            retval = _.multiply(symbol.clone(), arg.clone());\r\n                                            break;\r\n                                        default:\r\n                                            __.integration.stop();\r\n                                    }\r\n\r\n                                    retval = _.divide(retval, a); \r\n                                }\r\n                            }\r\n                            else if(x.isLinear()) { \r\n                                if(fname === COS || fname === SIN) {\r\n                                    var p = Number(symbol.power);\r\n                                    //check to see if it's negative and then just transform it to sec or csc\r\n                                    if(p < 0) {\r\n                                        symbol.fname = fname === SIN ? CSC : SEC;\r\n                                        symbol.invert().updateHash();\r\n                                        retval = __.integrate(symbol, dx, depth);\r\n                                    }\r\n                                    else {\r\n                                        var arg = symbol.args[0],\r\n                                            rd = symbol.clone(), //cos^(n-1)\r\n                                            rd2 = symbol.clone(), //cos^(n-2)\r\n                                            q = new Symbol((p-1)/p), //\r\n                                            na = _.multiply(a.clone(), new Symbol(p)).invert(); //1/(n*a)\r\n                                        rd.power = rd.power.subtract(new Frac(1));\r\n                                        rd2.power = rd2.power.subtract(new Frac(2));\r\n\r\n                                        var t = _.symfunction(fname === COS ? SIN : COS, [arg.clone()]);\r\n                                        if(fname === SIN) t.negate();\r\n                                        retval = _.add(_.multiply(_.multiply(na, rd), t), _.multiply(q, __.integrate(_.parse(rd2), dx, depth)));\r\n                                    }\r\n                                }\r\n                                //tan(x)^n or cot(x)^n\r\n                                else if(fname === TAN || fname === COT) { \r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    if(symbol.args[0].isLinear(dx)) {\r\n                                        var n = symbol.power.subtract(new Frac(1)).toString(),\r\n                                            r = symbol.clone().toUnitMultiplier(),\r\n                                            w = _.parse(format((fname === COT ? '-' : '')+'1/({2}*{0})*{3}({1})^({0})', n, arg, a, fname));\r\n                                        r.power = r.power.subtract(new Frac(2));\r\n                                        if(r.power.equals(0))\r\n                                            r = _.parse(r);\r\n                                        retval = _.subtract(w, __.integrate(r, dx, depth));\r\n                                    }   \r\n                                }\r\n                                //sec(x)^n or csc(x)^n\r\n                                else if(fname === SEC || fname === CSC) { \r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    var n1 = symbol.power.subtract(new Frac(1)).toString(),\r\n                                        n2 = symbol.power.subtract(new Frac(2)).toString(),\r\n                                        f2 = fname === SEC ? TAN : COT,\r\n                                        r = symbol.clone().toUnitMultiplier(),\r\n                                        parse_str = format((fname === CSC ? '-' : '')+'1/({0}*{1})*{4}({3})^({2})*{5}({3})', a, n1, n2, arg, fname, f2),\r\n                                        w = _.parse(parse_str);\r\n                                    r.power = r.power.subtract(new Frac(2));\r\n                                    if(r.power.equals(0))\r\n                                        r = _.parse(r);\r\n                                    retval = _.add(w, _.multiply(new Symbol(n2/n1), __.integrate(r, dx, depth)));\r\n                                }\r\n                                else if((fname === COSH || fname === SINH) && symbol.power.equals(2)) {\r\n                                    retval = __.integrate(symbol.fnTransform(), dx, depth);\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            else \r\n                                __.integration.stop();\r\n\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === PL) {\r\n                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                    }\r\n                    else if(g === CB) {\r\n                        var den = symbol.getDenom();\r\n                        if(den.group === S)\r\n                            symbol = _.expand(symbol);\r\n                        \r\n                        //separate the coefficient since all we care about are symbols containing dx\r\n                        var coeff = symbol.stripVar(dx); \r\n                        //now get only those that apply\r\n                        var cfsymbol = _.divide(symbol.clone(), coeff.clone()); //a coeff free symbol\r\n                        //peform a correction for stripVar. This is a serious TODO!\r\n                        if(coeff.contains(dx)) {\r\n                            cfsymbol = _.multiply(cfsymbol, coeff);\r\n                            coeff = new Symbol(1);\r\n                        }\r\n                        \r\n                        //if we only have one symbol left then let's not waste time. Just pull the integral\r\n                        //and let the chips fall where they may\r\n                        if(cfsymbol.group !== CB) {\r\n                            if(cfsymbol.equals(1)) { \r\n                                return __.integrate(_.expand(symbol), dx, depth);\r\n                            }\r\n                            \r\n                            //only factor for multivariate which are polynomials\r\n                            if(cfsymbol.clone().toLinear().isPoly(true) && core.Utils.variables(cfsymbol).length > 1) {\r\n                                cfsymbol = core.Algebra.Factor.factor(cfsymbol);\r\n                            }\r\n  \r\n                            retval = __.integrate(cfsymbol, dx, depth);\r\n                        }\r\n                        else { \r\n                            //we collect the symbols and sort them descending group, descending power, descending alpabethically\r\n                            var symbols = cfsymbol.collectSymbols().sort(function(a, b) {\r\n                                if(a.group === b.group)  {\r\n                                    if(Number(a.power) === Number(b.power))\r\n                                        if(a < b) return 1; //I want sin first\r\n                                        else return -1;\r\n                                    return b.power - a.power; //descending power\r\n                                }\r\n                                return b.group - a.group; //descending groups\r\n                            }).map(function(x) {\r\n                                var unwrapped = Symbol.unwrapSQRT(x, true);\r\n                                if(unwrapped.fname === EXP) {\r\n                                    return _.parse(format('({1})*e^({0})', unwrapped.args[0], unwrapped.multiplier));\r\n                                }\r\n                                return unwrapped;\r\n                            });\r\n                            var l = symbols.length;\r\n                            if(symbol.power < 0) { \r\n                                if(l === 2) {\r\n                                    return __.integrate(_.expand(symbol), dx, depth, opt);\r\n                                }\r\n                            }\r\n                            //otherwise the denominator is one lumped together symbol \r\n                            else {\r\n                                //generate an image for \r\n                                if(l === 2) {\r\n                                    //try u substitution\r\n                                    try {\r\n                                        retval = __.integration.u_substitution(symbols, dx);\r\n                                    }\r\n                                    catch(e){/* failed :`(*/; }   \r\n\r\n                                    if(!retval) { \r\n                                        //no success with u substitution so let's try known combinations\r\n                                        //are they two functions\r\n                                        var g1 = symbols[0].group,\r\n                                            g2 = symbols[1].group,\r\n                                            sym1 = symbols[0],\r\n                                            sym2 = symbols[1],\r\n                                            fn1 = sym1.fname,\r\n                                            fn2 = sym2.fname; \r\n                                        //reset the symbol minus the coeff\r\n                                        symbol = _.multiply(sym1.clone(), sym2.clone());\r\n\r\n                                        if(g1 === FN && g2 === FN) { \r\n                                            if(fn1 === LOG || fn2 === LOG) { \r\n                                                retval = __.integration.by_parts(symbol.clone(), dx, depth, opt);\r\n                                            }\r\n                                            else { \r\n                                                symbols.sort(function(a, b) {\r\n                                                    return b.fname > a.fname;\r\n                                                });\r\n                                                var arg1 = sym1.args[0];\r\n                                                //make sure the arguments are suitable. We don't know how to integrate non-linear arguments\r\n                                                if(!arg1.isLinear() || !(arg1.group === CP || arg1.group === CB || arg1.group === S))\r\n                                                    __.integration.stop();\r\n\r\n                                                var decomp = __.integration.decompose_arg(arg1, dx);\r\n                                                x = decomp[1],\r\n                                                a = decomp[0];\r\n                                                if(!x.isLinear()) //again... linear arguments only wrt x\r\n                                                    __.integration.stop();\r\n\r\n                                                //they have to have the same arguments and then we have cleared all the check to \r\n                                                //make sure we can integrate FN & FN\r\n                                                var arg2 = sym2.args[0];\r\n                                                //make sure that their argument matches\r\n                                                if(arg1.equals(arg2)) { \r\n                                                    if(fn1 === SIN && fn2 === COS || fn1 === COS && fn2 === SIN) { \r\n                                                        if(sym1.power.lessThan(0))\r\n                                                            __.integration.stop();//we don't know how to handle, sin(x)^n/cos(x)^m where m > n,  yet\r\n                                                        //if it's in the form sin(x)^n*cos(x)^n then we can just return tan(x)^n which we know how to integrate\r\n                                                        if(fn1 === SIN && sym1.power.add(sym2.power).equals(0)) { \r\n                                                            sym1.fname = TAN;\r\n                                                            sym1.updateHash();\r\n                                                            retval = __.integrate(sym1, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            if(even(sym1.power) && fn2 === COS && sym2.power.lessThan(0)) {\r\n                                                                //transform sin^(2*n) to (1-cos^2)^n\r\n                                                                var n = Number(sym1.power)/2,\r\n                                                                    new_sym = _.parse(format('(1-cos({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else if(even(sym1.power) && fn2 === SIN && sym2.power.lessThan(0)) {\r\n                                                                //transform cos^(2*n) to (1-sin^2)^n\r\n                                                                var n = Number(sym1.power)/2,\r\n                                                                    new_sym = _.parse(format('(1-sin({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else {\r\n                                                                var p1_even = core.Utils.even(sym1.power),\r\n                                                                    p2_even = core.Utils.even(sym2.power);\r\n                                                                retval = new Symbol(0);\r\n                                                                if(!p1_even || !p2_even) { \r\n                                                                    var u, r, trans;\r\n                                                                    //since cos(x) is odd it carries du. If sin was odd then it would be the other way around\r\n                                                                    //know that p1 satifies the odd portion in this case. If p2 did than it would contain r\r\n                                                                    if(!p1_even) {\r\n                                                                        //u = sin(x)\r\n                                                                        u = sym2; r = sym1; \r\n                                                                    }\r\n                                                                    else {\r\n                                                                        u = sym1; r = sym2;\r\n                                                                    }\r\n                                                                    //get the sign of du. In this case r carries du as stated before and D(cos(x),x) = -sin(x)\r\n                                                                    var sign = u.fname === COS ? -1 : 1,\r\n                                                                        n = r.power, \r\n                                                                        //remove the du e.g. cos(x)^2*sin(x)^3 dx -> cos(x)^2*sin(x)^2*sin(x). We're left with two \r\n                                                                        //even powers afterwards which can be transformed\r\n                                                                        k = (n - 1)/2, \r\n                                                                        //make the transformation cos(x)^2 = 1 - sin(x)^2\r\n                                                                        trans = _.parse('(1-'+u.fname+core.Utils.inBrackets(arg1)+'^2)^'+k), \r\n                                                                        sym = _.expand(_.multiply(new Symbol(sign), _.multiply(u.clone(), trans)));\r\n                                                                    //we can now just loop through and integrate each since it's now just a polynomial with functions\r\n                                                                    sym.each(function(x) { \r\n                                                                        retval = _.add(retval, __.integration.poly_integrate(x.clone()));\r\n                                                                    });\r\n                                                                }\r\n                                                                else { \r\n                                                                    //performs double angle transformation\r\n                                                                    var double_angle = function(symbol) {\r\n                                                                        var p = symbol.power,\r\n                                                                            k = p/2, e;\r\n                                                                        if(symbol.fname === COS)\r\n                                                                            e = '((1/2)+(cos(2*('+symbol.args[0]+'))/2))^'+k;\r\n                                                                        else\r\n                                                                            e = '((1/2)-(cos(2*('+symbol.args[0]+'))/2))^'+k;\r\n\r\n                                                                        return _.parse(e);\r\n                                                                    };\r\n                                                                    //they're both even so transform both using double angle identities and we'll just\r\n                                                                    //be able to integrate by the sum of integrals\r\n                                                                    var a = double_angle(sym1),\r\n                                                                        b = double_angle(sym2),\r\n                                                                        t = _.multiply(a, b);\r\n                                                                    var sym = _.expand(t);\r\n                                                                    sym.each(function(x) {\r\n                                                                        retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                                    });\r\n                                                                    return _.multiply(retval, coeff);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    //tan(x)*sec(x)^n \r\n                                                    else if(fn1 === SEC && fn2 === TAN && x.isLinear() && sym2.isLinear()) { \r\n                                                        retval = _.parse(format('sec({0})^({1})/({1})', sym1.args[0], sym1.power));\r\n                                                    }\r\n                                                    else if(fn1 === TAN && fn2 === SEC && x.isLinear()) { \r\n                                                        //remaining: tan(x)^3*sec(x)^6\r\n                                                        if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                            retval = _.divide(_.symfunction(SEC, [arg1.clone()]), a);\r\n                                                        }\r\n                                                        else if(even(sym1.power)) {\r\n                                                            var p = Number(sym1.power)/2;\r\n                                                            //transform tangent\r\n                                                            var t = _.parse(format('(sec({0})^2-1)^({1})', sym1.args[0], p));\r\n                                                            retval = __.integrate(_.expand(_.multiply(t, sym2)), dx, depth);\r\n                                                        }\r\n                                                        else\r\n                                                            __.integration.stop();\r\n                                                    }\r\n                                                    else if(fn1 === SEC && fn2 === COS) {\r\n                                                        sym1.fname = COS;\r\n                                                        sym1.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    else if(fn1 === SIN && fn2 === CSC) {\r\n                                                        sym2.fname = SIN;\r\n                                                        sym2.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    //tan/cos\r\n                                                    else if(fn1 === TAN && (fn2 === COS || fn2 === SIN) && sym2.power.lessThan(0)) {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2);\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                    else { \r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2.fnTransform());\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                }\r\n                                                //TODO: REVISIT AT SOME POINT\r\n                                                else if((fn1 === SIN || fn1 === COS) && (fn2 === SIN || fn2 === COS)) { \r\n                                                    var transformed = trigTransform(symbols);\r\n                                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                                }\r\n\r\n                                                else {\r\n                                                    __.integration.stop();\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === FN && g2 === S) { \r\n                                            var sym1_is_linear = sym1.isLinear();\r\n                                            if(sym1.fname === COS && sym1_is_linear && sym2.power.equals(-1)) \r\n                                                retval = _.symfunction('Ci', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COS && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === COSH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Chi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COSH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SIN && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Si', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SIN && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SINH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Shi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SINH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === LOG && sym2.power.equals(-1)) {\r\n                                                //log(x)^n/x = log(x)^(n+1)/(n+1)\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === 'erf') {\r\n                                                if(sym2.power.equals(1)) {\r\n                                                    var dc = __.integration.decompose_arg(sym1.args[0], dx),\r\n                                                        a_ = dc[0],\r\n                                                        x_ = dc[1],\r\n                                                        arg = sym1.args[0].toString();\r\n                                                    retval = _.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)', a_, x_, arg))\r\n                                                }\r\n                                            }\r\n                                            else { \r\n                                                //since group S is guaranteed convergence we need not worry about tracking depth of integration\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === EX && g2 === S) { \r\n                                            var x = fn1 === LOG ? __.integration.decompose_arg(sym1.args[0], dx)[1] : null;\r\n                                            if(sym1.isE() && (sym1.power.group === S || sym1.power.group === CB) && sym2.power.equals(-1)) {\r\n                                                retval = _.symfunction('Ei', [sym1.power.clone()]);\r\n                                            }\r\n                                            else if(fn1 === LOG && x.value === sym2.value) {\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                        else if(g1 === PL && g2 === S) {\r\n                                            //first try to reduce the top\r\n                                            if(sym2.value === sym1.value && sym1.power.equals(-1)) {\r\n                                                //find the lowest power in the denominator\r\n                                                var pd = Math.min.apply(null, core.Utils.keys(sym1.symbols));\r\n                                                //get the lowest common value between denominator and numerator\r\n                                                var pc = Math.min(pd, sym2.power);\r\n                                                //reduce both denominator and numerator by that factor\r\n                                                var factor = sym2.clone();\r\n                                                factor.power = new Frac(pc);\r\n                                                sym2 = _.divide(sym2, factor.clone()); //reduce the denominator\r\n                                                var t = new Symbol(0);\r\n                                                sym1.each(function(x) {\r\n                                                    t = _.add(t, _.divide(x.clone(), factor.clone()));\r\n                                                });\r\n                                                t.multiplier = sym1.multiplier;\r\n                                                symbol = _.divide(sym2, t);\r\n                                            }\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                        }\r\n                                        else if(g1 === CP && g2 === S) {  \r\n                                            var f = sym1.clone().toLinear(),\r\n                                                f_is_linear = core.Algebra.degree(f, _.parse(dx)).equals(1);\r\n                                            //handle cases x^(2*n)/sqrt(1-x^2)\r\n                                            if(sym1.power.equals(-1/2)) { \r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx);\r\n                                                var a = decomp[0].negate(),\r\n                                                    x = decomp[1],\r\n                                                    b = decomp[3],\r\n                                                    p1 = Number(sym1.power),\r\n                                                    p2 = Number(sym2.power);\r\n                                                if(isInt(p2) && core.Utils.even(p2) && x.power.equals(2)) {\r\n                                                    //if the substitution \r\n                                                    var c = _.divide(_.multiply(_.pow(b.clone(), new Symbol(2)), \r\n                                                        _.symfunction(SQRT, [_.divide(b.clone(), a.clone())])), \r\n                                                        _.pow(a.clone(), new Symbol(2)));\r\n                                                    c = _.multiply(c, _.symfunction(SQRT, [b]).invert());\r\n                                                    var dummy = _.parse('sin(u)');\r\n                                                    dummy.power = dummy.power.multiply(sym2.power);\r\n                                                    var integral = __.integrate(dummy, 'u', depth);\r\n                                                    var bksub = _.parse(ASIN+'('+SQRT+'('+a+'/'+b+')*'+dx+')');\r\n                                                    retval = _.multiply(c, integral.sub(new Symbol('u'), bksub));\r\n                                                }   \r\n                                                else if(p1 === -1/2) {\r\n                                                    var u_transform = function(f, u) {\r\n                                                        var integral = _.parse(__.integrate(f, dx, depth, opt).sub(dx, format(u, dx)));\r\n                                                        if(!integral.hasIntegral())\r\n                                                            return integral;\r\n                                                    }\r\n                                                    if(p2 === -1) {\r\n                                                        retval = u_transform(\r\n                                                                _.expand(_.expand(_.pow(_.multiply(sym1.invert(), sym2.invert()), new Symbol(2)))).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                        );\r\n                                                    }\r\n                                                    else if(p2 === -2) {\r\n                                                        //apply transformation to see if it matches asin(x)\r\n                                                        retval = u_transform(\r\n                                                                _.sqrt(_.expand(_.divide(_.pow(symbol, new Symbol(2)).invert(), _.pow(new Symbol(dx), new Symbol(2))).negate())).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                        );\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else if(sym1.power.equals(-1) && sym2.isLinear() && f_is_linear) { \r\n                                                retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else if(!sym1.power.lessThan(0) && isInt(sym1.power)) { \r\n                                                //sum of integrals\r\n                                                var expanded = _.expand(sym1);\r\n                                                retval = new Symbol(0);\r\n                                                expanded.each(function(x) {\r\n                                                    if(x.group === PL) {\r\n                                                        x.each(function(y) {\r\n                                                            retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), y), dx, depth));\r\n                                                        });\r\n                                                    }\r\n                                                    else \r\n                                                        retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), x), dx, depth));\r\n                                                });\r\n                                            }\r\n                                            else if(sym1.power.lessThan(-2)) { \r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                            else if(sym1.power.lessThan(0) && sym2.power.greaterThan(1)) { \r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                    a = decomp[0].negate(),\r\n                                                    x = decomp[1],\r\n                                                    b = decomp[3],\r\n                                                    fn = sym1.clone().toLinear();\r\n\r\n                                                if(x.group !== PL && x.isLinear()) { \r\n                                                    var p = Number(sym2.power),\r\n                                                        du = '_u_',\r\n                                                        u = new Symbol(du),\r\n                                                        //pull the integral with the subsitution\r\n                                                        U = _.expand(_.divide(_.pow(_.subtract(u.clone(), b.clone()), new Symbol(p)), u.clone())),\r\n                                                        scope = {};\r\n\r\n                                                    //generate a scope for resubbing the symbol\r\n                                                    scope[du] = fn;\r\n                                                    var U2 = _.parse(U, scope);\r\n                                                    retval = __.integrate(U2, dx, 0);\r\n                                                }\r\n                                                else if(sym2.power.greaterThan(x.power) || sym2.power.equals(x.power)) { \r\n\r\n                                                    //factor out coefficients\r\n                                                    var factors = new core.Algebra.Classes.Factors();\r\n                                                    sym1 = core.Algebra.Factor.coeffFactor(sym1.invert(), factors);\r\n                                                    var div = core.Algebra.divide(sym2, sym1);\r\n                                                    //it assumed that the result will be of group CB\r\n                                                    if(div.group !== CB) {\r\n                                                        retval = new Symbol(0);\r\n                                                        div.each(function(t) {\r\n                                                            retval = _.add(retval, __.integrate(t, dx, depth));\r\n                                                        });\r\n                                                        //put back the factors\r\n                                                        factors.each(function(factor) {\r\n                                                            retval = _.divide(retval, factor);\r\n                                                        });\r\n\r\n                                                        retval = _.expand(retval);\r\n                                                    }\r\n                                                    else {\r\n                                                        //try something else\r\n                                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else \r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else { \r\n                                                //handle cases such as (1-x^2)^(n/2)*x^(m) where n is odd ___ cracking knuckles... This can get a little hairy \r\n                                                if(sym1.power.den.equals(2)) { \r\n                                                    //assume the function is in the form (a^2-b*x^n)^(m/2)\r\n                                                    var dc = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                        //using the above definition\r\n                                                        a = dc[3], x = dc[1], b = dc[0], bx = dc[2];\r\n                                                    if(x.power.equals(2) && b.lessThan(0)) { //if n is even && b is negative\r\n                                                        //make a equal 1 so we can do a trig sub\r\n                                                        if(!a.equals(1)) { //divide a out of everything\r\n                                                            //move a to the coeff\r\n                                                            coeff = _.multiply(coeff, _.pow(a, new Symbol(2)));\r\n                                                        }\r\n                                                        var u = dx;\r\n                                                        var c = _.divide(_.pow(b.clone().negate(), new Symbol(1/2)), _.pow(a, new Symbol(1/2))),\r\n                                                            du = _.symfunction(COS, [new Symbol(u)]),\r\n                                                            cosn = _.pow(_.symfunction(COS, [new Symbol(u)]), new Symbol(sym1.power.num)),\r\n                                                            X = _.pow(_.symfunction(SIN, [new Symbol(u)]), new Symbol(sym2.power)),\r\n                                                            val = _.multiply(_.multiply(cosn, du), X),\r\n                                                            integral = __.integrate(val, u, depth);\r\n                                                            //but remember that u = asin(sqrt(b)*a*x)\r\n                                                            retval = integral.sub(u, _.symfunction(ASIN, [_.multiply(new Symbol(dx), c)]));\r\n                                                    }\r\n                                                    else {\r\n                                                        retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else if(f_is_linear) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        else if(sym1.isComposite() && sym2.isComposite()) { \r\n                                            //sum of integrals\r\n                                            retval = new Symbol(0);\r\n                                            if(sym1.power.greaterThan(0) && sym2.power.greaterThan(0)) {\r\n                                                //combine and pull the integral of each\r\n                                                var sym = _.expand(symbol);\r\n                                                sym.each(function(x) {\r\n                                                    retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                }, true);\r\n                                            }\r\n                                            else {\r\n                                                var p1 = Number(sym1.power),\r\n                                                    p2 = Number(sym2.power);\r\n                                                if(p1 < 0 && p2 > 0) {\r\n                                                    //swap\r\n                                                    var t = sym1; sym1 = sym2; sym2 = t;\r\n                                                }\r\n                                                if(p1 === -1 && p2 === -1) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx);\r\n                                                }\r\n                                                else {\r\n                                                    sym1.each(function(x) {\r\n                                                        var k = _.multiply(x, sym2.clone());\r\n                                                        var integral = __.integrate(k, dx, depth);\r\n                                                        retval = _.add(retval, integral);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === CP && symbols[0].power.greaterThan(0)) {\r\n                                            sym1 = _.expand(sym1);\r\n                                            retval = new Symbol(0);\r\n                                            sym1.each(function(x) {\r\n                                                retval = _.add(retval, __.integrate(_.multiply(x, sym2.clone()), dx, depth));\r\n                                            }, true);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === EX && core.Utils.in_htrig(sym1.fname)) {\r\n                                            sym1 = sym1.fnTransform();\r\n                                            retval = __.integrate(_.expand(_.multiply(sym1, sym2)), dx, depth);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === CP || g2 === FN && g1 === CP) {\r\n                                            if(g2 === FN && g1 === CP) {\r\n                                                var t = sym1; sym1 = sym2; sym2 = t; //swap\r\n                                            }\r\n                                            var du, sym2_clone, p, q, sa, sb;\r\n                                            du = Symbol.unwrapSQRT(__.diff(sym1.clone(), dx), true);\r\n                                            sym2_clone = Symbol.unwrapSQRT(sym2, true);\r\n                                            if(du.power.equals(sym2_clone.power)) { \r\n                                                p = new Symbol(sym2.power);\r\n                                                sa = du.clone().toLinear();\r\n                                                sb = sym2.clone().toLinear();\r\n                                                q = core.Algebra.divide(sa.toLinear(), sb);\r\n                                                if(q.isConstant()) {\r\n                                                    var nq = _.pow(q, p.negate());\r\n                                                    retval = _.multiply(nq, __.integration.poly_integrate(sym1.clone()));\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else { \r\n                                            var syma = sym1.clone().toLinear();\r\n                                            var symb = sym2.clone().toLinear();\r\n                                            if(g1 === EX && g2 === EX && sym1.power.contains(dx) && sym2.power.contains(dx) \r\n                                                    && !syma.contains(dx) && !symb.contains(dx)) {\r\n                                                retval = _.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',\r\n                                                    syma.toString(),\r\n                                                    symb.toString(),\r\n                                                    sym1.power.multiplier.toString(),\r\n                                                    sym2.power.multiplier.toString(),\r\n                                                    dx\r\n                                                ));\r\n                                            }\r\n                                            else \r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(l === 3 && (symbols[2].group === S && symbols[2].power.lessThan(2) || symbols[0].group === CP)) { \r\n                                    var first = symbols[0];\r\n                                    if(first.group === CP) { //TODO {support higher powers of x in the future}\r\n                                        if(first.power.greaterThan(1))\r\n                                            first = _.expand(first);\r\n                                        var r = _.multiply(symbols[1], symbols[2]);\r\n                                        retval = new Symbol(0);\r\n                                        first.each(function(x) {\r\n                                            var t = _.multiply(x, r.clone());\r\n                                            var intg = __.integrate(t, dx, depth);\r\n                                            retval = _.add(retval, intg);\r\n                                        }, true);\r\n                                    }\r\n                                    else { \r\n                                        //try integration by parts although technically it will never work\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n\r\n                                }\r\n                                else if(all_functions(symbols)) { \r\n                                    var t = new Symbol(1);\r\n                                    for(var i=0,l=symbols.length; i<l; i++) {\r\n                                        t = _.multiply(t, symbols[i].fnTransform());\r\n                                    }\r\n                                    t = _.expand(t);\r\n                                    retval = __.integrate(t, dx, depth);\r\n                                }\r\n                                else { \r\n                                    //one more go\r\n                                    var transformed = trigTransform(symbols);\r\n                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                }\r\n                            }\r\n                                \r\n                        }\r\n\r\n                        retval = _.multiply(retval, coeff);\r\n                    }\r\n                    //if an integral was found then we return it\r\n                    if(retval)\r\n                        return retval;\r\n                }\r\n\r\n                catch(error){\r\n                    //do nothing if it's a NoIntegralFound error otherwise let it bubble\r\n                    if(!(error instanceof NoIntegralFound || error instanceof core.exceptions.DivisionByZero)) \r\n                        throw error;\r\n                }  \r\n\r\n                //no symbol found so we return the integral again\r\n                return _.symfunction('integrate', [original_symbol, dt]);\r\n            }, false);\r\n        },\r\n        defint: function(symbol, from, to, dx) {\r\n            dx = dx || 'x'; //make x the default variable of integration\r\n            var get_value = function(integral, vars, point) {\r\n                try {\r\n                    return _.parse(integral, vars);\r\n                }\r\n                catch(e) {\r\n                    //it failed for some reason so return the limit\r\n                    return __.Limit.limit(integral, dx, point);\r\n                }\r\n            };\r\n            \r\n            var vars = core.Utils.variables(symbol),\r\n                integral = __.integrate(symbol, dx),\r\n                retval;\r\n        \r\n            if(vars.length === 1)\r\n                dx = vars[0];\r\n            if(!integral.hasIntegral()) { \r\n                var upper = {},\r\n                    lower = {},\r\n                    a, b;\r\n                upper[dx] = to;\r\n                lower[dx] = from;\r\n                \r\n                a = get_value(integral, upper, to, dx);  \r\n                b = get_value(integral, lower, from, dx);\r\n                retval = _.subtract(a, b);\r\n            }\r\n            else if(vars.length === 1 && from.isConstant() && to.isConstant()) {\r\n                \r\n                var f = core.Utils.build(symbol); \r\n                    retval = new Symbol(core.Math2.num_integrate(f, Number(from), Number(to)));\r\n            }\r\n            else \r\n                retval = _.symfunction('defint', [symbol, from , to, dx]);\r\n            return retval;\r\n        },\r\n            \r\n        Limit: {\r\n            interval: function(start, end) {\r\n                return _.parse(format('[{0}, {1}]', start, end));\r\n            },\r\n            diverges: function() {\r\n                return __.Limit.interval('-Infinity', 'Infinity');\r\n            },\r\n            divide: function(f, g, x, lim) { \r\n                var fin = f.clone(), gin = g.clone();\r\n                var isInfinity = function(L) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        for(var i=0; i<L.elements.length; i++)\r\n                            if(!L.elements[i].isInfinity)\r\n                                return false;\r\n                        return true;\r\n                    }\r\n                    return L.isInfinity;     \r\n                };\r\n\r\n                var equals = function(L, v) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        return false;\r\n                    }\r\n                    return L.equals(v);\r\n                };\r\n\r\n                var retval;\r\n                do {\r\n                    var lim1 = evaluate(__.Limit.limit(f, x, lim));\r\n                    var lim2 = evaluate(__.Limit.limit(g, x, lim));\r\n                    //if it's in indeterminate form apply L'Hospital's rule\r\n                    var indeterminate = isInfinity(lim1) && isInfinity(lim2) || equals(lim1, 0) && equals(lim2, 0);\r\n                    //pull the derivatives\r\n                    if(indeterminate) {\r\n                        var ft = __.diff(f.clone(), x);\r\n                        var gt = __.diff(g.clone(), x);\r\n                        var t_symbol = _.expand(_.divide(ft, gt));\r\n                        f = t_symbol.getNum();\r\n                        g = t_symbol.getDenom();\r\n                    }\r\n                }\r\n                while(indeterminate)  \r\n                    \r\n                if(lim1.isInfinity && lim2.equals(0))\r\n                    retval = lim1;\r\n                else if(lim1.equals(0) && lim2.isInfinity)\r\n                    retval = lim1;\r\n                else if(lim1.isInfinity) {\r\n                    retval = lim1;\r\n                }\r\n                else if(lim2.isInfinity){\r\n                    retval = new Symbol(0);\r\n                }\r\n                else {\r\n                    //TODO: \r\n                    //REMEMBER: \r\n                    //- 1/cos(x)\r\n                    //n/0 is still possible since we only checked for 0/0\r\n                    if(lim2.equals(0)) {\r\n                        retval = __.Limit.diverges();\r\n                    }\r\n                    else\r\n                        retval = _.divide(lim1, lim2);\r\n                }\r\n                \r\n                return retval;\r\n            },\r\n            rewriteToLog: function(symbol) {\r\n                var p = symbol.power.clone();\r\n                symbol.toLinear();\r\n                return _.pow(new Symbol('e'), _.multiply(p, _.symfunction(Settings.LOG+'', [symbol])));\r\n            },\r\n            getSubbed: function(f, x, lim) {\r\n                var retval;\r\n                //1. rewrite EX with base e\r\n                if(f.group === EX) {\r\n                    f = __.rewriteToLog(f);\r\n                }\r\n                //2. try simple substitution\r\n                try {\r\n                    retval = f.sub(x, lim);\r\n                }\r\n                catch(e) {\r\n                    //Nope. No go, so just return the unsubbed function so we can test the limit instead.\r\n                    retval = f;\r\n                }\r\n                \r\n                return retval;\r\n            },\r\n            isInterval: function(limit) {\r\n                return core.Utils.isVector(limit);\r\n            },\r\n            isConvergent: function(limit) {\r\n                //it's not convergent if it lies on the interval -Infinity to Infinity\r\n                if(     \r\n                    //It lies on the interval -Infinity to Infinity\r\n                    __.Limit.isInterval(limit) && limit.elements[0].isInfinity && limit.elements[1].isInfinity ||\r\n                    //We weren't able to calculate the limit\r\n                    limit.containsFunction('limit')\r\n                ) {\r\n                    return false; //Then no\r\n                }\r\n                return true; //It is\r\n            },\r\n            limit: function(symbol, x, lim) {\r\n                //store the multiplier\r\n                var m = _.parse(symbol.multiplier);\r\n                //strip the multiplier\r\n                symbol.toUnitMultiplier();\r\n                try {\r\n                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                    var retval;\r\n                    //we try the simplest option first where c is some limit\r\n                    //lim a as x->c = a where c \r\n                    if(symbol.isConstant(true)) {\r\n                        retval = symbol;\r\n                    }\r\n                    else {\r\n                        var point = {};\r\n                        point[x] = lim;\r\n                        //lim x as x->c = c where c\r\n                        try {\r\n                            //evaluate the function at the given limit\r\n                            var t = _.parse(symbol.sub(x, lim), point);\r\n                            //a constant or infinity is known so we're done\r\n                            if(t.isConstant(true) || t.isInfinity)\r\n                                retval = t;\r\n\r\n                        }\r\n                        catch(e){ /*Nothing. Maybe we tried to divide by zero.*/};\r\n\r\n                        if(!retval) {\r\n                            //split the symbol in the numerator and the denominator\r\n                            var num = symbol.getNum();\r\n                            var den = symbol.getDenom();\r\n\r\n                            if(den.isConstant(true)) {\r\n                                //We still don't have a limit so we generate tests.\r\n                                if(symbol.group === EX) {\r\n                                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                                    //Speed boost for exponentials by detecting patterns\r\n                                    var f = symbol.clone().toLinear();\r\n                                    var p = symbol.power.clone();\r\n                                    var _num = f.getNum();\r\n                                    var _den = f.getDenom();\r\n                                    var fn = core.Utils.decompose_fn(_den, x, true);\r\n                                    //start detection of pattern (x/(x+1))^x\r\n                                    if(_num.group === S && _num.multiplier.isOne() && fn.ax.group === S && fn.b.isConstant(true) && fn.a.isOne() && fn.b.isConstant(true)) {\r\n                                        retval = _.parse(format('(1/e^({0}))', fn.b));\r\n                                    }\r\n                                    else {\r\n                                        var symbol_ = __.Limit.rewriteToLog(symbol.clone());\r\n                                        //get the base\r\n                                        var pow = symbol_.power.clone();\r\n                                        var base = symbol_.clone().toLinear();\r\n                                        var lim_base = __.Limit.limit(base, x, lim);\r\n                                        var lim_pow = __.Limit.limit(pow, x, lim);\r\n                                        retval = _.pow(lim_base, lim_pow);\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === FN && symbol.args.length === 1 ) {\r\n                                    \r\n                                    //Squeeze theorem lim f(g(x)) = lim f(lim g))\r\n                                    var arg = __.Limit.limit(symbol.args[0], x, lim);\r\n                                    if(core.Utils.isVector(arg)) {\r\n                                        //get the limit over that interval\r\n                                        retval = arg.map(function(e) {\r\n                                            var clone = symbol.clone();\r\n                                            clone.args[0] = e;\r\n                                            return __.Limit.limit(_.symfunction(symbol.fname, [e]), x, lim);\r\n                                        });\r\n                                        \r\n                                        return _.multiply(m, retval)\r\n                                    }\r\n                                    //if the argument is constant then we're done\r\n                                    else if(arg.isConstant(true)) {\r\n                                        var evaluates;\r\n                                        //double check that it evaluates\r\n                                        var trial = _.symfunction(symbol.fname, [arg]);\r\n                                        //trial evaluation\r\n                                        try {\r\n                                            evaluate(trial);\r\n                                            evaluates = true;\r\n                                        }\r\n                                        catch(e) {\r\n                                            evaluates = false;\r\n                                        }\r\n                                    }\r\n                                    if(evaluates) {\r\n                                        retval = trial;\r\n                                    }\r\n                                    else {\r\n                                        //if the limit converges. We'll deal with non-convergent ones later\r\n                                        if(__.Limit.isConvergent(arg)) {\r\n                                            if(symbol.fname === LOG) { \r\n                                                switch(arg.toString()) {\r\n                                                    //lim -> 0\r\n                                                    case '0':\r\n                                                        retval = Symbol.infinity().negate();\r\n                                                        break;\r\n                                                    case 'Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                    case '-Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else if((symbol.fname === COS || symbol.fname === SIN) && lim.isInfinity) {\r\n                                                retval = __.Limit.interval(-1, 1);\r\n                                            }\r\n                                            else if((symbol.fname === TAN)) {\r\n                                                var s_arg = symbol.args[0];\r\n                                                var n = s_arg.getNum();\r\n                                                var d = s_arg.getDenom();\r\n                                                var pi = n.toUnitMultiplier();\r\n                                                if(lim.isInfinity || pi.equals('pi') && d.equals(2)) {\r\n                                                    retval = divergent();\r\n                                                }\r\n                                            }\r\n                                            else if(symbol.fname === Settings.FACTORIAL) {\r\n                                                if(arg.isInfinity)\r\n                                                    return Symbol.infinity();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === S) {\r\n                                    if(symbol.power > 0)\r\n                                        //these functions always converge to the limit\r\n                                        return _.parse(symbol, point);\r\n                                    else {\r\n                                        //we're dealing with 1/x^n but remember that infinity has already been dealt\r\n                                        //with by substitution\r\n                                        if(core.Utils.even(symbol.power)) {\r\n                                            //even powers converge to infinity\r\n                                            retval = Symbol.infinity();\r\n                                        }\r\n                                        else {\r\n                                            //odd ones don't\r\n                                            retval = __.Limit.diverges();\r\n                                        }   \r\n                                    }\r\n                                }\r\n                                else if(symbol.group === CB) {\r\n                                    symbol = _.expand(symbol);\r\n                                    //if the group no longer is CB then feed it back to this function\r\n                                    if(symbol.group !== CB) {\r\n                                        retval = __.Limit.limit(symbol, x, lim);\r\n                                    }\r\n                                    else {\r\n                                        var lim1, lim2;\r\n                                        //loop through all the symbols\r\n                                        //thus => lim f*g*h = lim (f*g)*h = (lim f*g)*(lim h)\r\n                                        //symbols of lower groups are generally easier to differentiatee so get them to the right by first sorting\r\n                                        var symbols = symbol.collectSymbols().sort(function(a, b) {\r\n                                            return a.group - b.group;\r\n                                        });\r\n                                        var f = symbols.pop();\r\n                                        //calculate the first limit so we can keep going down the list\r\n                                        lim1 = evaluate(__.Limit.limit(f, x, lim));\r\n                                        //reduces all the limits one at a time\r\n                                        while(symbols.length) {\r\n                                            //get the second limit\r\n                                            var g = symbols.pop();\r\n                                            //get the limit of g\r\n                                            lim2 = evaluate(__.Limit.limit(g, x, lim));\r\n                                            //if the limit is in indeterminate form aplly L'Hospital by inverting g and then f/(1/g)\r\n                                            if((lim1.isInfinity || !__.Limit.isConvergent(lim1) && lim2.equals(0) || lim1.equals(0) && __.Limit.isConvergent(lim2))) { \r\n                                                //invert the symbol\r\n                                                g.invert();\r\n                                                lim1 = __.Limit.divide(f, g, x, lim);\r\n                                            }\r\n                                            else {\r\n                                                //lim f*g = (lim f)*(lim g)\r\n                                                lim1 = _.multiply(lim1, lim2);\r\n                                                //let f*g equal f and h equal g \r\n                                                f = _.multiply(f, g);\r\n                                            }\r\n                                        }\r\n                                        //Done, lim1 is the limit we're looking for     \r\n                                        retval = lim1;\r\n                                    }\r\n                                }\r\n                                else if(symbol.isComposite()) { \r\n                                    var original = symbol.clone();\r\n                                    var _lim;\r\n                                    if(!symbol.isLinear())\r\n                                        symbol = _.expand(symbol);\r\n                                    //Apply lim f+g = (lim f)+(lim g)\r\n                                    retval = new Symbol(0);\r\n                                    symbol.each(function(sym) {\r\n                                        //If the addition of the limits is undefined then the limit diverges so return -infinity to infinity\r\n                                        try {\r\n                                            _lim = __.Limit.limit(sym, x, lim);\r\n                                            \r\n                                        }\r\n                                        catch(e) {\r\n                                            _lim = __.Limit.diverges();\r\n                                        }\r\n                                        \r\n                                        try {\r\n                                            retval = _.add(retval, _lim);\r\n                                        }\r\n                                        catch(e) {\r\n                                            //rewrite the function to have a common denominator. \r\n                                            //TODO: This is soooo slow at the moment.\r\n                                            symbol = core.Utils.toCommonDenominator(original);\r\n                                            retval = __.Limit.limit(symbol, x, lim);\r\n                                        }\r\n                                    });\r\n                                } \r\n                            }\r\n                            else {\r\n                                retval = __.Limit.divide(num, den, x, lim);\r\n                            }    \r\n                        }\r\n                    }\r\n\r\n                    //if we still don't have a solution\r\n                    if(!retval)\r\n                        //return it symbolically\r\n                        retval = _.symfunction('limit', arguments); \r\n                }\r\n                catch(e) {\r\n                    //if all else fails return the symbolic function\r\n                    retval = _.symfunction('limit', arguments); \r\n                }\r\n                \r\n                return _.multiply(m, retval);\r\n            }\r\n        },\r\n        Fresnel: {\r\n            S: function(x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('sin(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('S', arguments);\r\n            },\r\n            C: function(x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('cos(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('C', arguments);\r\n            }\r\n        }\r\n    };\r\n    \r\n    nerdamer.register([\r\n        {\r\n            name: 'diff',\r\n            visible: true,\r\n            numargs: [1,3],\r\n            build: function(){ return __.diff; }\r\n        },\r\n        {\r\n            name: 'sum',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function(){ return __.sum; }\r\n        },\r\n        {\r\n            name: 'product',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function(){ return __.product; }\r\n        },\r\n        {\r\n            name: 'integrate',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function() { return __.integrate; }\r\n        },\r\n        {\r\n            name: 'defint',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function() { return __.defint; }\r\n        },\r\n        {\r\n            name: 'S',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function() { return __.Fresnel.S; }\r\n        },\r\n        {\r\n            name: 'C',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function() { return __.Fresnel.C; }\r\n        },\r\n        {\r\n            name: 'limit',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function() { return __.Limit.limit; }\r\n        }\r\n    ]);\r\n    //link registered functions externally\r\n    nerdamer.api();\r\n   \r\n})();","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","exports.f = Object.getOwnPropertySymbols;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('every');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport utensils from \"latex-utensils\";\nimport nerdamer from 'nerdamer';\nrequire('nerdamer/Calculus.js');\nimport { TextString, Group, Node } from 'latex-utensils/out/src/latex/latex_parser';\n\nglobalThis.window = globalThis.window || globalThis as any;\n\nconst fakePos = {\n    column: NaN,\n    line: NaN,\n    offset: NaN\n}\n\nconst fakeLocation = {\n    start: fakePos,\n    end: fakePos\n}\n\nfunction text(content: string): TextString {\n    return {\n        kind: \"text.string\",\n        content,\n        location: fakeLocation\n    }\n}\n\nfunction group(nodes: Node[]): Group {\n    return {\n        kind: \"arg.group\",\n        content: nodes,\n        location: fakeLocation\n    }\n}\n\nfunction isGroup(node: Node): node is Group {\n    if (!node) return false;\n    return node.kind === \"arg.group\";\n}\n\nfunction isTextString(node: Node): node is TextString {\n    if (!node) return false;\n    return node.kind === \"text.string\";\n}\n\nasync function collapseGroup(group: Group, context: any): Promise<TextString> {\n    if (isTextString(group)) return group;\n    if (!isGroup(group)) throw new Error(\"illegal arg passed to collapser: \" + (group as any).kind);\n    return {\n        kind: \"text.string\",\n        content: (await condenseSiblings(group.content, context)).filter(sib => sib.kind === 'text.string').map(sib => (sib as TextString).content).join(''),\n        location: fakeLocation\n    }\n}\n\nasync function condenseSiblings(siblings: utensils.latexParser.Node[], context: any): Promise<utensils.latexParser.Node[]> {\n    for (let i = 0; i < siblings.length; i++) {\n        let item = siblings[i];\n        let prev = siblings[i - 1];\n        let next = siblings[i + 1];\n        switch (item.kind) {\n            case 'superscript':\n                if (next.kind !== 'arg.group') continue;\n                /**\n                 * Flatten superscript block into a text group\n                 */\n                const firstChar = next.content[0];\n                if (isTextString(firstChar) && firstChar.content === '^') continue;\n                next.content.unshift(text('^'), text('('));\n                next.content.push(text(')'));\n                siblings.splice(i, 1);\n                break;\n            case 'command':\n                let command: (args: any[], siblings: utensils.latexParser.Node[], index: number, context: any) => string = (Commands as any)[item.name];\n                if (!command) {\n                    console.debug(`unknown command`, item);\n                    siblings.splice(i, 1);\n                    continue;\n                }\n                /**\n                 * Flatten command call to a string\n                 */\n                try {\n                    siblings[i] = {\n                        kind: \"text.string\",\n                        content: await command(item.args, siblings, i, context),\n                        ['wasCommand' as any]: true,\n                        location: fakeLocation\n                    };\n                } catch (e) {\n                    console.debug('failed to execute command!', e);\n                    siblings[i] = text('error');\n                }\n                break;\n            case 'text.string':\n                if (!prev) continue;\n                if (prev.kind === 'arg.group') {\n                    if (item.content === ')') continue;\n                    /**\n                     * Adds implicit multiplication for things immediately following paren\n                     */\n                } else if (prev.kind === 'command' || (prev as any).wasCommand) {\n                    if (item.content.startsWith('(')) continue;\n                    /**\n                     * Adds implicit parenthesis for single-argument function calls\n                     */\n                    const { content: flat } = await collapseGroup(group(siblings.slice(i, i + 3)), context);\n                    const isFunc = !!context[flat];\n                    if (isFunc) {\n                        // if this is a contextual function call, just replace the contents with the value of the function :3\n                        siblings.splice(i, 3, text(`(${flat})`));\n                    }\n                }\n                break;\n            default:\n                continue;\n        }\n    }\n\n    // collapse groups into text strings after parsing\n    siblings = await Promise.all(siblings.map(sib => {\n        if (sib.kind === 'arg.group') {\n            return collapseGroup(sib, context);\n        }\n        return sib;\n    }) as any);\n    \n    return siblings;\n}\n\nexport async function astToExpressionTree(siblings: utensils.latexParser.Node[], context: any): Promise<string> {\n    siblings = siblings.filter(sib => sib.kind === 'command' ? (sib.name !== 'left' && sib.name !== 'right') : true);\n    siblings = await condenseSiblings(siblings, context);\n    return siblings.filter(sib => sib.kind === 'text.string').map(sib => (sib as TextString).content).join('');\n}\n\ntype Content = utensils.latexParser.Node[];\n\nfunction command(...aliases: string[]): any {\n    return (fn: Function) => {\n        aliases.forEach(a => (Commands as any)[a] = fn);\n    }\n}\n\n/**\n * Replaces references to functions with their literal values\n * @param str math expression\n * @param context math context\n */\nfunction replaceFunctionReferencesWithLiterals(str: string, functions: any) {\n    Object.keys(functions).forEach(fn => {\n        while(str.includes(fn)) {\n            str = fn.replace(fn, functions[fn]);\n        }\n    });\n    return str;\n}\n\nasync function flattenContentForEvaluation(content: Node[], context: string) {\n    return replaceFunctionReferencesWithLiterals(await astToExpressionTree(content, context), context);\n}\n\n/**\n * Determines if a fraction is a derivative directive, returning the variable to derive using if so\n * @param numerator frac numerator\n * @param denominator frac denominator\n */\nfunction shouldDerive(numerator: string, denominator: string): { respectTo: string, count: number } | false {\n    if (numerator.startsWith('d') && denominator.startsWith('d') && denominator.length > 1) {\n        let count: number = 1;\n        let countDirective = numerator.substring(1);\n        if (!(count = parseInt(countDirective))) {\n            const isShorthand = countDirective.split('').every(d => d === '\\'');\n            if (isShorthand) count = countDirective.length;\n        }\n        return { respectTo: denominator.substring(1), count: count || 1 }\n    }\n    return false;\n}\n\nclass Commands {\n    @command('divide')\n    static async frac([numerator, denominator]: Content[], siblings: utensils.latexParser.Node[], index: number, context: any) {\n        const {content: num} = await collapseGroup(numerator as any, context);\n        const {content: denom} = await collapseGroup(denominator as any, context);\n        const derive = shouldDerive(num, denom);\n        if (derive) {\n            const expression = replaceFunctionReferencesWithLiterals((await collapseGroup(group(siblings.slice(index + 1)), context)).content, context);\n            // const derived = Algebrite.derivative(expression, derive.respectTo).toString();\n            const derived = (nerdamer as any).diff(expression, derive.respectTo, derive.count).text();\n            siblings.splice(index, siblings.length - 1);\n            siblings[index] = text(derived);\n            return derived;\n        }\n        return `((${(await collapseGroup(numerator as any, context)).content})/(${(await collapseGroup(denominator as any, context)).content}))`;\n    }\n\n    @command()\n    static cdot() {\n        return `*`;\n    }\n\n    @command()\n    static async int(args: Content[], siblings: utensils.latexParser.Node[], index: number, context: any) {\n        let [,,subscript,,superscript,...content] = siblings.slice(index);\n        subscript = await collapseGroup(subscript as Group, context);\n        superscript = await collapseGroup(superscript as Group, context);\n        let strContent = await flattenContentForEvaluation(content, context);\n        const definite = subscript.content.length > 0 && superscript.content.length > 0;\n\n        if (strContent.endsWith('dx')) strContent = strContent.substring(0, strContent.length - 2);\n\n        const { __var__: variables } =  context;\n\n        strContent = nerdamer(strContent, variables).toString();\n\n        let result;\n        if (definite) {\n            result = (nerdamer as any).defint(strContent, subscript.content, superscript.content).text()\n        } else {\n            result = (nerdamer as any).integrate(strContent).text();\n            context.__flags__.noVarSubInPostProcessing = true;\n        }\n        \n        siblings.splice(index, siblings.length - 1);\n\n        return result;\n    }\n\n    @command()\n    static async sqrt(args: Content[], siblings: utensils.latexParser.Node[], index: number, context: any) {\n        return `sqrt(${await astToExpressionTree(args as any, context)})`;\n    }\n\n    @command()\n    static sin(args: Content[]) {\n        return `sin`\n    }\n\n    @command()\n    static cos(args: Content[]) {\n        return `cos`\n    }\n\n    @command()\n    static tan(args: Content[]) {\n        return `tan`;\n    }\n\n    @command()\n    static pi(args: Content[]) {\n        return `pi`;\n    }\n\n    @command()\n    static ln(args: Content[], siblings: utensils.latexParser.Node[], index: number, context: any) {\n        return `log`;\n    }\n\n    @command()\n    static sec() {\n        return `sec`;\n    }\n\n    @command()\n    static csc() {\n        return `csc`;\n    }\n\n    @command()\n    static cot() {\n        return `cot`;\n    }\n\n    @command()\n    static async sum(_: Content[], siblings: utensils.latexParser.Node[], index: number, context: any) {\n        const [,,start,,stop,...content] = siblings.slice(index) as Group[];\n        const {content: startStr} = await collapseGroup(start, context);\n        const {content: stopIdx} = await collapseGroup(stop, context);\n        const contentStr = await flattenContentForEvaluation(content, context);\n        const [variable, startIdx] = startStr.split('=');\n\n        // const result = Algebrite.sum(contentStr, variable, startIdx, stopIdx).toString();\n        const result = (nerdamer).sum(contentStr, variable, startIdx, stopIdx);\n\n        siblings.splice(index, siblings.length - 1);\n\n        return result;\n    }\n\n    @command()\n    static log(args: Content[]) {\n        return `log`;\n    }\n}\n\nonmessage = async function(event: MessageEvent) {\n    const { evaluate, functions, variables, nonce } = event.data;\n    const flags = {};\n    postMessage({\n        nonce,\n        result: await astToExpressionTree(evaluate, Object.assign({}, functions, { __var__: variables, __flags__: flags })),\n        flags\n    }, undefined as any);\n}","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","/*\r\n* Author : Martin Donk\r\n* Website : http://www.nerdamer.com\r\n* Email : martin.r.donk@gmail.com\r\n* License : MIT\r\n* Source : https://github.com/jiggzson/nerdamer\r\n*/\r\n\r\n/* global module */\r\n\r\nif((typeof module) !== 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Calculus.js');\r\n}\r\n\r\n(function() {\r\n    \"use strict\";\r\n    \r\n    /*shortcuts*/\r\n    var core = nerdamer.getCore(),\r\n        _ = core.PARSER,\r\n        N = core.groups.N,\r\n        P = core.groups.P,\r\n        S = core.groups.S,\r\n        EX = core.groups.EX,\r\n        FN = core.groups.FN,\r\n        PL = core.groups.PL,\r\n        CP = core.groups.CP,\r\n        CB = core.groups.CB,\r\n        keys = core.Utils.keys,\r\n        variables = core.Utils.variables,\r\n        format = core.Utils.format,\r\n        round = core.Utils.round,\r\n        Frac = core.Frac,\r\n        isInt = core.Utils.isInt,\r\n        Symbol = core.Symbol,\r\n        CONST_HASH = core.Settings.CONST_HASH,\r\n        math = core.Utils.importFunctions(),\r\n        evaluate = core.Utils.evaluate;\r\n    //*************** CLASSES ***************//\r\n    /**\r\n    * Converts a symbol into an equivalent polynomial arrays of \r\n    * the form [[coefficient_1, power_1],[coefficient_2, power_2], ... ]\r\n    * Univariate polymials only. \r\n    * @param {Symbol|Number} symbol\r\n    * @param {String} variable The variable name of the polynomial\r\n    * @param {int} order\r\n    */\r\n    function Polynomial(symbol, variable, order) { \r\n        if(core.Utils.isSymbol(symbol)) {\r\n            this.parse(symbol);\r\n            this.variable = this.variable || variable;\r\n        }\r\n        else if(!isNaN(symbol)) { \r\n            order = order || 0;\r\n            if(variable === undefined) \r\n                throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');\r\n            this.coeffs = [];\r\n            this.coeffs[order] = symbol;\r\n            this.fill(symbol);\r\n        }\r\n        else if(typeof symbol === 'string') {\r\n            this.parse(_.parse(symbol));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Polynomial given an array of coefficients\r\n     * @param {int[]} arr\r\n     * @param {String} variable\r\n     * @returns {Polynomial}\r\n     */\r\n    Polynomial.fromArray = function(arr, variable) {\r\n        if(typeof variable === 'undefined') \r\n            throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');\r\n        var p = new Polynomial();\r\n        p.coeffs = arr;\r\n        p.variable = variable;\r\n        return p;\r\n    };\r\n    \r\n    Polynomial.fit = function(c1, c2, n, base, p, variable) {\r\n        //after having looped through and mod 10 the number to get the matching factor\r\n        var terms = new Array(p+1),\r\n            t = n-c2;\r\n        terms[0] = c2; //the constants is assumed to be correct\r\n        //constant for x^p is also assumed know so add\r\n        terms[p] = c1;\r\n        t -= c1*Math.pow(base, p);\r\n        //start fitting\r\n        for(var i=p-1; i>0; i--) {\r\n            var b = Math.pow(base, i), //we want as many wholes as possible\r\n                q = t/b,\r\n                sign = Math.sign(q); \r\n            var c = sign*Math.floor(Math.abs(q));\r\n            t -= c*b;\r\n            terms[i] = c;\r\n        }\r\n        if(t !== 0) return null;\r\n        for(var i=0; i<terms.length; i++)\r\n            terms[i] = new Frac(terms[i]);\r\n        \r\n        return Polynomial.fromArray(terms, variable);\r\n    };\r\n\r\n    Polynomial.prototype = { \r\n        /**\r\n         * Converts Symbol to Polynomial\r\n         * @param {Symbol} symbol\r\n         * @param {Array} c - a collector array\r\n         * @returns {Polynomial}\r\n         */\r\n        parse: function(symbol, c) { \r\n            this.variable = variables(symbol)[0]; \r\n            if(!symbol.isPoly()) throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received '+core.Utils.text(symbol));\r\n            c = c || [];\r\n            if(!symbol.power.absEquals(1)) symbol = _.expand(symbol);\r\n\r\n            if(symbol.group === core.groups.N) {\r\n                c[0] = symbol.multiplier; \r\n            }\r\n            else if(symbol.group === core.groups.S) { \r\n                c[symbol.power.toDecimal()] = symbol.multiplier; \r\n            }\r\n            else { \r\n                for(var x in symbol.symbols) { \r\n                    var sub = symbol.symbols[x],\r\n                        p = sub.power; \r\n                    if(core.Utils.isSymbol(p)) throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');\r\n\r\n                    p = sub.group === N ? 0 : p.toDecimal();\r\n                    if(sub.symbols){ \r\n                        this.parse(sub, c);  \r\n                    }\r\n                    else { \r\n                        c[p] = sub.multiplier; \r\n                    }\r\n                }\r\n            }\r\n\r\n            this.coeffs = c;\r\n\r\n            this.fill();\r\n        },\r\n        /**\r\n        * Fills in the holes in a polynomial with zeroes\r\n        * @param {Number} x - The number to fill the holes with\r\n        */\r\n        fill: function(x) {\r\n            x = Number(x) || 0;\r\n            var l = this.coeffs.length;\r\n            for(var i=0; i<l; i++) {\r\n                if(this.coeffs[i] === undefined) { this.coeffs[i] = new Frac(x); }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n        * Removes higher order zeros or a specific coefficient\r\n        * @returns {Array}\r\n        */\r\n        trim: function() { \r\n            var l = this.coeffs.length;\r\n            while(l--) {\r\n                var c = this.coeffs[l];\r\n                var equalsZero = c.equals(0);\r\n                if(c && equalsZero) {\r\n                    if(l === 0) break;\r\n                    this.coeffs.pop();\r\n                }\r\n                else break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /*\r\n         * Returns polynomial mod p **currently fails**\r\n         * @param {Number} p\r\n         * @returns {Polynomial}\r\n         */\r\n        modP: function(p) {\r\n            var l = this.coeffs.length;\r\n            for(var i=0; i<l; i++) {\r\n                var c = this.coeffs[i];\r\n                if(c < 0) { //go borrow\r\n                    var b; //a coefficient > 0\r\n                    for(var j=i; j<l; j++) {//starting from where we left off\r\n                        if(this.coeffs[j] > 0) {\r\n                            b = this.coeffs[j];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(b) { //if such a coefficient exists\r\n                        for(j; j>i; j--) { //go down the line and adjust using p\r\n                            this.coeffs[j] = this.coeffs[j].subtract(new Frac(1));\r\n                            this.coeffs[j-1] = this.coeffs[j-1].add(new Frac(p));\r\n                        }\r\n                        c = this.coeffs[i]; //reset c\r\n                    }\r\n                }\r\n\r\n                var d = c.mod(p);\r\n                var w = c.subtract(d).divide(p);\r\n                if(!w.equals(0)) {\r\n                    var up_one = i+1;\r\n                    var next = this.coeffs[up_one] || new Frac(0);\r\n                    next = next.add(w);\r\n                    this.coeffs[up_one] = new Frac(next);\r\n                    this.coeffs[i] = new Frac(d);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n        * Adds together 2 polynomials\r\n        * @param {Polynomial} poly\r\n        */\r\n        add: function(poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i=0; i<l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                    b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.add(b);\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n        * Adds together 2 polynomials\r\n        * @param {Polynomial} poly\r\n        */\r\n        subtract: function(poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i=0; i<l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                    b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.subtract(b);\r\n            }\r\n            return this;\r\n        },\r\n        divide: function(poly) {\r\n            var variable = this.variable,\r\n                dividend = core.Utils.arrayClone(this.coeffs),\r\n                divisor = core.Utils.arrayClone(poly.coeffs),\r\n                n = dividend.length,\r\n                mp = divisor.length-1,\r\n                quotient = [];\r\n\r\n            //loop through the dividend\r\n            for(var i=0; i<n; i++) {\r\n                var p = n-(i+1);\r\n                //get the difference of the powers\r\n                var d = p - mp;\r\n                //get the quotient of the coefficients\r\n                var q = dividend[p].divide(divisor[mp]);\r\n\r\n                if(d < 0) break;//the divisor is not greater than the dividend\r\n                //place it in the quotient\r\n                quotient[d] = q;\r\n\r\n                for(var j=0; j<=mp; j++) {\r\n                    //reduce the dividend\r\n                    dividend[j+d] = dividend[j+d].subtract((divisor[j].multiply(q)));\r\n                }\r\n            }\r\n\r\n            //clean up\r\n            var p1 = Polynomial.fromArray(dividend, variable || 'x').trim(), //pass in x for safety\r\n                p2 = Polynomial.fromArray(quotient, variable || 'x');\r\n            return [p2, p1];\r\n        },\r\n        multiply: function(poly) {\r\n            var l1 = this.coeffs.length, l2 = poly.coeffs.length, \r\n                c = []; //array to be returned\r\n            for(var i=0; i<l1; i++) {\r\n                var x1 = this.coeffs[i];\r\n                for(var j=0; j<l2; j++) {\r\n                    var k = i+j, //add the powers together\r\n                        x2 = poly.coeffs[j],\r\n                        e = c[k] || new Frac(0); //get the existing term from the new array\r\n                    c[k] = e.add(x1.multiply(x2)); //multiply the coefficients and add to new polynomial array\r\n                }\r\n            }\r\n            this.coeffs = c;\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks if a polynomial is zero\r\n         * @returns {Boolean}\r\n         */\r\n        isZero: function() {\r\n            var l = this.coeffs.length;\r\n            for(var i=0; i<l; i++) {\r\n                var e = this.coeffs[i];\r\n                if(!e.equals(0)) return false;\r\n            }\r\n            return true;\r\n        },\r\n        /** \r\n         * Substitutes in a number n into the polynomial p(n)\r\n         * @param {Number} n\r\n         * @returns {Frac}\r\n         */\r\n        sub: function(n) {\r\n            var sum = new Frac(0), l=this.coeffs.length;\r\n            for(var i=0; i<l; i++) {\r\n                var t = this.coeffs[i];\r\n                if(!t.equals(0)) sum = sum.add(t.multiply(new Frac(Math.pow(n, i))));\r\n            }\r\n            return sum;\r\n        },\r\n        /**\r\n         * Returns a clone of the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        clone: function() {\r\n            var p = new Polynomial();\r\n            p.coeffs = this.coeffs;\r\n            p.variable = this.variable;\r\n            return p;\r\n        },\r\n        /**\r\n         * Gets the degree of the polynomial\r\n         * @returns {Number}\r\n         */\r\n        deg: function() {\r\n            this.trim();\r\n            return this.coeffs.length-1;\r\n        },\r\n        /**\r\n         * Returns a lead coefficient\r\n         * @returns {Frac}\r\n         */\r\n        lc: function() { \r\n            return this.coeffs[this.deg()].clone();\r\n        },\r\n        /**\r\n         * Converts polynomial into a monic polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        monic: function() {\r\n            var lc = this.lc(), l = this.coeffs.length; \r\n            for(var i=0; i<l; i++) this.coeffs[i] = this.coeffs[i].divide(lc);\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the GCD of two polynomials\r\n         * @param {Polynomial} poly\r\n         * @returns {Polynomial}\r\n         */\r\n        gcd: function(poly) { \r\n            //get the maximum power of each\r\n            var mp1 = this.coeffs.length-1, \r\n                mp2 = poly.coeffs.length-1,\r\n                T;\r\n            //swap so we always have the greater power first\r\n            if(mp1 < mp2) {\r\n                return poly.gcd(this);\r\n            }\r\n            var a = this;\r\n\r\n            while(!poly.isZero()) {   \r\n                var t = poly.clone(); \r\n                a = a.clone(); \r\n                T = a.divide(t);\r\n                poly = T[1]; \r\n                a = t; \r\n            }\r\n\r\n            var gcd = core.Math2.QGCD.apply(null, a.coeffs);\r\n            if(!gcd.equals(1)) { \r\n                var l = a.coeffs.length;\r\n                for(var i=0; i<l; i++) {\r\n                    a.coeffs[i] = a.coeffs[i].divide(gcd);\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        /**\r\n         * Differentiates the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        diff: function() {\r\n            var new_array = [], l = this.coeffs.length;\r\n            for(var i=1; i<l; i++) new_array.push(this.coeffs[i].multiply(new Frac(i)));\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Integrates the polynomial\r\n         * @returns {Polynomial} \r\n         */\r\n        integrate: function() {\r\n            var new_array = [0], l = this.coeffs.length;\r\n            for(var i=0; i<l; i++) {\r\n                var c = new Frac(i+1);\r\n                new_array[c] = this.coeffs[i].divide(c);\r\n            }\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the Greatest common factor of the polynomial\r\n         * @param {bool} toPolynomial - true if a polynomial is wanted\r\n         * @returns {Frac|Polynomial}\r\n         */\r\n        gcf: function(toPolynomial) {\r\n            //get the first nozero coefficient and returns its power\r\n            var fnz = function(a) {\r\n                    for(var i=0; i<a.length; i++)\r\n                        if(!a[i].equals(0)) return i;\r\n                },\r\n                ca = [];\r\n            for(var i=0; i<this.coeffs.length; i++) {\r\n                var c = this.coeffs[i];\r\n                if(!c.equals(0) && ca.indexOf(c) === -1) ca.push(c);\r\n            }\r\n            var p = [core.Math2.QGCD.apply(undefined, ca), fnz(this.coeffs)].toDecimal(); \r\n\r\n            if(toPolynomial) {\r\n                var parr = [];\r\n                parr[p[1]-1] = p[0];\r\n                p = Polynomial.fromArray(parr, this.variable).fill();\r\n            }\r\n\r\n            return p;\r\n        },\r\n        /**\r\n         * Raises a polynomial P to a power p -> P^p. e.g. (x+1)^2\r\n         * @param {bool} incl_img - Include imaginary numbers \r\n         */\r\n        quad: function(incl_img) {\r\n            var roots = [];\r\n            if(this.coeffs.length > 3) throw new Error('Cannot calculate quadratic order of '+(this.coeffs.length-1));\r\n            if(this.coeffs.length === 0) throw new Error('Polynomial array has no terms');\r\n            var a = this.coeffs[2] || 0, b = this.coeffs[1] || 0, c = this.coeffs[0];\r\n            var dsc = b*b-4*a*c;\r\n            if(dsc < 0 && !incl_img) return roots;\r\n            else {\r\n                roots[0] = (-b+Math.sqrt(dsc))/(2*a);\r\n                roots[1] = (-b-Math.sqrt(dsc))/(2*a);\r\n            }\r\n            return roots;\r\n        },\r\n        /**\r\n         * Makes polynomial square free\r\n         * @returns {Array}\r\n         */\r\n        squareFree: function() { \r\n            var a = this.clone(),\r\n                i = 1,\r\n                b = a.clone().diff(),\r\n                c = a.clone().gcd(b),\r\n                w = a.divide(c)[0];\r\n            var output = Polynomial.fromArray([new Frac(1)], a.variable);\r\n            while(!c.equalsNumber(1)) { \r\n                var y = w.gcd(c); \r\n                var z = w.divide(y)[0];\r\n                //one of the factors may have shown up since it's square but smaller than the \r\n                //one where finding\r\n                if(!z.equalsNumber(1) && i>1) {\r\n                    var t = z.clone();\r\n                    for(var j=1; j<i; j++)\r\n                        t.multiply(z.clone());\r\n                    z = t;\r\n                }\r\n                output = output.multiply(z); \r\n                i++;\r\n                w = y;\r\n                c = c.divide(y)[0];\r\n            }\r\n            return [output, w, i];\r\n        },\r\n        /**\r\n         * Converts polynomial to Symbol\r\n         * @returns {Symbol}\r\n         */\r\n        toSymbol: function() {\r\n            var l = this.coeffs.length,\r\n                variable = this.variable;\r\n            if(l === 0) return new core.Symbol(0);\r\n            var end = l -1, str = '';\r\n\r\n            for(var i=0; i<l; i++) {\r\n                //place the plus sign for all but the last one\r\n                var plus = i === end ? '' : '+',\r\n                    e = this.coeffs[i];\r\n                if(!e.equals(0)) str += (e+'*'+variable+'^'+i+plus);\r\n            }\r\n            return _.parse(str);\r\n        },\r\n        /**\r\n         * Checks if polynomial is equal to a number\r\n         * @param {Number} x\r\n         * @returns {Boolean}\r\n         */\r\n        equalsNumber: function(x) { \r\n            this.trim();\r\n            return this.coeffs.length === 1 && this.coeffs[0].toDecimal() === String(x);\r\n        },\r\n        toString: function() {\r\n            return this.toSymbol().toString();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TODO\r\n     * ===================================================================================\r\n     * THIS METHOD HAS A NASTY HIDDEN BUG. IT HAS INCONSISTENT RETURN TYPES PRIMARILY DUE TO \r\n     * WRONG ASSUMPTIONS AT THE BEGINNING. THE ASSUMPTION WAS THAT COEFFS WERE ALWAYS GOING BE NUMBERS\r\n     * NOT TAKING INTO ACCOUNT THAT IMAGINARY NUMBERS. FIXING THIS BREAKS WAY TOO MANY TESTS \r\n     * AT THEM MOMENT WHICH I DON'T HAVE TO FIX\r\n     * ===================================================================================\r\n    * If the symbols is of group PL or CP it will return the multipliers of each symbol\r\n    * as these are polynomial coefficients. CB symbols are glued together by multiplication\r\n    * so the symbol multiplier carries the coefficients for all contained symbols.\r\n    * For S it just returns it's own multiplier. This function doesn't care if it's a polynomial or not\r\n    * @param {Array} c The coefficient array\r\n    * @param {boolean} with_order \r\n    * @return {Array}\r\n    */\r\n    Symbol.prototype.coeffs = function(c, with_order) {\r\n        if(with_order && !this.isPoly(true)) _.error('Polynomial expected when requesting coefficients with order');\r\n        c = c || [];\r\n        var s = this.clone().distributeMultiplier(); \r\n        if(s.isComposite()) {\r\n            for(var x in s.symbols) { \r\n                var sub = s.symbols[x];\r\n                if(sub.isComposite()) { \r\n                    sub.clone().distributeMultiplier().coeffs(c, with_order);\r\n                }\r\n                else { \r\n                    if(with_order) c[sub.isConstant() ? 0 : sub.power.toDecimal()] = sub.multiplier;\r\n                    else {\r\n                        c.push(sub.multiplier);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else { \r\n            if(with_order) c[s.isConstant(true) ? 0 : s.power.toDecimal()] = s.multiplier;\r\n            else {\r\n                if(s.group === CB && s.isImaginary()) {\r\n                    var m = new Symbol(s.multiplier);\r\n                    s.each(function(x) {\r\n                       //add the imaginary part\r\n                       if(x.isConstant(true) || x.imaginary)\r\n                           m = _.multiply(m, x);\r\n                    });\r\n                    c.push(m);\r\n                }\r\n                else\r\n                    c.push(s.multiplier);\r\n            }\r\n        }\r\n        //fill the holes\r\n        if(with_order) {\r\n            for(var i=0; i<c.length; i++)\r\n                if(c[i] === undefined) c[i] = new Symbol(0);\r\n        }\r\n        return c;\r\n    };\r\n    Symbol.prototype.tBase = function(map) {\r\n        if(typeof map === 'undefined') throw new Error('Symbol.tBase requires a map object!');\r\n        var terms= [];\r\n        var symbols = this.collectSymbols(null, null, null, true),\r\n            l = symbols.length;\r\n        for(var i=0; i<l; i++) {\r\n            var symbol = symbols[i],\r\n                g = symbol.group,\r\n                nterm = new MVTerm(symbol.multiplier, [], map);\r\n            if(g === CB) {\r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x];\r\n                    nterm.terms[map[x]] = sym.power;\r\n                }\r\n            }\r\n            else {\r\n                nterm.terms[map[symbol.value]] = symbol.power;\r\n            }\r\n            \r\n            terms.push(nterm.fill());\r\n            nterm.updateCount();\r\n        }\r\n        return terms;\r\n    };\r\n    Symbol.prototype.altVar = function(x) {\r\n        var m = this.multiplier.toString(), p = this.power.toString();\r\n        return (m === '1' ? '' : m+'*')+ x + (p === '1' ? '' : '^'+p);\r\n    };\r\n    /**\r\n     * Checks to see if the symbols contain the same variables\r\n     * @param {Symbol} symbol\r\n     * @returns {Boolean}\r\n     */\r\n    Symbol.prototype.sameVars = function(symbol) {\r\n        if(!(this.symbols || this.group === symbol.group)) return false;\r\n        for(var x in this.symbols) {\r\n            var a = this.symbols[x], b = symbol.symbols[x];\r\n            if(!b) return false;\r\n            if(a.value !== b.value) return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Groups the terms in a symbol with respect to a variable\r\n     * For instance the symbol {a*b^2*x^2+a*b*x^2+x+6} returns [6,1,a*b+a*b^2]\r\n     * @returns {Factors}\r\n     */\r\n    Symbol.prototype.groupTerms = function(x) {\r\n        x = String(x);\r\n        var f, p, egrouped;\r\n        var grouped = [];\r\n        this.each(function(e) {\r\n            if(e.group === PL) {\r\n                egrouped = e.groupTerms(x);\r\n                for(var i=0; i<egrouped.length; i++) {\r\n                    var el = egrouped[i];\r\n                    if(el)\r\n                        grouped[i] = el;\r\n                }\r\n            }\r\n            else {\r\n                f = core.Utils.decompose_fn(e, x, true);\r\n                p = f.x.value === x ? Number(f.x.power) : 0;\r\n                //check if there's an existing value\r\n                grouped[p] = _.add(grouped[p] || new Symbol(0), f.a);\r\n            }   \r\n        });\r\n        return grouped;\r\n    };\r\n    /**\r\n     * Use this to collect Factors\r\n     * @returns {Symbol[]}\r\n     */\r\n    Symbol.prototype.collectFactors = function() {\r\n        var factors = [];\r\n        if(this.group === CB)\r\n            this.each(function(x) {\r\n               factors.push(x.clone());\r\n            });\r\n        else\r\n            factors.push(this.clone());\r\n        return factors;\r\n    };\r\n    /**\r\n     * A container class for factors\r\n     * @returns {Factors}\r\n     */\r\n    function Factors() {\r\n        this.factors = {};\r\n        this.length = 0;\r\n    };\r\n    Factors.prototype.getNumberSymbolics = function() {\r\n        var n = 0;\r\n        this.each(function(x) {\r\n            if(!x.isConstant(true))\r\n                n++;\r\n        });\r\n        return n;\r\n    };\r\n    /**\r\n     * Adds the factors to the factor object\r\n     * @param {Symbo} s\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.add = function(s) {\r\n        if(s.equals(0)) \r\n            return this; //nothing to add\r\n        \r\n        //we don't want to carry -1 as a factor. If a factor already exists,\r\n        //then add the minus one to that factor and return.\r\n        if(s.equals(-1) && this.length > 0) { \r\n            var fo = core.Utils.firstObject(this.factors, null, true);\r\n            this.add(_.symfunction(core.Settings.PARENTHESIS, [fo.obj]).negate());\r\n            delete this.factors[fo.key];\r\n            this.length--;\r\n            return this;\r\n        }\r\n        \r\n        if(s.group === CB) { \r\n            var factors = this;\r\n            if(!s.multiplier.equals(1)) \r\n                factors.add(new Symbol(s.multiplier));\r\n            s.each(function(x){\r\n                factors.add(x);\r\n            });\r\n        }\r\n        else {\r\n            if(this.preAdd) //if a preAdd function was defined call it to do prep\r\n                s = this.preAdd(s);\r\n            if(this.pFactor) //if the symbol isn't linear add back the power\r\n                s = _.pow(s, new Symbol(this.pFactor));\r\n\r\n            var is_constant = s.isConstant();\r\n            if(is_constant && s.equals(1)) return this; //don't add 1\r\n            var v = is_constant ? s.value: s.text();\r\n            if(v in this.factors) {\r\n                this.factors[v] = _.multiply(this.factors[v], s);\r\n                //did the addition cancel out the existing factor? If so remove it and decrement the length\r\n                if(this.factors[v].equals(1)) {\r\n                    delete this.factors[v];\r\n                    this.length--;\r\n                }\r\n            }\r\n            else {\r\n                this.factors[v] = s;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the factor object to a Symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Factors.prototype.toSymbol = function() {\r\n        var factored = new Symbol(1);\r\n        var factors = Object.values(this.factors).sort(function(a, b) {\r\n            return a.group > b.group;\r\n        });\r\n        \r\n        for(var i=0, l=factors.length; i<l; i++) {\r\n            var f = factors[i];\r\n            //don't wrap group S or FN\r\n            var factor = f.power.equals(1)? \r\n                _.symfunction(core.PARENTHESIS, [f]) : f;\r\n            factored = _.multiply(factored, factor);\r\n        }\r\n        if(factored.fname === '')\r\n            factored = Symbol.unwrapPARENS(factored);\r\n        return factored;\r\n    };\r\n    /**\r\n     * Merges 2 factor objects into one\r\n     * @param {Factor} o\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.merge = function(o) {\r\n        for(var x in o) {\r\n            if(x in this.factors) \r\n                this.factors[x] = _.multiply(this.factors[x], o[x]);\r\n            else this.factors[x] = o[x];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * The iterator for the factor object\r\n     * @param {Function} f - callback\r\n     * @returns {Factor}\r\n     */\r\n    Factors.prototype.each = function(f) {\r\n        for(var x in this.factors) {\r\n            var factor = this.factors[x];\r\n            if(factor.fname === core.PARENTHESIS && factor.isLinear())\r\n                factor = factor.args[0];\r\n            f.call(this, factor, x);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the number of factors contained in the factor object\r\n     * @returns {int}\r\n     */\r\n    Factors.prototype.count = function() {\r\n        return keys(this.factors).length;\r\n    };\r\n    /**\r\n     * Cleans up factors from -1\r\n     * @returns {undefined}\r\n     */\r\n    Factors.prototype.clean = function() {\r\n        try {\r\n            var h = core.Settings.CONST_HASH;\r\n            if(this.factors[h].lessThan(0)) {\r\n                if(this.factors[h].equals(-1))\r\n                    delete this.factors[h];\r\n                else\r\n                    this.factors[h].negate();\r\n                this.each(function(x) {\r\n                    x.negate();\r\n                });\r\n            }\r\n        }\r\n        catch(e){};\r\n    };\r\n    Factors.prototype.toString = function() {\r\n        return this.toSymbol().toString();\r\n    };\r\n    \r\n    //a wrapper for performing multivariate division\r\n    function MVTerm(coeff, terms, map) {\r\n        this.terms = terms || [];\r\n        this.coeff = coeff;\r\n        this.map = map; //careful! all maps are the same object\r\n        this.sum = new core.Frac(0);\r\n        this.image = undefined;\r\n    };\r\n    MVTerm.prototype.updateCount = function() {\r\n        this.count = this.count || 0;\r\n        for(var i=0; i<this.terms.length; i++) {\r\n            if(!this.terms[i].equals(0)) this.count++;\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.getVars = function() {\r\n        var vars = [];\r\n        for(var i=0; i<this.terms.length; i++) {\r\n            var term = this.terms[i],\r\n                rev_map = this.getRevMap();\r\n            if(!term.equals(0)) vars.push(this.rev_map[i]);\r\n        }\r\n        return vars.join(' ');\r\n    };\r\n    MVTerm.prototype.len = function() {\r\n        if(typeof this.count === 'undefined') {\r\n            this.updateCount();\r\n        }\r\n        return this.count;\r\n    };\r\n    MVTerm.prototype.toSymbol = function(rev_map) {\r\n        rev_map = rev_map || this.getRevMap();\r\n        var symbol = new Symbol(this.coeff); \r\n        for(var i=0; i<this.terms.length; i++) {\r\n            var v = rev_map[i],\r\n                t = this.terms[i];\r\n            if(t.equals(0) || v === CONST_HASH) continue;\r\n            var mapped = new Symbol(v);\r\n            mapped.power = t;\r\n            symbol = _.multiply(symbol, mapped);\r\n        }\r\n        return symbol;\r\n    };\r\n    MVTerm.prototype.getRevMap = function() {\r\n        if(this.rev_map) return this.rev_map;\r\n        var o = {};\r\n        for(var x in this.map) o[this.map[x]] = x;\r\n        this.rev_map = o;\r\n        return o;\r\n    };\r\n    MVTerm.prototype.generateImage = function() {\r\n        this.image = this.terms.join(' ');\r\n        return this;\r\n    },\r\n    MVTerm.prototype.getImg = function() {\r\n        if(!this.image) this.generateImage();\r\n        return this.image;\r\n    },\r\n    MVTerm.prototype.fill = function() {\r\n        var l = this.map.length;\r\n        for(var i=0; i<l; i++) {\r\n            if(typeof this.terms[i] === 'undefined') this.terms[i] = new core.Frac(0);\r\n            else {\r\n                this.sum = this.sum.add(this.terms[i]);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.divide = function(mvterm) {\r\n        var c = this.coeff.divide(mvterm.coeff),\r\n            l = this.terms.length,\r\n            new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i=0; i<l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].subtract(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.multiply = function(mvterm) {\r\n        var c = this.coeff.multiply(mvterm.coeff),\r\n            l = this.terms.length,\r\n            new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i=0; i<l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].add(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.isZero = function() {\r\n        return this.coeff.equals(0);\r\n    };\r\n    MVTerm.prototype.toString = function() {\r\n        return '{ coeff: '+this.coeff.toString()+', terms: ['+\r\n                this.terms.join(',')+']: sum: '+this.sum.toString()+', count: '+this.count+'}';\r\n    };\r\n    \r\n    core.Utils.toMapObj = function(arr) {\r\n        var c = 0, o = {};\r\n        for(var i=0; i<arr.length; i++) {\r\n            var v = arr[i];\r\n            if(typeof o[v] === 'undefined') {\r\n                o[v] = c; c++;\r\n            }\r\n        }\r\n        o.length = c;\r\n        return o;\r\n    };\r\n    core.Utils.filledArray = function(v, n, clss) {\r\n        var a = [];\r\n        while (n--) {\r\n          a[n] = clss ? new clss(v) : v;\r\n        }\r\n        return a;\r\n    };\r\n    core.Utils.arrSum = function(arr) {\r\n        var sum = 0, l = arr.length;\r\n        for(var i=0; i<l; i++) sum += arr[i];\r\n        return sum;\r\n    };    \r\n    /**\r\n     * Determines if 2 arrays have intersecting elements.\r\n     * @param {Array} a\r\n     * @param {Array} b\r\n     * @returns {Boolean} True if a and b have intersecting elements.\r\n     */\r\n    core.Utils.haveIntersection = function(a, b) {\r\n        var t;\r\n        if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\r\n        return a.some(function (e) {\r\n            return b.indexOf(e) > -1;\r\n        });\r\n    };\r\n    /**\r\n     * Substitutes out functions as variables so they can be used in regular algorithms\r\n     * @param {Symbol} symbol\r\n     * @param {Object} map\r\n     * @returns {String} The expression string\r\n     */\r\n    core.Utils.subFunctions = function(symbol, map) {\r\n        map = map || {};\r\n        var subbed = [];\r\n        symbol.each(function(x) {\r\n            if(x.group === FN || x.previousGroup === FN) {\r\n                //we need a new variable name so why not use one of the existing\r\n                var val = core.Utils.text(x, 'hash'), tvar = map[val];\r\n                if(!tvar) {\r\n                    //generate a unique enough name\r\n                    var t = x.fname+keys(map).length;\r\n                    map[val] = t;\r\n                    subbed.push(x.altVar(t));\r\n                }\r\n                else subbed.push(x.altVar(tvar));\r\n            }\r\n            else if(x.group === CB || x.group === PL || x.group === CP) {\r\n                subbed.push(core.Utils.subFunctions(x, map));\r\n            }\r\n            else subbed.push(x.text());\r\n        });\r\n        if(symbol.group === CP || symbol.group === PL) return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));;\r\n        if(symbol.group === CB) return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));\r\n        return symbol.text();\r\n    };\r\n    core.Utils.getFunctionsSubs = function(map) {\r\n        var subs = {};\r\n        //prepare substitutions\r\n        for(var x in map) subs[map[x]] = _.parse(x);\r\n        return subs;\r\n    };\r\n    var __ = core.Algebra = {\r\n        version: '1.4.5',\r\n        init: (function() {})(),\r\n        proots: function(symbol, decp) { \r\n            //the roots will be rounded up to 7 decimal places.\r\n            //if this causes trouble you can explicitly pass in a different number of places\r\n            //rarr for polynomial of power n is of format [n, coeff x^n, coeff x^(n-1), ..., coeff x^0]\r\n            decp = decp || 7;\r\n            var zeros = 0;\r\n            var known_roots = [];\r\n            var get_roots = function(rarr, powers, max) {\r\n                var roots = calcroots(rarr, powers, max).concat(known_roots);\r\n                for(var i=0;i<zeros;i++) roots.unshift(0);\r\n                return roots;\r\n            };\r\n            \r\n            if(symbol instanceof Symbol && symbol.isPoly()) { \r\n                symbol.distributeMultiplier();\r\n                //make it so the symbol has a constants as the lowest term\r\n                if(symbol.group === PL) {\r\n                    var lowest_pow = core.Utils.arrayMin(keys(symbol.symbols));\r\n                    var lowest_symbol = symbol.symbols[lowest_pow].clone().toUnitMultiplier();\r\n                    symbol = _.expand(_.divide(symbol, lowest_symbol));\r\n                    known_roots.push(0); //add zero since this is a known root\r\n                }\r\n                if(symbol.group === core.groups.S) { \r\n                    return [0];\r\n                }\r\n                else if(symbol.group === core.groups.PL) { \r\n                    var powers = keys(symbol.symbols),\r\n                        minpower = core.Utils.arrayMin(powers),\r\n                    symbol = core.PARSER.divide(symbol, core.PARSER.parse(symbol.value+'^'+minpower));\r\n                }\r\n\r\n                var variable = keys(symbol.symbols).sort().pop(), \r\n                    sym = symbol.group === core.groups.PL ? symbol.symbols : symbol.symbols[variable], \r\n                    g = sym.group,\r\n                    powers = g === S ? [sym.power.toDecimal()] : keys(sym.symbols),\r\n                    rarr = [],\r\n                    max = core.Utils.arrayMax(powers); //maximum power and degree of polynomial to be solved\r\n\r\n                // Prepare the data\r\n                for(var i=1; i<=max; i++) { \r\n                    var c = 0; //if there is no power then the hole must be filled with a zero\r\n                    if(powers.indexOf(i+'') !== -1) { \r\n                        if(g === S) { \r\n                            c = sym.multiplier; \r\n                        }\r\n                        else {\r\n                            c = sym.symbols[i].multiplier;\r\n                        }\r\n                    }\r\n                    // Insert the coeffient but from the front\r\n                    rarr.unshift(c);\r\n                }\r\n                \r\n                rarr.push(symbol.symbols[CONST_HASH].multiplier);\r\n\r\n                if(sym.group === S) rarr[0] = sym.multiplier;//the symbol maybe of group CP with one variable\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else if(core.Utils.isArray(symbol)) {\r\n                var parr = symbol;\r\n                var rarr = [],\r\n                    powers = [],\r\n                    last_power = 0;\r\n                for(var i=0; i<parr.length; i++) {\r\n                    \r\n                    var coeff = parr[i][0],\r\n                        pow = parr[i][1],\r\n                        d = pow - last_power - 1;\r\n                    //insert the zeros\r\n                    for(var j=0; j<d; j++) rarr.unshift(0);\r\n                    \r\n                    rarr.unshift(coeff);\r\n                    if(pow !== 0) powers.push(pow);\r\n                    last_power = pow;\r\n                }\r\n                var max = Math.max.apply(undefined, powers);\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else {\r\n                throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');\r\n            }\r\n\r\n            function calcroots(rarr, powers, max){\t\r\n                var MAXDEGREE = 100; // Degree of largest polynomial accepted by this script.\r\n\r\n                // Make a clone of the coefficients before appending the max power\r\n                var p = rarr.slice(0);\r\n\r\n                // Divide the string up into its individual entries, which--presumably--are separated by whitespace\r\n                rarr.unshift(max);\r\n\r\n                if (max > MAXDEGREE){\r\n                    throw new core.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to \" + MAXDEGREE + \". \");\r\n                }\r\n\r\n                var zeroi = [],   // Vector of imaginary components of roots\r\n                    degreePar = {};    // degreePar is a dummy variable for passing the parameter POLYDEGREE by reference\r\n                degreePar.Degree = max; \r\n\r\n                for (i = 0; i < max; i++) {\r\n                    zeroi.push(0);\r\n                }\r\n                var zeror = zeroi.slice(0); // Vector of real components of roots\r\n\r\n                // Find the roots\r\n                //--> Begin Jenkins-Traub\r\n\r\n                /*\r\n                 * A verbatim copy of Mr. David Binner's Jenkins-Traub port\r\n                */\r\n               function QuadSD_ak1(NN, u, v, p, q, iPar){\r\n                   // Divides p by the quadratic 1, u, v placing the quotient in q and the remainder in a, b\r\n                   // iPar is a dummy variable for passing in the two parameters--a and b--by reference\r\n                   q[0] = iPar.b = p[0];\r\n                   q[1] = iPar.a = -(u*iPar.b) + p[1];\r\n\r\n                   for (var i = 2; i < NN; i++){\r\n                       q[i] = -(u*iPar.a + v*iPar.b) + p[i];\r\n                       iPar.b = iPar.a;\r\n                       iPar.a = q[i];\r\n                   } \r\n                   return;\r\n               } \r\n\r\n               function calcSC_ak1(DBL_EPSILON, N, a, b, iPar, K, u, v, qk){\r\n                   // This routine calculates scalar quantities used to compute the next K polynomial and\r\n                   // new estimates of the quadratic coefficients.\r\n                   // calcSC -\tinteger variable set here indicating how the calculations are normalized\r\n                   // to avoid overflow.\r\n                   // iPar is a dummy variable for passing in the nine parameters--a1, a3, a7, c, d, e, f, g, and h --by reference\r\n\r\n                   // sdPar is a dummy variable for passing the two parameters--c and d--into QuadSD_ak1 by reference\r\n                   var sdPar = new Object(),    \r\n                   // TYPE = 3 indicates the quadratic is almost a factor of K\r\n                       dumFlag = 3;\t\r\n\r\n                   // Synthetic division of K by the quadratic 1, u, v\r\n                   sdPar.b =  sdPar.a = 0.0;\r\n                   QuadSD_ak1(N, u, v, K, qk, sdPar);\r\n                   iPar.c = sdPar.a;\r\n                   iPar.d = sdPar.b;\r\n\r\n                   if (Math.abs(iPar.c) <= (100.0*DBL_EPSILON*Math.abs(K[N - 1]))) {\r\n                       if (Math.abs(iPar.d) <= (100.0*DBL_EPSILON*Math.abs(K[N - 2])))  return dumFlag;\r\n                   } \r\n\r\n                   iPar.h = v*b;\r\n                   if (Math.abs(iPar.d) >= Math.abs(iPar.c)){\r\n                         // TYPE = 2 indicates that all formulas are divided by d\r\n                       dumFlag = 2;\t\t\r\n                       iPar.e = a/(iPar.d);\r\n                       iPar.f = (iPar.c)/(iPar.d);\r\n                       iPar.g = u*b;\r\n                       iPar.a3 = (iPar.e)*((iPar.g) + a) + (iPar.h)*(b/(iPar.d));\r\n                       iPar.a1 = -a + (iPar.f)*b;\r\n                       iPar.a7 = (iPar.h) + ((iPar.f) + u)*a;\r\n                   } \r\n                   else {\r\n                       // TYPE = 1 indicates that all formulas are divided by c;\r\n                       dumFlag = 1;\t\t\r\n                       iPar.e = a/(iPar.c);\r\n                       iPar.f = (iPar.d)/(iPar.c);\r\n                       iPar.g = (iPar.e)*u;\r\n                       iPar.a3 = (iPar.e)*a + ((iPar.g) + (iPar.h)/(iPar.c))*b;\r\n                       iPar.a1 = -(a*((iPar.d)/(iPar.c))) + b;\r\n                       iPar.a7 = (iPar.g)*(iPar.d) + (iPar.h)*(iPar.f) + a;\r\n                   } \r\n                   return dumFlag;\r\n               } \r\n\r\n               function nextK_ak1(DBL_EPSILON, N, tFlag, a, b, iPar, K, qk, qp){\r\n                   // Computes the next K polynomials using the scalars computed in calcSC_ak1\r\n                   // iPar is a dummy variable for passing in three parameters--a1, a3, and a7\r\n                   var temp;\r\n                   if (tFlag == 3){\t// Use unscaled form of the recurrence\r\n                       K[1] = K[0] = 0.0;\r\n                       for (var i = 2; i < N; i++)\t { K[i] = qk[i - 2]; }\r\n                       return;\r\n                   } \r\n\r\n                   temp = ((tFlag == 1) ? b : a);\r\n                   if (Math.abs(iPar.a1) > (10.0*DBL_EPSILON*Math.abs(temp))){\r\n                       // Use scaled form of the recurrence\r\n                       iPar.a7 /= iPar.a1;\r\n                       iPar.a3 /= iPar.a1;\r\n                       K[0] = qp[0];\r\n                       K[1] = -(qp[0]*iPar.a7) + qp[1];\r\n                       for (var i = 2; i < N; i++)\t K[i] = -(qp[i - 1]*iPar.a7) + qk[i - 2]*iPar.a3 + qp[i];\r\n                   } \r\n                   else {\r\n                       // If a1 is nearly zero, then use a special form of the recurrence\r\n                       K[0] = 0.0;\r\n                       K[1] = -(qp[0]*iPar.a7);\r\n                       for (var i = 2; i < N; i++) { K[i] = -(qp[i - 1]*iPar.a7) + qk[i - 2]*iPar.a3; }\r\n                   } \r\n                   return;\r\n               }\r\n\r\n               function newest_ak1(tFlag, iPar, a, a1, a3, a7, b, c, d, f, g, h, u, v, K, N, p){\r\n                   // Compute new estimates of the quadratic coefficients using the scalars computed in calcSC_ak1\r\n                   // iPar is a dummy variable for passing in the two parameters--uu and vv--by reference\r\n                   // iPar.a = uu, iPar.b = vv\r\n\r\n                   var a4, a5, b1, b2, c1, c2, c3, c4, temp;\r\n                   iPar.b = iPar.a = 0.0;// The quadratic is zeroed\r\n\r\n                   if (tFlag != 3){\r\n                       if (tFlag != 2){\r\n                           a4 = a + u*b + h*f;\r\n                           a5 = c + (u + v*f)*d;\r\n                       } \r\n                       else { \r\n                           a4 = (a + g)*f + h;\r\n                           a5 = (f + u)*c + v*d;\r\n                       } \r\n\r\n                       // Evaluate new quadratic coefficients\r\n                       b1 = -(K[N - 1]/p[N]);\r\n                       b2 = -(K[N - 2] + b1*p[N - 1])/p[N];\r\n                       c1 = v*b2*a1;\r\n                       c2 = b1*a7;\r\n                       c3 = b1*b1*a3;\r\n                       c4 = -(c2 + c3) + c1;\r\n                       temp = -c4 + a5 + b1*a4;\r\n                       if (temp != 0.0) {\r\n                           iPar.a = -((u*(c3 + c2) + v*(b1*a1 + b2*a7))/temp) + u;\r\n                           iPar.b = v*(1.0 + c4/temp);\r\n                       } \r\n                   } \r\n                   return;\r\n               } \r\n\r\n               function Quad_ak1(a, b1, c, iPar){\r\n                   // Calculates the zeros of the quadratic a*Z^2 + b1*Z + c\r\n                   // The quadratic formula, modified to avoid overflow, is used to find the larger zero if the\r\n                   // zeros are real and both zeros are complex. The smaller real zero is found directly from\r\n                   // the product of the zeros c/a.\r\n\r\n                   // iPar is a dummy variable for passing in the four parameters--sr, si, lr, and li--by reference\r\n\r\n                   var b, d, e;\r\n                   iPar.sr = iPar.si = iPar.lr = iPar.li = 0.0;\r\n\r\n                   if (a == 0) {\r\n                       iPar.sr = ((b1 != 0) ? -(c/b1) : iPar.sr);\r\n                       return;\r\n                   } \r\n                   if (c == 0){\r\n                       iPar.lr = -(b1/a);\r\n                       return;\r\n                   } \r\n\r\n                   // Compute discriminant avoiding overflow\r\n                   b = b1/2.0;\r\n                   if (Math.abs(b) < Math.abs(c)){\r\n                       e = ((c >= 0) ? a : -a);\r\n                       e = -e + b*(b/Math.abs(c));\r\n                       d = Math.sqrt(Math.abs(e))*Math.sqrt(Math.abs(c));\r\n                   } \r\n                   else { \r\n                       e = -((a/b)*(c/b)) + 1.0;\r\n                       d = Math.sqrt(Math.abs(e))*(Math.abs(b));\r\n                   } \r\n\r\n                   if (e >= 0) {\r\n                       // Real zeros\r\n                       d = ((b >= 0) ? -d : d);\r\n                       iPar.lr = (-b + d)/a;\r\n                       iPar.sr = ((iPar.lr != 0) ? (c/(iPar.lr))/a : iPar.sr);\r\n                   }\r\n                   else { \r\n                       // Complex conjugate zeros\r\n                       iPar.lr = iPar.sr = -(b/a);\r\n                       iPar.si = Math.abs(d/a);\r\n                       iPar.li = -(iPar.si);\r\n                   } \r\n                   return;\r\n               }  \r\n\r\n               function QuadIT_ak1(DBL_EPSILON, N, iPar, uu, vv, qp, NN, sdPar, p, qk, calcPar, K){\r\n                   // Variable-shift K-polynomial iteration for a quadratic factor converges only if the\r\n                   // zeros are equimodular or nearly so.\r\n                   // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                   // sdPar is a dummy variable for passing the two parameters--a and b--in by reference\r\n                   // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --in by reference\r\n\r\n                   // qPar is a dummy variable for passing the four parameters--szr, szi, lzr, and lzi--into Quad_ak1 by reference\r\n                   var qPar = new Object(),    \r\n                       ee, mp, omp, relstp, t, u, ui, v, vi, zm,\r\n                       i, j = 0, tFlag, triedFlag = 0;   // Integer variables\r\n\r\n                   iPar.NZ = 0;// Number of zeros found\r\n                   u = uu; // uu and vv are coefficients of the starting quadratic\r\n                   v = vv;\r\n\r\n                   do {\r\n                       qPar.li = qPar.lr =  qPar.si = qPar.sr = 0.0;\r\n                       Quad_ak1(1.0, u, v, qPar);\r\n                       iPar.szr = qPar.sr;\r\n                       iPar.szi = qPar.si;\r\n                       iPar.lzr = qPar.lr;\r\n                       iPar.lzi = qPar.li;\r\n\r\n                       // Return if roots of the quadratic are real and not close to multiple or nearly\r\n                       // equal and of opposite sign.\r\n                       if (Math.abs(Math.abs(iPar.szr) - Math.abs(iPar.lzr)) > 0.01*Math.abs(iPar.lzr))  break;\r\n\r\n                       // Evaluate polynomial by quadratic synthetic division\r\n\r\n                       QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n\r\n                       mp = Math.abs(-((iPar.szr)*(sdPar.b)) + (sdPar.a)) + Math.abs((iPar.szi)*(sdPar.b));\r\n\r\n                       // Compute a rigorous bound on the rounding error in evaluating p\r\n\r\n                       zm = Math.sqrt(Math.abs(v));\r\n                       ee = 2.0*Math.abs(qp[0]);\r\n                       t = -((iPar.szr)*(sdPar.b));\r\n\r\n                       for (i = 1; i < N; i++)  { ee = ee*zm + Math.abs(qp[i]); }\r\n\r\n                       ee = ee*zm + Math.abs(t + sdPar.a);\r\n                       ee = (9.0*ee + 2.0*Math.abs(t) - 7.0*(Math.abs((sdPar.a) + t) + zm*Math.abs((sdPar.b))))*DBL_EPSILON;\r\n\r\n                       // Iteration has converged sufficiently if the polynomial value is less than 20 times this bound\r\n                       if (mp <= 20.0*ee){\r\n                           iPar.NZ = 2;\r\n                           break;\r\n                       } \r\n\r\n                       j++;\r\n                       // Stop iteration after 20 steps\r\n                       if (j > 20)  break;\r\n                       if (j >= 2){\r\n                           if ((relstp <= 0.01) && (mp >= omp) && (!triedFlag)){\r\n                               // A cluster appears to be stalling the convergence. Five fixed shift\r\n                               // steps are taken with a u, v close to the cluster.\r\n                               relstp = ((relstp < DBL_EPSILON) ? Math.sqrt(DBL_EPSILON) : Math.sqrt(relstp));\r\n                               u -= u*relstp;\r\n                               v += v*relstp;\r\n\r\n                               QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                               for (i = 0; i < 5; i++){\r\n                                   tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                                   nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                               } \r\n\r\n                               triedFlag = 1;\r\n                               j = 0;\r\n\r\n                           } \r\n                       }\r\n                       omp = mp;\r\n\r\n                       // Calculate next K polynomial and new u and v\r\n                       tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                       nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                       tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                       newest_ak1(tFlag, sdPar, sdPar.a, calcPar.a1, calcPar.a3, calcPar.a7, sdPar.b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                       ui = sdPar.a;\r\n                       vi = sdPar.b;\r\n\r\n                       // If vi is zero, the iteration is not converging\r\n                       if (vi != 0){\r\n                           relstp = Math.abs((-v + vi)/vi);\r\n                           u = ui;\r\n                           v = vi;\r\n                       } \r\n                   } while (vi != 0); \r\n                   return;\r\n               } \r\n\r\n               function RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk){\r\n                   // Variable-shift H-polynomial iteration for a real zero\r\n                   // sss\t- starting iterate = sdPar.a\r\n                   // NZ\t\t- number of zeros found = iPar.NZ\r\n                   // dumFlag\t- flag to indicate a pair of zeros near real axis, returned to iFlag\r\n\r\n                   var ee, kv, mp, ms, omp, pv, s, t,\r\n                       dumFlag, i, j, nm1 = N - 1;   // Integer variables\r\n\r\n                   iPar.NZ = j = dumFlag = 0;\r\n                   s = sdPar.a;\r\n\r\n                   for ( ; ; ) {\r\n                       pv = p[0];\r\n\r\n                       // Evaluate p at s\r\n                       qp[0] = pv;\r\n                       for (i = 1; i < NN; i++)  { qp[i] = pv = pv*s + p[i]; }\r\n                       mp = Math.abs(pv);\r\n\r\n                       // Compute a rigorous bound on the error in evaluating p\r\n                       ms = Math.abs(s);\r\n                       ee = 0.5*Math.abs(qp[0]);\r\n                       for (i = 1; i < NN; i++)  { ee = ee*ms + Math.abs(qp[i]); }\r\n\r\n                       // Iteration has converged sufficiently if the polynomial value is less than\r\n                       // 20 times this bound\r\n                       if (mp <= 20.0*DBL_EPSILON*(2.0*ee - mp)){\r\n                           iPar.NZ = 1;\r\n                           iPar.szr = s;\r\n                           iPar.szi = 0.0;\r\n                           break;\r\n                       } \r\n                       j++;\r\n                       // Stop iteration after 10 steps\r\n                       if (j > 10)  break;\r\n\r\n                       if (j >= 2){\r\n                           if ((Math.abs(t) <= 0.001*Math.abs(-t + s)) && (mp > omp)){\r\n                               // A cluster of zeros near the real axis has been encountered.\r\n                               // Return with iFlag set to initiate a quadratic iteration.\r\n                               dumFlag = 1;\r\n                               iPar.a = s;\r\n                               break;\r\n                           } // End if ((fabs(t) <= 0.001*fabs(s - t)) && (mp > omp))\r\n                       } //End if (j >= 2)\r\n\r\n                       // Return if the polynomial value has increased significantly\r\n                       omp = mp;\r\n\r\n                       // Compute t, the next polynomial and the new iterate\r\n                       qk[0] = kv = K[0];\r\n                       for (i = 1; i < N; i++)\t { qk[i] = kv = kv*s + K[i]; }\r\n\r\n                       if (Math.abs(kv) > Math.abs(K[nm1])*10.0*DBL_EPSILON){\r\n                           // Use the scaled form of the recurrence if the value of K at s is non-zero\r\n                           t = -(pv/kv);\r\n                           K[0] = qp[0];\r\n                           for (i = 1; i < N; i++) { K[i] = t*qk[i - 1] + qp[i]; }\r\n                       }\r\n                       else { \r\n                           // Use unscaled form\r\n                           K[0] = 0.0;\r\n                           for (i = 1; i < N; i++)\t K[i] = qk[i - 1];\r\n                       }\r\n\r\n                       kv = K[0];\r\n                       for (i = 1; i < N; i++) { kv = kv*s + K[i]; }\r\n                       t = ((Math.abs(kv) > (Math.abs(K[nm1])*10.0*DBL_EPSILON)) ? -(pv/kv) : 0.0);\r\n                       s += t;\r\n                   } \r\n                   return dumFlag;\r\n               } \r\n\r\n               function Fxshfr_ak1(DBL_EPSILON, MDP1, L2, sr, v, K, N, p, NN, qp, u, iPar){\r\n\r\n                   // Computes up to L2 fixed shift K-polynomials, testing for convergence in the linear or\r\n                   // quadratic case. Initiates one of the variable shift iterations and returns with the\r\n                   // number of zeros found.\r\n                   // L2\tlimit of fixed shift steps\r\n                   // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                   // NZ\tnumber of zeros found\r\n                   var sdPar = new Object(),    // sdPar is a dummy variable for passing the two parameters--a and b--into QuadSD_ak1 by reference\r\n                       calcPar = new Object(),\r\n                       // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --into calcSC_ak1 by reference\r\n\r\n                       qk = new Array(MDP1),\r\n                       svk = new Array(MDP1),\r\n                       a, b, betas, betav, oss, ots, otv, ovv, s, ss, ts, tss, tv, tvv, ui, vi, vv,\r\n                       fflag, i, iFlag = 1, j, spass, stry, tFlag, vpass, vtry;     // Integer variables\r\n\r\n                   iPar.NZ = 0;\r\n                   betav = betas = 0.25;\r\n                   oss = sr;\r\n                   ovv = v;\r\n\r\n                   //Evaluate polynomial by synthetic division\r\n                   sdPar.b =  sdPar.a = 0.0;\r\n                   QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                   a = sdPar.a;\r\n                   b = sdPar.b;\r\n                   calcPar.h = calcPar.g = calcPar.f = calcPar.e = calcPar.d = calcPar.c = calcPar.a7 = calcPar.a3 = calcPar.a1 = 0.0;\r\n                   tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                   for (j = 0; j < L2; j++){\r\n                       fflag = 1;\r\n\r\n                       // Calculate next K polynomial and estimate v\r\n                       nextK_ak1(DBL_EPSILON, N, tFlag, a, b, calcPar, K, qk, qp);\r\n                       tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                       // Use sdPar for passing in uu and vv instead of defining a brand-new variable.\r\n                       // sdPar.a = ui, sdPar.b = vi\r\n                       newest_ak1(tFlag, sdPar, a, calcPar.a1, calcPar.a3, calcPar.a7, b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                       ui = sdPar.a;\r\n                       vv = vi = sdPar.b;\r\n\r\n                       // Estimate s\r\n                       ss = ((K[N - 1] != 0.0) ? -(p[N]/K[N - 1]) : 0.0);\r\n                       ts = tv = 1.0;\r\n\r\n                       if ((j != 0) && (tFlag != 3)){\r\n                           // Compute relative measures of convergence of s and v sequences\r\n                           tv = ((vv != 0.0) ? Math.abs((vv - ovv)/vv) : tv);\r\n                           ts = ((ss != 0.0) ? Math.abs((ss - oss)/ss) : ts);\r\n\r\n                           // If decreasing, multiply the two most recent convergence measures\r\n                           tvv = ((tv < otv) ? tv*otv : 1.0);\r\n                           tss = ((ts < ots) ? ts*ots : 1.0);\r\n\r\n                           // Compare with convergence criteria\r\n                           vpass = ((tvv < betav) ? 1 : 0);\r\n                           spass = ((tss < betas) ? 1 : 0);\r\n\r\n                           if ((spass) || (vpass)){\r\n\r\n                               // At least one sequence has passed the convergence test.\r\n                               // Store variables before iterating\r\n\r\n                               for (i = 0; i < N; i++) { svk[i] = K[i]; }\r\n                               s = ss;\r\n\r\n                               // Choose iteration according to the fastest converging sequence\r\n\r\n                                 stry = vtry = 0;\r\n\r\n                               for ( ; ; ) {\r\n                                   if ((fflag && ((fflag = 0) == 0)) && ((spass) && (!vpass || (tss < tvv)))){\r\n                                       ;// Do nothing. Provides a quick \"short circuit\".\r\n                                   } \r\n                                   else { \r\n                                       QuadIT_ak1(DBL_EPSILON, N, iPar, ui, vi, qp, NN, sdPar, p, qk, calcPar, K);\r\n                                       a = sdPar.a;\r\n                                       b = sdPar.b;\r\n\r\n                                       if ((iPar.NZ) > 0) return;\r\n\r\n                                       // Quadratic iteration has failed. Flag that it has been tried and decrease the\r\n                                       // convergence criterion\r\n                                       iFlag = vtry = 1;\r\n                                       betav *= 0.25;\r\n\r\n                                       // Try linear iteration if it has not been tried and the s sequence is converging\r\n                                       if (stry || (!spass)){\r\n                                           iFlag = 0;\r\n                                       }\r\n                                       else {\r\n                                           for (i = 0; i < N; i++) K[i] = svk[i];\r\n                                       } \r\n                                   }\r\n                                   //fflag = 0;\r\n                                   if (iFlag != 0){\r\n                                       // Use sdPar for passing in s instead of defining a brand-new variable.\r\n                                       // sdPar.a = s\r\n                                       sdPar.a = s;\r\n                                       iFlag = RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk);\r\n                                       s = sdPar.a;\r\n\r\n                                       if ((iPar.NZ) > 0) return;\r\n\r\n                                       // Linear iteration has failed. Flag that it has been tried and decrease the\r\n                                       // convergence criterion\r\n                                       stry = 1;\r\n                                       betas *= 0.25;\r\n\r\n                                       if (iFlag != 0){\r\n                                           // If linear iteration signals an almost double real zero, attempt quadratic iteration\r\n                                           ui = -(s + s);\r\n                                           vi = s*s;\r\n                                           continue;\r\n\r\n                                       } \r\n                                   } \r\n\r\n                                   // Restore variables\r\n                                   for (i = 0; i < N; i++) K[i] = svk[i];\r\n\r\n                                   // Try quadratic iteration if it has not been tried and the v sequence is converging\r\n                                   if (!vpass || vtry) break;\t\t// Break out of infinite for loop\r\n\r\n                               } \r\n\r\n                               // Re-compute qp and scalar values to continue the second stage\r\n\r\n                               QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                               a = sdPar.a;\r\n                               b = sdPar.b;\r\n\r\n                               tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n                           } \r\n                       } \r\n                       ovv = vv;\r\n                       oss = ss;\r\n                       otv = tv;\r\n                       ots = ts;\r\n                   } \r\n                   return;\r\n               }  \r\n\r\n               function rpSolve(degPar, p, zeror, zeroi){ \r\n                   var N = degPar.Degree,\r\n                       RADFAC = 3.14159265358979323846/180,  // Degrees-to-radians conversion factor = PI/180\r\n                       LB2 = Math.LN2,// Dummy variable to avoid re-calculating this value in loop below\r\n                       MDP1 = degPar.Degree + 1,\r\n                       K = new Array(MDP1),\r\n                       pt = new Array(MDP1),\r\n                       qp = new Array(MDP1),\r\n                       temp = new Array(MDP1),\r\n                       // qPar is a dummy variable for passing the four parameters--sr, si, lr, and li--by reference\r\n                       qPar = new Object(),\r\n                       // Fxshfr_Par is a dummy variable for passing parameters by reference : NZ, lzi, lzr, szi, szr);\r\n                       Fxshfr_Par = new Object(),\r\n                       bnd, DBL_EPSILON, df, dx, factor, ff, moduli_max, moduli_min, sc, x, xm,\r\n                       aa, bb, cc, sr, t, u, xxx,\r\n                       j, jj, l, NM1, NN, zerok;// Integer variables\r\n\r\n                   // Calculate the machine epsilon and store in the variable DBL_EPSILON.\r\n                   // To calculate this value, just use existing variables rather than create new ones that will be used only for this code block\r\n                   aa = 1.0;\r\n                   do {\r\n                       DBL_EPSILON = aa;\r\n                       aa /= 2;\r\n                       bb = 1.0 + aa;\r\n                   } while (bb > 1.0);\r\n\r\n                   var LO = Number.MIN_VALUE/DBL_EPSILON,\r\n                       cosr = Math.cos(94.0*RADFAC),// = -0.069756474\r\n                       sinr = Math.sin(94.0*RADFAC),// = 0.99756405\r\n                       xx = Math.sqrt(0.5),// = 0.70710678\r\n                       yy = -xx;\r\n\r\n                   Fxshfr_Par.NZ = j = 0;\r\n                   Fxshfr_Par.szr = Fxshfr_Par.szi =  Fxshfr_Par.lzr = Fxshfr_Par.lzi = 0.0;\r\n\r\n                   // Remove zeros at the origin, if any\r\n                   while (p[N] == 0){\r\n                       zeror[j] = zeroi[j] = 0;\r\n                       N--;\r\n                       j++;\r\n                   }\r\n                   NN = N + 1;\r\n\r\n                   // >>>>> Begin Main Loop <<<<<\r\n                   while (N >= 1){ // Main loop\r\n                       // Start the algorithm for one zero\r\n                       if (N <= 2){\r\n                           // Calculate the final zero or pair of zeros\r\n                           if (N < 2){\r\n                               zeror[degPar.Degree - 1] = -(p[1]/p[0]);\r\n                               zeroi[degPar.Degree - 1] = 0;\r\n                           } \r\n                           else { \r\n                               qPar.li = qPar.lr =  qPar.si = qPar.sr = 0.0;\r\n                               Quad_ak1(p[0], p[1], p[2], qPar);\r\n                               zeror[degPar.Degree - 2] = qPar.sr;\r\n                               zeroi[degPar.Degree - 2] = qPar.si;\r\n                               zeror[degPar.Degree - 1] = qPar.lr;\r\n                               zeroi[degPar.Degree - 1] = qPar.li;\r\n                           } \r\n                             break;\r\n                       } \r\n\r\n                       // Find the largest and smallest moduli of the coefficients\r\n                       moduli_max = 0.0;\r\n                       moduli_min = Number.MAX_VALUE;\r\n\r\n                       for (i = 0; i < NN; i++){\r\n                           x = Math.abs(p[i]);\r\n                           if (x > moduli_max) moduli_max = x;\r\n                           if ((x != 0) && (x < moduli_min)) moduli_min = x;\r\n                       }\r\n\r\n                       // Scale if there are large or very small coefficients\r\n                       // Computes a scale factor to multiply the coefficients of the polynomial. The scaling\r\n                       // is done to avoid overflow and to avoid undetected underflow interfering with the\r\n                       // convergence criterion.\r\n                       // The factor is a power of the base.\r\n                       sc = LO/moduli_min;\r\n\r\n                       if (((sc <= 1.0) && (moduli_max >= 10)) || ((sc > 1.0) && (Number.MAX_VALUE/sc >= moduli_max))){\r\n                           sc = ((sc == 0) ? Number.MIN_VALUE : sc);\r\n                           l = Math.floor(Math.log(sc)/LB2 + 0.5);\r\n                           factor = Math.pow(2.0, l);\r\n                           if (factor != 1.0){\r\n                               for (i = 0; i < NN; i++) p[i] *= factor;\r\n                           } \r\n                       } \r\n\r\n                       // Compute lower bound on moduli of zeros\r\n                       for (var i = 0; i < NN; i++) pt[i] = Math.abs(p[i]);\r\n                       pt[N] = -(pt[N]);\r\n                       NM1 = N - 1;\r\n\r\n                       // Compute upper estimate of bound\r\n                       x = Math.exp((Math.log(-pt[N]) - Math.log(pt[0]))/N);\r\n\r\n                       if (pt[NM1] != 0) {\r\n                           // If Newton step at the origin is better, use it\r\n                           xm = -pt[N]/pt[NM1];\r\n                           x = ((xm < x) ? xm : x);\r\n                       } \r\n\r\n                       // Chop the interval (0, x) until ff <= 0\r\n                       xm = x;\r\n                       do {\r\n                           x = xm;\r\n                           xm = 0.1*x;\r\n                           ff = pt[0];\r\n                           for (var i = 1; i < NN; i++) { ff = ff *xm + pt[i]; }\r\n                       } while (ff > 0); // End do-while loop\r\n\r\n                       dx = x;\r\n                       // Do Newton iteration until x converges to two decimal places\r\n\r\n                       do {\r\n                           df = ff = pt[0];\r\n                           for (var i = 1; i < N; i++){\r\n                               ff = x*ff + pt[i];\r\n                               df = x*df + ff;\r\n                           } // End for i\r\n                           ff = x*ff + pt[N];\r\n                           dx = ff/df;\r\n                           x -= dx;\r\n                       } while (Math.abs(dx/x) > 0.005); // End do-while loop\r\n\r\n                       bnd = x;\r\n\r\n                       // Compute the derivative as the initial K polynomial and do 5 steps with no shift\r\n                       for (var i = 1; i < N; i++) K[i] = (N - i)*p[i]/N;\r\n                       K[0] = p[0];\r\n                       aa = p[N];\r\n                       bb = p[NM1];\r\n                       zerok = ((K[NM1] == 0) ? 1 : 0);\r\n\r\n                       for (jj = 0; jj < 5; jj++) {\r\n                           cc = K[NM1];\r\n                               if (zerok){\r\n                                   // Use unscaled form of recurrence\r\n                                   for (var i = 0; i < NM1; i++){\r\n                                       j = NM1 - i;\r\n                                       K[j] = K[j - 1];\r\n                                   } // End for i\r\n                                   K[0] = 0;\r\n                                   zerok = ((K[NM1] == 0) ? 1 : 0);\r\n                               } \r\n                               else { \r\n                                   // Used scaled form of recurrence if value of K at 0 is nonzero\r\n                                   t = -aa/cc;\r\n                                   for (var i = 0; i < NM1; i++){\r\n                                       j = NM1 - i;\r\n                                       K[j] = t*K[j - 1] + p[j];\r\n                                   } // End for i\r\n                                   K[0] = p[0];\r\n                                   zerok = ((Math.abs(K[NM1]) <= Math.abs(bb)*DBL_EPSILON*10.0) ? 1 : 0);\r\n                               } \r\n                       } \r\n\r\n                       // Save K for restarts with new shifts\r\n                       for (var i = 0; i < N; i++) temp[i] = K[i];\r\n\r\n                       // Loop to select the quadratic corresponding to each new shift\r\n                       for (jj = 1; jj <= 20; jj++){\r\n\r\n                           // Quadratic corresponds to a double shift to a non-real point and its\r\n                           // complex conjugate. The point has modulus BND and amplitude rotated\r\n                           // by 94 degrees from the previous shift.\r\n\r\n                           xxx = -(sinr*yy) + cosr*xx;\r\n                           yy = sinr*xx + cosr*yy;\r\n                           xx = xxx;\r\n                           sr = bnd*xx;\r\n                           u = -(2.0*sr);\r\n\r\n                           // Second stage calculation, fixed quadratic\r\n                           Fxshfr_ak1(DBL_EPSILON, MDP1, 20*jj, sr, bnd, K, N, p, NN, qp, u, Fxshfr_Par);\r\n\r\n                           if (Fxshfr_Par.NZ != 0){\r\n                               // The second stage jumps directly to one of the third stage iterations and\r\n                               // returns here if successful. Deflate the polynomial, store the zero or\r\n                               // zeros, and return to the main algorithm.\r\n                               j = degPar.Degree - N;\r\n                               zeror[j] = Fxshfr_Par.szr;\r\n                               zeroi[j] = Fxshfr_Par.szi;\r\n                               NN = NN - Fxshfr_Par.NZ;\r\n                               N = NN - 1;\r\n                               for (var i = 0; i < NN; i++) p[i] = qp[i];\r\n                               if (Fxshfr_Par.NZ != 1){\r\n                                   zeror[j + 1] = Fxshfr_Par.lzr;\r\n                                   zeroi[j + 1] = Fxshfr_Par.lzi;\r\n                               }\r\n                               break;\r\n                           } \r\n                           else { \r\n                             // If the iteration is unsuccessful, another quadratic is chosen after restoring K\r\n                             for (var i = 0; i < N; i++) { K[i] = temp[i]; }\r\n                           } \r\n                       } \r\n                       // Return with failure if no convergence with 20 shifts\r\n                       if (jj > 20) {\r\n                           degPar.Degree -= N;\r\n                           break;\r\n                       } \r\n                   }\r\n                   // >>>>> End Main Loop <<<<<\r\n                   return;\r\n               }\r\n                //--> End Jenkins-Traub\r\n                rpSolve(degreePar, p, zeror, zeroi);\r\n\r\n                var l = zeroi.length;\r\n                //format the output\r\n                for( i=0; i<l; i++ ) {\r\n                    // We round the imaginary part to avoid having something crazy like 5.67e-16.\r\n                    var img = round( zeroi[i], decp+8 ),\r\n                        real = round( zeror[i], decp+8 );\r\n                    // Did the rounding pay off? If the rounding did nothing more than chop off a few digits then no.\r\n                    // If the rounding results in a a number at least 3 digits shorter we'll keep it else we'll keep \r\n                    // the original otherwise the rounding was worth it.\r\n                    real = decp - String( real ).length > 2 ? real : zeror[i];\r\n                    var sign = img < 0 ? '-' : '';\r\n\r\n                    // Remove the zeroes\r\n                    if( real === 0 ) { real = ''; }\r\n                    if( img === 0 ) { img = ''; }\r\n\r\n                    // Remove 1 as the multiplier and discard imaginary part if there isn't one.\r\n                    img = Math.abs( img ) === 1 ? sign+'i' : ( img ? img+'*i' : '' );\r\n\r\n                    var num = ( real && img ) ? real + '+' + img : real+img;\r\n                    zeror[i] = num.replace(/\\+\\-/g, '-');\r\n                }\r\n                return zeror;\r\n            } \r\n         },\r\n        roots: function(symbol) {\r\n            \r\n            if(symbol.isConstant(true, true)) {\r\n                return core.Utils.nroots(symbol);\r\n            }\r\n            var roots = __.proots(symbol).map(function(x) {\r\n                return _.parse(x);\r\n            });\r\n            return core.Vector.fromArray(roots);\r\n        },\r\n        froot: function(f, guess, dx) { \r\n            var newtonraph = function(xn) {\r\n                var mesh = 1e-12,\r\n                    // If the derivative was already provided then don't recalculate.\r\n                    df = dx ? dx : core.Utils.build(core.Calculus.diff(f.clone())),\r\n                    \r\n                    // If the function was passed in as a function then don't recalculate.\r\n                    fn = f instanceof Function ? f : core.Utils.build(f),\r\n                    max = 10000,\r\n                    done = false, \r\n                    safety = 0;\r\n                while( !done ) { \r\n                    var x = xn-(fn(xn)/df(xn));\r\n                    //absolute values for both x & xn ensures that we indeed have the radius    \r\n                    var r = Math.abs(x) - Math.abs(xn),\r\n                        delta = Math.abs(r);\r\n                    xn = x; \r\n\r\n                    if( delta < mesh ) done = true;\r\n                    else if( safety > max ) {\r\n                        xn = null;\r\n                        done = true;\r\n                    }\r\n                    \r\n                    safety++;\r\n                }\r\n                return xn;\r\n            };\r\n            return newtonraph( Number( guess ) );\r\n        },\r\n        quad: function(a, b, c) {\r\n            var q = function(a, b, c, sign) {\r\n                return _.parse('-('+b+'+'+sign+'*sqrt(('+b+')^2-4*('+a+')*('+c+')))/(2*'+a+')');\r\n            };\r\n            return [q(a, b, c, 1), q(a, b, c, -1)];\r\n        },\r\n        sumProd: function(a, b) {\r\n            return __.quad(-b, a, -1).map(function(x){\r\n                return x.invert(); \r\n            });\r\n        },\r\n        coeffs: function(symbol, wrt, coeffs) {\r\n            wrt = String(wrt); \r\n            symbol = _.expand(symbol);\r\n            coeffs = coeffs || [new Symbol(0)];\r\n            //we cannot get coeffs for group EX\r\n            if(symbol.group === EX && symbol.contains(wrt, true))\r\n                _.error('Unable to get coefficients using expression '+symbol.toString());\r\n            var vars = variables(symbol);\r\n            if(vars.length <=1 && vars[0] === wrt) {\r\n                var a = new Polynomial(symbol).coeffs.map(function(x) {\r\n                    return new Symbol(x);\r\n                });\r\n                for(var i=0,l=a.length;i<l; i++)  {\r\n                    var coeff = a[i],\r\n                        e = coeffs[i]; \r\n                    if(e)\r\n                        coeff = _.add(e, coeff);\r\n                    coeffs[i] = coeff; //transfer it all over\r\n                }\r\n            }\r\n            else { \r\n                if(!wrt)\r\n                    _.error('Polynomial contains more than one variable. Please specify which variable is to be used!');\r\n                //if the variable isn't part of this polynomial then we're looking at x^0\r\n                \r\n                if(vars.indexOf(wrt) === -1) {\r\n                    coeffs[0] = _.add(symbol, coeffs[0]);\r\n                }\r\n                else {\r\n                    coeffs = coeffs || [new Symbol(0)];\r\n                    if(symbol.group === CB) {\r\n                        var s = symbol.symbols[wrt];\r\n                        if(!s)\r\n                            _.error('Expression is not a polynomial!');\r\n                        var p = Number(s.power);\r\n                        coeff = _.divide(symbol.clone(), s.clone());\r\n                        if(coeff.contains(wrt, true) || p < 0 || !isInt(p))\r\n                            _.error('Expression is not a polynomial!');\r\n                        var e = coeffs[p];\r\n                        if(e)\r\n                            coeff = _.add(e, coeff);\r\n                        coeffs[p] = coeff;\r\n                    }\r\n                    else if(symbol.group === CP) {\r\n                        symbol.each(function(x) {\r\n                           __.coeffs(x.clone(), wrt, coeffs);\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            //fill holes\r\n            for(var i=0,l=coeffs.length; i<l; i++) \r\n                if(typeof coeffs[i] === 'undefined')\r\n                    coeffs[i] = new Symbol(0);\r\n\r\n            return coeffs;    \r\n        },\r\n        /**\r\n         * Get's all the powers of a particular polynomial including the denominators. The denominators powers\r\n         * are returned as negative. All remaining polynomials are returned as zero order polynomials.\r\n         * for example polyPowers(x^2+1/x+y+t) will return [ '-1', 0, '2' ]\r\n         * @param {Symbol} e\r\n         * @param {String} for_variable\r\n         * @param {Array} powers\r\n         * @returns {Array} An array of the powers\r\n         */\r\n        //assumes you've already verified that it's a polynomial\r\n        polyPowers: function(e, for_variable, powers) { \r\n            powers = powers || [];\r\n            var g = g = e.group; \r\n            if(g ===  PL && for_variable === e.value) {\r\n                powers = powers.concat(keys(e.symbols)); \r\n            }\r\n            else if(g === CP) { \r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s]; \r\n                    var g = symbol.group, v = symbol.value; \r\n                    if(g === S && for_variable === v) powers.push(symbol.power);\r\n                    else if(g === PL || g === CP) powers = __.polyPowers(symbol, for_variable, powers);\r\n                    else if(g === CB && symbol.contains(for_variable)) {\r\n                        var t = symbol.symbols[for_variable];\r\n                        if(t) powers.push((t.power));\r\n                    }\r\n                    else if(g === N || for_variable !== v) powers.push(0);\r\n                }\r\n            }\r\n            else if(g === CB && e.contains(for_variable)) {\r\n                powers.push(core.Utils.decompose_fn(e, for_variable, true).x.power);\r\n            }\r\n            return core.Utils.arrayUnique(powers).sort();\r\n        },\r\n        //The factor object\r\n        Factor: {\r\n            //splits the symbol in symbol and constant\r\n            split: function(symbol) {\r\n                var c = new Symbol(1); //the constants part\r\n                var s = new Symbol(1); //the symbolic part\r\n                __.Factor.factor(symbol, new Factors()).each(function(x) {\r\n                    var t = _.parse(x);\r\n                    if(x.isConstant(true)) {\r\n                        c = _.multiply(c, t);\r\n                    }\r\n                    else {\r\n                        s = _.multiply(s, t);\r\n                    }\r\n                });\r\n                return [c, s];\r\n            },\r\n            mix: function(o, include_negatives) {\r\n                var factors = keys(o);\r\n                var l = factors.length;\r\n                var m = [];//create a row which we'r going to be mixing\r\n                for(var i=0; i<l; i++) {\r\n                    var factor = factors[i],\r\n                        p = o[factor];\r\n                    var ll = m.length;\r\n                    for(var j=0; j<ll; j++) {\r\n                        var t = m[j]*factor;\r\n                        m.push(t);\r\n                        if(include_negatives) m.push(-t);\r\n                    }\r\n \r\n                    for(var j=1; j<=p; j++)\r\n                        m.push(Math.pow(factor, j));\r\n                }\r\n                return m;\r\n            },\r\n            //TODO: this method is to replace common factoring\r\n            common: function(symbol, factors) {\r\n                try {\r\n                    if(symbol.group === CP) { \r\n                        //this may have the unfortunate side effect of expanding and factoring again\r\n                        //to only end up with the same result. \r\n                        //TODO: try to avoid this\r\n                        //collect the symbols and sort to have the longest first. Thinking is that the longest terms \r\n                        //has to contain the variable in order for it to be factorable\r\n                        var symbols = _.expand(symbol.clone(), true).collectSymbols(null, null, function(a, b) {\r\n                            return (b.length || 1) - (a.length || 1);\r\n                        });\r\n                        \r\n                        var map = {}; //create a map of common factors\r\n                        var coeffs = [];\r\n                        for(var i=0; i<symbols.length; i++) {\r\n                            var sym = symbols[i]; \r\n                            coeffs.push(sym.multiplier.clone());\r\n                            sym.each(function(x) {\r\n                                var p = Number(x.power);\r\n                                //This check exits since we have a symbolic power.\r\n                                //For the future... think about removing this check and modify for symbolic powers\r\n                                if(isNaN(p))\r\n                                    throw new Error('exiting');\r\n                                //loop through the symbols and lump together common terms\r\n                                if(x.value in map) {\r\n                                    if(p < map[x.value][0])\r\n                                        map[x.value][0] = p;\r\n                                    map[x.value][1].push(x);\r\n                                }\r\n                                else\r\n                                    map[x.value] = [p, [x]];\r\n                            });\r\n                        }\r\n                        //the factor\r\n                        var factor = new Symbol(1);\r\n                        for(var x in map) {\r\n                            //if this factor is found in all terms since the length of \r\n                            //matching variable terms matches the number of original terms\r\n                            if(map[x][1].length === symbols.length) {\r\n                                //generate a symbol and multiply into the factor\r\n                                factor = _.multiply(factor, _.pow(new Symbol(x), new Symbol(map[x][0])));\r\n                            }\r\n                        }\r\n                        //get coefficient factor\r\n                        var c = core.Math2.QGCD.apply(null, coeffs);\r\n\r\n                        if(!c.equals(1)) {\r\n                            factors.add(new Symbol(c));\r\n                            for(var i=0; i<symbols.length; i++) {\r\n                                symbols[i].multiplier = symbols[i].multiplier.divide(c);\r\n                            }\r\n                        }\r\n                            \r\n                        //if we actuall found any factors\r\n                        if(!factor.equals(1)) { \r\n                            factors.add(factor);\r\n                            symbol = new Symbol(0);\r\n                            for(var i=0; i<symbols.length; i++) {\r\n                                symbol = _.add(symbol, _.divide(symbols[i], factor.clone()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e){;}\r\n\r\n                return symbol;\r\n            },\r\n            zeroes: function(symbol, factors) {\r\n                var exit = function() {\r\n                    throw new core.exceptions.ValueLimitExceededError('Exiting');\r\n                };\r\n                try {\r\n                    var vars, term, sum, p, e;\r\n                    symbol = _.expand(symbol.clone());\r\n                    e = symbol.toString();\r\n                    vars = variables(symbol);\r\n\r\n                    sum = new Symbol(0);\r\n                    \r\n                    var terms = [];\r\n                    var powers = [];\r\n                    \r\n                    //start setting each variable to zero\r\n                    for(var i=0, l=vars.length; i<vars.length; i++) {\r\n                        var subs = {};\r\n                        //we want to create a subs object with all but the current variable set to zero\r\n                        for(var j=0; j<l; j++) \r\n                            if(i !== j) //make sure we're not looking at the same variable\r\n                                subs[vars[j]] = 0;\r\n                        term = _.parse(e, subs);\r\n                        var tp = term.power;\r\n                        //the temporary power has to be an integer as well\r\n                        if(!isInt(tp))\r\n                            exit();\r\n                        terms.push(term);\r\n                        powers.push(term.power);\r\n                    }\r\n\r\n                    //get the gcd. This will be the p in (a^n+b^m)^p\r\n                    //if the gcd equals 1 meaning n = m then we need a tie breakder\r\n                    if(core.Utils.allSame(powers)) { \r\n                        //get p given x number of terms\r\n                        var n_terms = symbol.length;\r\n                        //the number of zeroes determines\r\n                        var n_zeroes = terms.length;\r\n                        if(n_zeroes === 2) {\r\n                            p = new Frac(powers[0]/(n_terms-1));\r\n                        }\r\n                        if(n_zeroes === 3) {\r\n                            p = new Frac(powers[0]/Math.round((Math.sqrt(8*n_terms-1)-3)/2));\r\n                        }\r\n                        /*\r\n                        //get the lowest possible power\r\n                        //e.g. given b^4+2*a^2*b^2+a^4, the power we're looking for would be 2\r\n                        symbol.each(function(x) {\r\n                            if(x.group === CB)\r\n                                x.each(function(y) {\r\n                                    if(!p || y.power.lessThan(p))\r\n                                        //p = Number(y.power);\r\n                                        p = y.power;\r\n                                });\r\n                            else if(!p || x.power.lessThan(p))\r\n                                //p = Number(x.power);\r\n                                p = x.power;\r\n                        });\r\n                        */\r\n                    }\r\n                    else\r\n                        //p is just the gcd of the powers\r\n                        p = core.Math2.QGCD.apply(null, powers);\r\n\r\n                    //if we don't have an integer then exit\r\n                    if(!isInt(p))\r\n                        exit();\r\n\r\n                    //build the factor\r\n                    for(var i=0; i<terms.length; i++) {\r\n                        var t = terms[i];\r\n                        var n = t.power.clone().divide(p);\r\n                        t.multiplier = new Frac(Math.pow(t.multiplier, 1/n));\r\n                        t.power = p.clone();\r\n                        sum = _.add(sum, t);\r\n                    }\r\n\r\n                    //by now we have the factor of zeroes. We'll know if we got it right because \r\n                    //we'll get a remainder of zero each time we divide by it\r\n                    if(sum.group !== CP)\r\n                        return symbol; //nothing to do\r\n\r\n                    while(true) {\r\n                        var d = __.div(symbol.clone(), sum.clone());\r\n                        if(d[1].equals(0)) {\r\n                            symbol = d[0];\r\n                            factors.add(sum.clone());\r\n                            if(symbol.equals(1)) //we've reached 1 so done.\r\n                                break;\r\n                        }\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                catch(e){};\r\n                \r\n                return symbol;\r\n            },\r\n            factor: function(symbol, factors) {\r\n                var _symbol = _.parse(symbol);\r\n                var retval = __.Factor._factor(_symbol, factors);\r\n                if(retval.equals(symbol)) {\r\n                    return retval;\r\n                }\r\n                \r\n                if(retval.group === CB) {\r\n                    var t = new Symbol(1);\r\n                    /* \r\n                     * NOTE: for sign issues with factor START DEBUGGING HERE\r\n                     */\r\n                    //move the sign to t\r\n                    if(retval.multiplier.lessThan(0)) {\r\n                        t.negate();\r\n                        retval.negate();\r\n                    }\r\n                    retval.each(function(x) {\r\n                        var factored = __.Factor._factor(x);\r\n                        \r\n                        if(factored.group === CB) {\r\n                            factored.each(function(y) {\r\n                                var _factored = __.Factor._factor(y);\r\n                                t = _.multiply(t, _factored);\r\n                            });\r\n                        }\r\n                        else {\r\n                            t = _.multiply(t, factored);\r\n                        }\r\n                    });\r\n                    retval = t;\r\n                }  \r\n                return retval;\r\n            },\r\n            quadFactor: function(symbol, factors) {\r\n                if(symbol.isPoly() && __.degree(symbol.equals(2))) {\r\n                    //We've  already checked that we're dealing with a polynomial\r\n                    var v = core.Utils.variables(symbol)[0]; //get the variable\r\n                    var coeffs = __.coeffs(symbol, v);\r\n                    //factor the lead coefficient\r\n                    var cf = __.Factor._factor(coeffs[2].clone());\r\n                    //check if we have factors\r\n                    if(cf.group === CB) {\r\n                        var symbols = cf.collectSymbols();\r\n                        //if the factors are greater than 2 we're done so exit\r\n                        if(symbols.length > 2)\r\n                            return symbol; \r\n                        //if we have two factors then attempt to factor the polynomial\r\n                        //let the factors be f1 and f1\r\n                        //let the factors be (ax+b)(cx+d)\r\n                        //let the coefficients be c1x^2+c2x+c3\r\n                        //then a(x1)+c(x2)=c2 and x1*x2=c3\r\n                        //we can solve for x1 and x2\r\n                        var c = _.multiply(_.parse(coeffs[0]), _.parse(symbols[0]));\r\n                        var b = _.parse(coeffs[1]).negate();\r\n                        var a = _.parse(symbols[1]);\r\n                        //solve the system\r\n                        var root = __.quad(a, b, c).filter(function(x) {\r\n                            if(core.Utils.isInt(x))\r\n                                return x;\r\n                        });\r\n                        //if we have one root then find the other one by dividing the constant\r\n                        if(root.length === 1) {\r\n                            var root1 = root[0];\r\n                            var root2 = _.divide(coeffs[0], _.parse(root1));\r\n                            if(core.Utils.isInt(root2)) {\r\n                                //we found them both\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[1], v, root2)));\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[0], v, root1)));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return symbol;    \r\n            },\r\n            _factor: function(symbol, factors) {\r\n                //some items cannot be factored any further so return those right away\r\n                if(symbol.group === FN) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.group === S && arg.isSimple())\r\n                        return symbol;\r\n                }\r\n                else if(symbol.group === S && symbol.isSimple())\r\n                    return symbol;\r\n                //expand the symbol to get it in a predictable form. If this step\r\n                //is skipped some factors are missed.\r\n                if(symbol.group === CP) {\r\n                    symbol.distributeMultiplier();\r\n                    var t = new Symbol(0);\r\n                    symbol.each(function(x) {\r\n                        if((x.group === CP && x.power.greaterThan(1) || x.group === CB))\r\n                            x = _.expand(x);\r\n                        t = _.add(t, x);\r\n                    });\r\n                    t.power = symbol.power;\r\n                    \r\n                    symbol = t;\r\n                }\r\n                \r\n                if(symbol.group === FN && symbol.fname !== 'sqrt')\r\n                    symbol = core.Utils.evaluate(symbol);\r\n                //make a copy of the symbol to return if something goes wrong\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    if(symbol.group === CB) { \r\n                        var den_array, num_array, den, num, dfact, nfact;\r\n                        //grab the denominator and strip the multiplier and power. Store them in an array\r\n                        den_array = __.Simplify.strip(symbol.getDenom());\r\n                        num_array = __.Simplify.strip(symbol.getNum());\r\n                        den = den_array.pop();\r\n                        num = num_array.pop();\r\n\r\n                        //if the numerator equals the symbol then we've hit the simplest form and then we're done\r\n                        if(num.equals(symbol))\r\n                            return symbol;\r\n                        nfact = __.Factor.factor(num);\r\n                        dfact = __.Factor.factor(den);\r\n                        var n = __.Simplify.unstrip(num_array, nfact);\r\n                        var d = __.Simplify.unstrip(den_array, dfact);\r\n                        var retval = _.divide(n, d);\r\n                        return retval;\r\n                    }\r\n                    if(symbol.group === S) \r\n                        return symbol; //absolutely nothing to do\r\n\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol.equals(1))\r\n                            return symbol.clone();\r\n                        var ret = core.Math2.factor(symbol);\r\n                        return ret;\r\n                    }\r\n\r\n                    var p = symbol.power.clone();\r\n                    \r\n                    if(isInt(p) && !(p.lessThan(0) && symbol.group === FN)) { \r\n                        var sign = p.sign();\r\n                        symbol.toLinear();\r\n                        factors = factors || new Factors();\r\n                        var map = {};\r\n                        symbol = _.parse(core.Utils.subFunctions(symbol, map));\r\n                        if(keys(map).length > 0) { //it might have functions\r\n                            factors.preAdd = function(factor) {\r\n                                var ret = _.parse(factor, core.Utils.getFunctionsSubs(map));\r\n                                return ret;\r\n                            };\r\n                        }\r\n\r\n                        //strip the power\r\n                        if(!symbol.isLinear()) {\r\n                            factors.pFactor = symbol.power.toString();\r\n                            symbol.toLinear();\r\n                        } \r\n                        \r\n                        var vars = variables(symbol);\r\n                        //bypass for imaginary. TODO: find a better solution\r\n                        if(symbol.isImaginary()) {\r\n                            vars.push(core.Settings.IMAGINARY);\r\n                        }\r\n                        var multiVar = vars.length > 1;\r\n                        \r\n                        //minor optimization. Seems to cut factor time by half in some cases.\r\n                        if(multiVar) { \r\n                            var all_S = true, all_unit = true;\r\n                            symbol.each(function(x) {\r\n                                if(x.group !== S) all_S = false;\r\n                                if(!x.multiplier.equals(1)) all_unit = false;\r\n                            });       \r\n                            if(all_S && all_unit) {\r\n                                return _.pow(_.parse(symbol, core.Utils.getFunctionsSubs(map)), _.parse(p));\r\n                            }\r\n                        }\r\n                        //factor the coefficients\r\n                        var coeff_factors = new Factors();\r\n                        \r\n                        symbol = __.Factor.coeffFactor(symbol, coeff_factors);\r\n                        \r\n                        coeff_factors.each(function(x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n                        //factor the power\r\n                        var power_factors = new Factors();\r\n                        symbol = __.Factor.powerFactor(symbol, power_factors);  \r\n                        power_factors.each(function(x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n                        \r\n                        if(!multiVar) { \r\n                            //pass in vars[0] for safety\r\n                            var v = vars[0];\r\n                            symbol = __.Factor.squareFree(symbol, factors, v);\r\n                            \r\n                            var t_factors = new Factors();\r\n                            symbol = __.Factor.trialAndError(symbol, t_factors, v);\r\n                            \r\n                            //generate a symbol based off the last factors\r\n                            var tf_symbol = t_factors.toSymbol();\r\n                            //if nothing was factored then return the factors\r\n                            if(tf_symbol.equals(untouched))\r\n                                return tf_symbol;\r\n                            for(var x in t_factors.factors) {\r\n                                //store the current factor in t_factor\r\n                                var t_factor = t_factors.factors[x];\r\n                                factors.add(_.pow(t_factor, _.parse(p)));\r\n                            }\r\n                            //if we still don't have a factor and it's quadratic then let's just do a quad factor\r\n                            if(symbol.equals(untouched))\r\n                                symbol = __.Factor.quadFactor(symbol, factors);\r\n                           \r\n                        }\r\n                        else {\r\n                            symbol = __.Factor.mfactor(symbol, factors);\r\n                            \r\n                            //put back the sign of power\r\n                            factors.each(function(x) {\r\n                                if(sign < 0)\r\n                                    x.power.negate();\r\n                            });\r\n                        }\r\n                        \r\n                        //last minute clean up\r\n                        symbol = _.parse(symbol, core.Utils.getFunctionsSubs(map));\r\n                        factors.add(_.pow(symbol, _.parse(p)));\r\n                        \r\n                        var retval = factors.toSymbol();\r\n                        return retval;\r\n                    }\r\n                    \r\n                    return symbol;    \r\n                }\r\n                catch(e) {\r\n                    //console.log(e);\r\n                    //no need to stop the show because something went wrong :). Just return the unfactored.\r\n                    return untouched;\r\n                }\r\n            },\r\n            reduce: function(symbol, factors) {\r\n                if(symbol.group === CP && symbol.length === 2) {\r\n                    var symbols = symbol.collectSymbols().sort(function(a, b) {\r\n                        return b.multiplier - a.multiplier;\r\n                    });\r\n                    if(symbols[0].power.equals(symbols[1].power)) {\r\n                        //x^n-a^n\r\n                        var n = _.parse(symbols[0].power),\r\n                            a = symbols[0].clone().toLinear(),\r\n                            b = symbols[1].clone().toLinear();\r\n                    \r\n                        //apply rule: (a-b)*sum(a^(n-i)*b^(i-1),1,n)\r\n                        factors.add(_.add(a.clone(), b.clone()));\r\n                        //flip the sign\r\n                        b.negate();\r\n                        //turn n into a number\r\n                        var nn = Number(n);\r\n                        //the remainder\r\n                        var result = new Symbol(0);\r\n                        for(var i=1; i<=nn; i++) {\r\n                            var aa = _.pow(a.clone(), _.subtract(n.clone(), new Symbol(i))),\r\n                                bb = _.pow(b.clone(), _.subtract(new Symbol(i), new Symbol(1)));\r\n                            result = _.add(result, _.multiply(aa, bb));\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Makes Symbol square free\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @@param {String} variable The variable which is being factored \r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            squareFree: function(symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S) return symbol;\r\n                var poly = new Polynomial(symbol, variable);\r\n                var sqfr = poly.squareFree();\r\n                var p = sqfr[2];\r\n                //if we found a square then the p entry in the array will be non-unit\r\n                if(p !== 1) {\r\n                    //make sure the remainder doesn't have factors\r\n                    var t = sqfr[1].toSymbol();\r\n                    t.power = t.power.multiply(new Frac(p));\r\n                    //send the factor to be fatored to be sure it's completely factored\r\n                    factors.add(__.Factor.factor(t));\r\n                    return __.Factor.squareFree(sqfr[0].toSymbol(), factors);\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Factors the powers such that the lowest power is a constant\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            powerFactor: function(symbol, factors) {\r\n                //only PL need apply\r\n                if(symbol.group !== PL || symbol.previousGroup === EX) \r\n                    return symbol; \r\n                var k = keys(symbol.symbols);\r\n                //we expect only numeric powers so return all else\r\n                if(!core.Utils.allNumeric(k))\r\n                    return symbol;\r\n                \r\n                var d = core.Utils.arrayMin(k);\r\n                var retval = new Symbol(0);\r\n                var q = _.parse(symbol.value+'^'+d);\r\n                symbol.each(function(x) {\r\n                    x = _.divide(x, q.clone());\r\n                    retval = _.add(retval, x);\r\n                });\r\n\r\n                factors.add(q);\r\n                return retval;\r\n            },\r\n            /**\r\n             * Removes GCD from coefficients\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @returns {Symbol}\r\n             */\r\n            coeffFactor: function(symbol, factors) {\r\n                \r\n                if(symbol.isComposite()) {\r\n                    var gcd = core.Math2.QGCD.apply(null, symbol.coeffs());\r\n                    if(!gcd.equals(1)) { \r\n                        symbol.each(function(x) {\r\n                            if(x.isComposite()) {\r\n                                x.each(function(y){\r\n                                    y.multiplier = y.multiplier.divide(gcd);\r\n                                });\r\n                            }\r\n                            else x.multiplier = x.multiplier.divide(gcd);\r\n                        });\r\n                    }\r\n                    symbol.updateHash();\r\n                    if(factors) \r\n                        factors.add(new Symbol(gcd));\r\n                }\r\n                \r\n                return symbol;\r\n            },\r\n            /**\r\n             * The name says it all :)\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @@param {String} variable \r\n             * @returns {Symbol}\r\n             */\r\n            trialAndError: function(symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S) return symbol;\r\n                var poly = new Polynomial(symbol, variable),\r\n                    cnst = poly.coeffs[0],\r\n                    cfactors = core.Math2.ifactor(cnst),\r\n                    roots = __.proots(symbol);\r\n                for(var i=0; i<roots.length; i++) {\r\n                    var r = roots[i],\r\n                        p = 1;\r\n                    if(!isNaN(r)) { //if it's a number\r\n                        for(var x in cfactors) {\r\n                            //check it's raised to a power\r\n                            var n = core.Utils.round(Math.log(x)/Math.log(Math.abs(r)), 8);\r\n                            if(isInt(n)) {\r\n                                r = x; //x must be the root since n gave us a whole\r\n                                p = n; break;\r\n                            }\r\n                        }\r\n                        var root = new Frac(r),\r\n                            terms = [new Frac(root.num).negate()];\r\n                        terms[p] = new Frac(root.den);\r\n                            //convert to Frac. The den is coeff of LT and the num is coeff of constant\r\n                        var div = Polynomial.fromArray(terms, poly.variable).fill(),\r\n                            t = poly.divide(div);\r\n                        if(t[1].equalsNumber(0)) { //if it's zero we have a root and divide it out\r\n                            poly = t[0];\r\n                            factors.add(div.toSymbol());\r\n                        }\r\n                    }\r\n                }\r\n                if(!poly.equalsNumber(1)) {\r\n                    poly = __.Factor.search(poly, factors);\r\n                }\r\n\r\n                return poly.toSymbol();\r\n            },\r\n            search: function(poly, factors, base) {\r\n                base = base || 10; //I like 10 because numbers exhibit similar behaviours at 10\r\n                var v = poly.variable; //the polynmial variable name\r\n                /**\r\n                 * Attempt to remove a root by division given a number by first creating\r\n                 * a polynomial fromt he given information\r\n                 * @param {int} c1 - coeffient for the constant\r\n                 * @param {int} c2 - coefficient for the LT\r\n                 * @param {int} n - the number to be used to construct the polynomial\r\n                 * @param {int} p - the power at which to create the polynomial\r\n                 * @returns {null|Polynomial} - returns polynomial if successful otherwise null\r\n                 */\r\n                var check = function(c1, c2, n, p) {\r\n                    var candidate = Polynomial.fit(c1, c2, n, base, p, v);\r\n                    if(candidate && candidate.coeffs.length > 1) {\r\n                        var t = poly.divide(candidate);\r\n                        if(t[1].equalsNumber(0)) {\r\n                            factors.add(candidate.toSymbol());\r\n                            return [t[0], candidate];\r\n                        }\r\n                    }\r\n                    return null;\r\n                };\r\n                var cnst = poly.coeffs[0],\r\n                    cfactors = core.Math2.ifactor(cnst),\r\n                    lc = poly.lc(),\r\n                    ltfactors = core.Math2.ifactor(lc),\r\n                    subbed = poly.sub(base),\r\n                    nfactors = __.Factor.mix(core.Math2.ifactor(subbed), subbed < 0),\r\n                    cp = Math.ceil(poly.coeffs.length/2),\r\n                    lc_is_neg = lc.lessThan(0),\r\n                    cnst_is_neg = cnst.lessThan(0);\r\n                ltfactors['1'] = 1;\r\n                cfactors['1'] = 1;\r\n                while(cp--) {\r\n                    for(var x in ltfactors) {\r\n                        for(var y in cfactors) {\r\n                            for(var i=0; i<nfactors.length; i++) {\r\n                                var factor_found = check(x, y, nfactors[i], cp);\r\n                                if(factor_found) {\r\n                                    poly = factor_found[0];\r\n                                    if(!core.Utils.isPrime(poly.sub(base)))\r\n                                        poly = __.Factor.search(poly, factors);\r\n                                    return poly;\r\n                                }\r\n                                else if(!factor_found) {\r\n                                    if(lc_is_neg && cnst_is_neg)\r\n                                        factor_found = check(-x, -y, nfactors[i], cp);\r\n                                    else if(lc_is_neg) \r\n                                        factor_found = check(-x, y, nfactors[i], cp); //check a negative lc\r\n                                    else if(cnst_is_neg) \r\n                                        factor_found = check(x, -y, nfactors[i], cp); //check a negative constant\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return poly;\r\n            },\r\n            /**\r\n             * Equivalent of square free factor for multivariate polynomials\r\n             * @param {type} symbol\r\n             * @param {type} factors\r\n             * @returns {AlgebraL#18.Factor.mSqfrFactor.symbol|Array|AlgebraL#18.__.Factor.mSqfrFactor.d}\r\n             */\r\n            mSqfrFactor: function(symbol, factors) {\r\n                if(symbol.group !== FN) {\r\n                    var vars = variables(symbol).reverse();\r\n                    for(var i=0; i<vars.length; i++) {\r\n                        do {\r\n                            if(vars[i] === symbol.value){\r\n                                //the derivative tells us nothing since this symbol is already the factor\r\n                                factors.add(symbol);\r\n                                symbol = new Symbol(1);\r\n                                continue;\r\n                            }\r\n                            var diff = core.Calculus.diff(symbol, vars[i]);\r\n                            var d = __.Factor.coeffFactor(diff);\r\n\r\n                            if(d.equals(0)) \r\n                                break;\r\n                            \r\n                            //trial division to see if factors have whole numbers. \r\n                            //This can be optimized by stopping as soon as can_divide is false\r\n                            //this will also need utilize big number at some point\r\n                            var can_divide = true;\r\n                            if(d.isConstant() && symbol.isComposite()) {\r\n                                //check the coefficients\r\n                                \r\n                                symbol.each(function(x) {\r\n                                    if(x.multiplier % d !== 0)\r\n                                        can_divide = false;\r\n                                }, true);\r\n                            }\r\n                            \r\n                            //if we can divide then do so\r\n                            if(can_divide) {\r\n                                var div = __.div(symbol, d.clone()),\r\n                                is_factor = div[1].equals(0);\r\n\r\n                                if(div[0].isConstant()) {\r\n                                    factors.add(div[0]);\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else\r\n                                is_factor = false;\r\n                                \r\n                            if(is_factor) {\r\n                                factors.add(div[0]);\r\n                                symbol = d;\r\n                            }\r\n                        }\r\n                        while(is_factor)\r\n                    }\r\n                }\r\n                \r\n                return symbol;\r\n            },\r\n            //difference of squares factorization\r\n            sqdiff: function(symbol, factors) { \r\n                try {\r\n                    var remove_square = function(x) {\r\n                        return core.Utils.block('POSITIVE_MULTIPLIERS', function() {\r\n                            return Symbol.unwrapPARENS(math.sqrt(math.abs(x)));\r\n                        }, true);\r\n                    }; \r\n                    var separated = core.Utils.separate(symbol.clone());\r\n                    var obj_array = [];\r\n                    //get the unique variables\r\n                    for(var x in separated) {\r\n                        if(x !== 'constants') {\r\n                            obj_array.push(separated[x]);\r\n                        }\r\n                    }\r\n                    obj_array.sort(function(a, b) {\r\n                        return b.power - a.power;\r\n                    });\r\n\r\n                    //if we have the same number of variables as unique variables then we can apply the difference of squares\r\n                    if(obj_array.length === 2) { \r\n                        var a, b;\r\n                        a = obj_array.pop();\r\n                        b = obj_array.pop();\r\n                        if(a.isComposite() && b.power.equals(2)) {\r\n                            //remove the square from b\r\n                            b = remove_square(b);\r\n                            var f = __.Factor.factor(_.add(a, separated.constants));\r\n                            if(f.power.equals(2)) {\r\n                                f.toLinear();\r\n                                factors.add(_.subtract(f.clone(), b.clone()));\r\n                                factors.add(_.add(f, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            a = a.powSimp();\r\n                            b = b.powSimp();\r\n                            \r\n                            if((a.group === S || a.fname === '') && a.power.equals(2) && (b.group === S || b.fname === '') && b.power.equals(2)) {\r\n                                if(a.multiplier.lessThan(0)) {\r\n                                    var t = b; b = a; a = t;\r\n                                }\r\n                                if(a.multiplier.greaterThan(0)) {\r\n                                    a = remove_square(a);\r\n                                    b = remove_square(b);\r\n                                }\r\n                                factors.add(_.subtract(a.clone(), b.clone()));\r\n                                factors.add(_.add(a, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e){;}\r\n                \r\n                return symbol;\r\n            },\r\n            //factoring for multivariate\r\n            mfactor: function(symbol, factors) {  \r\n                \r\n                if(symbol.group === FN) { \r\n                    if(symbol.fname === 'sqrt') {\r\n                        var factors2 = new Factors(),\r\n                            arg = __.Factor.common(symbol.args[0].clone(), factors2);\r\n                        arg = __.Factor.coeffFactor(arg, factors2);\r\n                        symbol = _.multiply(_.symfunction('sqrt', [arg]), _.parse(symbol.multiplier));\r\n                        factors2.each(function(x) {\r\n                            symbol = _.multiply(symbol, _.parse(core.Utils.format('sqrt({0})', x)));\r\n                        });\r\n                    }\r\n                    else\r\n                        factors.add(symbol);\r\n                    \r\n                }\r\n                else { \r\n                    //square free factorization\r\n                    symbol = __.Factor.mSqfrFactor(symbol, factors);\r\n                    \r\n                    //try factor out common factors\r\n                    //symbol = __.Factor.common(symbol, factors);\r\n                    \r\n                    var vars = variables(symbol),\r\n                        symbols = symbol.collectSymbols().map(function(x) {\r\n                            return Symbol.unwrapSQRT(x);\r\n                        }),\r\n                        sorted = {},\r\n                        maxes = {},\r\n                        l = vars.length, n = symbols.length;\r\n                    //take all the variables in the symbol and organize by variable name\r\n                    //e.g. a^2+a^2+b*a -> {a: {a^3, a^2, b*a}, b: {b*a}}\r\n                    \r\n                    for(var i=0; i<l; i++) {\r\n                        var v = vars[i];\r\n                        sorted[v] = new Symbol(0);\r\n                        for(var j=0; j<n; j++) {\r\n                            var s = symbols[j];\r\n                            if(s.contains(v)) {\r\n                                var p = s.value === v ? s.power.toDecimal() : s.symbols[v].power.toDecimal();\r\n                                if(!maxes[v] || p < maxes[v]) maxes[v] = p;\r\n                                sorted[v] = _.add(sorted[v], s.clone());\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    for(var x in sorted) {\r\n                        var r = _.parse(x+'^'+maxes[x]); \r\n                        var div = _.divide(sorted[x], r);\r\n                        var new_factor = _.expand(div); \r\n                        \r\n                        if(new_factor.equals(1))\r\n                            break; //why divide by one. Just move \r\n                        var divided = __.div(symbol.clone(), new_factor); \r\n                        if(divided[0].equals(0)) { \r\n                            //cant factor anymore\r\n                            break;\r\n                        }\r\n                        \r\n                        var neg_numeric_factor = isInt(new_factor) && new_factor.lessThan(0);\r\n                        \r\n                        if(divided[1].equals(0) && !neg_numeric_factor) { //we found at least one factor\r\n                            \r\n                            //factors.add(new_factor);\r\n                            var d = __.div(symbol.clone(), divided[0].clone());\r\n                            var r = d[0];\r\n                            symbol = d[1];\r\n                            //we don't want to just flip the sign. If the remainder is -1 then we accomplished nothing\r\n                            //and we just return the symbol;\r\n                            //If r equals zero then there's nothing left to do so we're done\r\n                            \r\n                            if(r.equals(-1) && !symbol.equals(0))\r\n                                return symbol;\r\n\r\n                            var factor = divided[0]; \r\n                            if(symbol.equals(factor)) {\r\n                                var rem = __.Factor.reduce(factor, factors);\r\n                                \r\n                                if(!symbol.equals(rem)) \r\n                                    return __.Factor.mfactor(rem, factors);\r\n                            }\r\n                            else {\r\n                                factors.add(factor); \r\n                                //if the remainder of the symbol is zero then we're done. TODO: Rethink this logic a bit.\r\n                                if(symbol.equals(0))\r\n                                    return r;\r\n                            }\r\n                            \r\n                            if(r.isConstant('all')) { \r\n                                factors.add(r);\r\n                                return r;\r\n                            }\r\n                            \r\n                            return __.Factor.mfactor(r, factors);\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                \r\n                //difference of squares factorization\r\n                symbol = __.Factor.sqdiff(symbol, factors);\r\n                //factors by fishing for zeroes\r\n                symbol = __.Factor.zeroes(symbol, factors);\r\n                \r\n                return symbol;\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a set of \"equations\" is linear. \r\n         * @param {type} set\r\n         * @returns {Boolean}\r\n         */\r\n        allLinear: function(set) {\r\n            var l = set.length;\r\n            for(var i=0; i<l; i++) {\r\n                if(!__.isLinear(set[i])) return false;\r\n            }\r\n            return true;\r\n        },\r\n        /*\r\n         * Checks to see if the \"equation\" is linear\r\n         * @param {Symbol} e\r\n         * @returns {boolean}\r\n         */\r\n        isLinear: function(e) {\r\n            var status = false, g = e.group;\r\n            if(g === PL || g === CP) {\r\n                status = true;\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s], sg = symbol.group;\r\n                    if(sg === FN || sg === EX) { \r\n                        status = false;\r\n                    }\r\n                    if(sg === CB) {\r\n                        //needs further checking since it might be imaginary\r\n                        status = variables(symbol).length === 1;\r\n                    }\r\n                    else {\r\n                        if(sg === PL || sg === CP) status = __.isLinear(symbol);\r\n                        else {\r\n                            if(symbol.group !== N && symbol.power.toString() !== '1') { status = false; break; }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(g === S && e.power === 1) status = true;\r\n            return status;\r\n        },\r\n        gcd: function() {\r\n            var args;\r\n            if(arguments.length === 1 && arguments[0] instanceof core.Vector)\r\n                args = arguments[0].elements;\r\n            else args = core.Utils.arguments2Array(arguments);\r\n            \r\n            //short-circuit early\r\n            if (args.length === 0) \r\n                return new Symbol(1);\r\n            else if (args.length === 1) \r\n                return args[0];\r\n            \r\n            var appeared = [], evaluate = false;\r\n            for(var i = 0; i < args.length; i++) {\r\n                if(args[i].group === FN && args[i].fname === 'gcd')\r\n                {\r\n                    //compress gcd(a,gcd(b,c)) into gcd(a,b,c)\r\n                    args = args.concat(arguments[i].args);\r\n                    //do not keep gcd in args\r\n                    args.splice(i, 1);\r\n                }\r\n                else\r\n                {\r\n                    //Look if there are any common variables such that\r\n                    //gcd(a,b) => gcd(a,b); gcd(a,a) => a\r\n                    var vars = variables(args[i]);\r\n                    if(core.Utils.haveIntersection(vars, appeared))\r\n                    {\r\n                        //Ok, there are common variables\r\n                        evaluate = true;\r\n                        break;\r\n                    }\r\n                    else appeared = appeared.concat(vars);\r\n                }\r\n            }\r\n            \r\n            //appeared.length is 0 when all arguments are group N\r\n            if (evaluate || appeared.length === 0) {\r\n                //TODO: distribute exponent so that (a^-1*b^-1)^-1 => a*b\r\n                if(args.every(function(symbol){return symbol.getDenom().equals(1)})) {\r\n                    var aggregate = args[0];\r\n                    \r\n                    for(var i = 1; i < args.length; i++) {\r\n                        aggregate = __.gcd_(args[i], aggregate);\r\n                    }\r\n                    return aggregate;\r\n                }\r\n                else {\r\n                    //gcd_ cannot handle denominators correctly\r\n                    return _.divide(__.gcd.apply(null, args.map(function(symbol){return symbol.getNum(); })),\r\n                                    __.lcm.apply(null, args.map(function(symbol){return symbol.getDenom(); })));\r\n                }\r\n            }\r\n            else return _.symfunction('gcd', args);\r\n        },\r\n        gcd_: function(a, b) { \r\n            if(a.group === FN || a.group === P)\r\n                a = core.Utils.block('PARSE2NUMBER', function() {\r\n                   return _.parse(a); \r\n                });\r\n\t\t\r\n            if(b.group === FN)\r\n                b = core.Utils.block('PARSE2NUMBER', function() {\r\n                   return _.parse(b); \r\n                });\r\n\t\t\r\n            if(a.isConstant() && b.isConstant()) { \r\n                // return core.Math2.QGCD(new Frac(+a), new Frac(+b));\r\n                return new Symbol(core.Math2.QGCD(new Frac(+a), new Frac(+b)));\r\n            }\r\n\r\n            var den = _.multiply(a.getDenom() || new Symbol(1), b.getDenom() || new Symbol(1)).invert();\r\n            a = _.multiply(a.clone(), den.clone());\r\n            b = _.multiply(b.clone(), den.clone());\r\n\t\t\r\n            //feels counter intuitive but it works. Issue #123 (nerdamer(\"gcd(x+y,(x+y)^2)\"))\r\n            a = _.expand(a);\r\n            b = _.expand(b);\r\n\r\n            if(a.group === CB || b.group === CB) {\r\n                var q = _.divide(a.clone(), b.clone()); //get the quotient\r\n                var t = _.multiply(b.clone(), q.getDenom().invert());//multiply by the denominator\r\n                //if they have a common factor then the result will not equal one \r\n                if(!t.equals(1))\r\n                    return t;\r\n            }\r\n            \r\n            //just take the gcd of each component when either of them is in group EX\r\n            if(a.group === EX || b.group === EX)\r\n            {\r\n                var gcd_m = new Symbol(core.Math2.GCD(a.multiplier, b.multiplier));\r\n                var gcd_v = __.gcd_(a.value === CONST_HASH ? new Symbol(1) : _.parse(a.value), b.value === CONST_HASH ? new Symbol(1) : _.parse(b.value));\r\n                var gcd_p = __.gcd_(_.parse(a.power), _.parse(b.power));\r\n                return _.multiply(gcd_m, _.pow(gcd_v, gcd_p));\r\n            }\r\n            \t\t  \r\n            if(a.length < b.length) { //swap'm\r\n                var t = a; a = b; b = t;\r\n            }\r\n            var vars_a = variables(a), vars_b = variables(b);\r\n            if((vars_a.length === vars_b.length && vars_a.length === 1 && vars_a[0] === vars_b[0]) \r\n                    || vars_a.length === 1 && vars_b.length === 0 \r\n                    || vars_a.length === 0 && vars_b.length === 1) {\r\n                a = new Polynomial(a); b = new Polynomial(b);\r\n                return _.divide(a.gcd(b).toSymbol(), den);\r\n            }\r\n            else { \r\n                //get the gcd of the multipiers\r\n                //get rid of gcd in coeffs\r\n                var multipliers = [];\r\n                a.each(function(x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                b.each(function(x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                \r\n                var T;\r\n                while(!b.equals(0)) {  \r\n                    var t = b.clone(); \r\n                    a = a.clone(); \r\n                    T = __.div(a, t);\r\n                    \r\n                    b = T[1]; \r\n                    if(T[0].equals(0)) {\r\n                        //return _.multiply(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), b);\r\n                        return _.divide(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), den);\r\n                    }\r\n                    a = t; \r\n                }\r\n                \r\n                var gcd = core.Math2.QGCD.apply(undefined, multipliers);\r\n\r\n                if(!gcd.equals(1)) {\r\n                    a.each(function(x) {\r\n                        x.multiplier = x.multiplier.divide(gcd);\r\n                    });\r\n                }\r\n                \r\n                //return symbolic function for gcd in indeterminate form\r\n                if(a.equals(1) && !a.isConstant() && !b.isConstant())\r\n                    return _.divide(_.symfunction('gcd', arguments), den);\r\n                \r\n                return _.divide(a, den);\r\n            }\r\n        },\r\n        lcm: function() { \r\n            //https://math.stackexchange.com/a/319310\r\n            //generalization of the 2-variable formula of lcm\r\n            \r\n            var args;\r\n            if(arguments.length === 1)\r\n                if (arguments[0] instanceof core.Vector) args = arguments[0].elements;\r\n                else _.error('lcm expects either 1 vector or 2 or more arguments');\r\n            else args = core.Utils.arguments2Array(arguments);\r\n\r\n            //product of all arguments\r\n            //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            var numer = args.reduce(function(prev,curr){return _.multiply(prev, curr.clone())}, new Symbol(1));\r\n            \r\n            //gcd of complementary terms\r\n            var denom_args = \r\n                //https://stackoverflow.com/a/18223072\r\n                //take all complementary terms, e.g.\r\n                //[a,b,c] => [a*b, b*c, a*c]\r\n                //[a,b,c,d] => [a*b*c, a*b*d, a*c*d, b*c*d]\r\n                (function(input, size) {\r\n                    var results = [], result, mask, i, total = Math.pow(2, input.length);\r\n                    for (mask = size; mask < total; mask++) {\r\n                        result = [];\r\n                        i = input.length - 1;\r\n\r\n                        do {\r\n                            if ((mask & (1 << i)) !== 0) {\r\n                                result.push(input[i]);\r\n                            }\r\n                        } while (i--);\r\n\r\n                        if (result.length == size) {\r\n                        results.push(result);\r\n                    }\r\n                }\r\n                return results; \r\n                //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            })(arguments,arguments.length-1).map(function(x){return x.reduce(function(prev,curr){return _.multiply(prev,curr.clone())},new Symbol(1))});\r\n             \r\n            //don't eat the gcd term if all arguments are symbols\r\n            if(args.every(function(x){return core.Utils.isVariableSymbol(x)}))\r\n                var denom = _.symfunction('gcd', core.Utils.arrayUnique(denom_args));\r\n            else\r\n                var denom = __.gcd.apply(null, denom_args);\r\n            \r\n            //divide product of all arguments by gcd of complementary terms\r\n            return _.divide(numer, denom);\r\n        },\r\n        /**\r\n         * Divides one expression by another\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Array}\r\n         */\r\n        divide: function(symbol1, symbol2) {\r\n            var result, remainder, factored, den;\r\n            factored = core.Algebra.Factor.factor(symbol1.clone());\r\n            den = factored.getDenom();\r\n            if(!den.isConstant('all')) {\r\n                symbol1 = _.expand(Symbol.unwrapPARENS(_.multiply(factored, den.clone())));\r\n            }\r\n            else\r\n                //reset the denominator since we're not dividing by it anymore\r\n                den = new Symbol(1); \r\n            result = __.div(symbol1, symbol2);\r\n            remainder = _.divide(result[1], symbol2);\r\n            return _.divide(_.add(result[0], remainder), den);\r\n        },\r\n        div: function(symbol1, symbol2) {\r\n            //division by constants\r\n            if(symbol2.isConstant()) {\r\n                symbol1.each(function(x) { \r\n                    x.multiplier = x.multiplier.divide(symbol2.multiplier);\r\n                });\r\n                return [symbol1, new Symbol(0)];\r\n            }\r\n            //so that factorized symbols don't affect the result\r\n\t    symbol1 = _.expand(symbol1);\r\n\t    symbol2 = _.expand(symbol2);\r\n            //special case. May need revisiting\r\n            if(symbol1.group === S && symbol2.group === CP) { \r\n                var x = symbol1.value;\r\n                var f = core.Utils.decompose_fn(symbol2.clone(), x, true);\r\n                if(symbol1.isLinear() && f.x && f.x.isLinear() && symbol2.isLinear()) {\r\n                    var k = Symbol.create(symbol1.multiplier);\r\n                    return [_.divide(k.clone(), f.a.clone()), _.divide(_.multiply(k, f.b), f.a).negate()];\r\n                }\r\n            }\r\n            if(symbol1.group === S && symbol2.group === S) {\r\n                var r = _.divide(symbol1.clone(), symbol2.clone());\r\n                if(r.isConstant()) //we have a whole\r\n                    return [r, new Symbol(0)];\r\n                return [new Symbol(0), symbol1.clone()];\r\n            }\r\n            var symbol1_has_func = symbol1.hasFunc(),\r\n                symbol2_has_func = symbol2.hasFunc(),\r\n                parse_funcs = false;\r\n            \r\n            //substitute out functions so we can treat them as regular variables\r\n            if(symbol1_has_func || symbol2_has_func) {\r\n                parse_funcs = true;\r\n                var map = {},\r\n                    symbol1 = _.parse(core.Utils.subFunctions(symbol1, map)),\r\n                    symbol2 = _.parse(core.Utils.subFunctions(symbol2, map)),\r\n                    subs = core.Utils.getFunctionsSubs(map);\r\n            }\r\n            //get a list of the variables\r\n            var vars = core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),\r\n                quot, rem;\r\n        \r\n            //treat imaginary numbers as variables\r\n            if(symbol1.isImaginary() || symbol2.isImaginary()) {\r\n                vars.push(core.Settings.IMAGINARY);\r\n            }\r\n            \r\n            if(vars.length === 1) { \r\n                var q = new Polynomial(symbol1).divide(new Polynomial(symbol2));\r\n                quot = q[0].toSymbol();\r\n                rem = q[1].toSymbol();\r\n            }\r\n            else {\r\n                vars.push(CONST_HASH); //this is for the numbers\r\n                var reconvert = function(arr) {\r\n                    var symbol = new Symbol(0);\r\n                    for(var i=0; i<arr.length; i++) {\r\n                        var x = arr[i].toSymbol();\r\n                        symbol = _.add(symbol, x);\r\n                    }\r\n                    return symbol;\r\n                };\r\n                //Silly Martin. This is why you document. I don't remember now\r\n                var get_unique_max = function(term, any) {\r\n                    var max = Math.max.apply(null, term.terms),\r\n                        count = 0, idx;\r\n\r\n                    if(!any) {\r\n                        for(var i=0; i<term.terms.length; i++) {\r\n                            if(term.terms[i].equals(max)) {\r\n                                idx = i; count++;\r\n                            }\r\n                            if(count > 1) return;\r\n                        }\r\n                    }\r\n                    if(any) {\r\n                        for(i=0; i<term.terms.length; i++) \r\n                            if(term.terms[i].equals(max)) {\r\n                                idx = i; break;\r\n                            }\r\n                    }\r\n                    return [max, idx, term];\r\n                };\r\n                //tries to find an LT in the dividend that will satisfy division\r\n                var get_det = function(s, lookat) { \r\n                    lookat = lookat || 0;\r\n                    var det = s[lookat], l = s.length; \r\n                    if(!det) return;\r\n                    //eliminate the first term if it doesn't apply\r\n                    var umax = get_unique_max(det); \r\n                    for(var i=lookat+1; i<l; i++) {\r\n                        var term = s[i],   \r\n                            is_equal = det.sum.equals(term.sum);\r\n                        if(!is_equal && umax) { \r\n                            break;\r\n                        } \r\n                        if(is_equal) {\r\n                            //check the differences of their maxes. The one with the biggest difference governs\r\n                            //e.g. x^2*y^3 vs x^2*y^3 is unclear but this isn't the case in x*y and x^2\r\n                            var max1, max2, idx1, idx2, l2 = det.terms.length;\r\n                            for(var j=0; j<l2; j++) {\r\n                                var item1 = det.terms[j], item2 = term.terms[j];\r\n                                if(typeof max1 === 'undefined' || item1.greaterThan(max1)) {\r\n                                    max1 = item1; idx1 = j;\r\n                                }\r\n                                if(typeof max2 === 'undefined' || item2.greaterThan(max2)) {\r\n                                    max2 = item2; idx2 = j;\r\n                                }\r\n                            }\r\n                            //check their differences\r\n                            var d1 = max1.subtract(term.terms[idx1]),\r\n                                d2 = max2.subtract(det.terms[idx2]);\r\n                            if(d2 > d1) {\r\n                                umax = [max2, idx2, term];\r\n                                break;\r\n                            }\r\n                            if(d1 > d2) {\r\n                                umax = [max1, idx1, det];\r\n                                break;\r\n                            }\r\n                        }\r\n                        else { \r\n                            //check if it's a suitable pick to determine the order\r\n                            umax = get_unique_max(term); \r\n                            //if(umax) return umax;\r\n                            if(umax) break;\r\n                        }\r\n                        umax = get_unique_max(term); //calculate a new unique max\r\n                    }\r\n\r\n                    //if still no umax then any will do since we have a tie\r\n                    if(!umax) return get_unique_max(s[0], true);\r\n                    var e, idx;\r\n                    for(var i=0; i<s2.length; i++) {\r\n                        var cterm = s2[i].terms;\r\n                        //confirm that this is a good match for the denominator\r\n                        idx = umax[1];\r\n                        if(idx === cterm.length - 1) return ;\r\n                        e = cterm[idx]; \r\n                        if(!e.equals(0)) break;\r\n                    }\r\n                    if(e.equals(0)) return get_det(s, ++lookat); //look at the next term\r\n\r\n                    return umax;\r\n                };\r\n\r\n                var t_map = core.Utils.toMapObj(vars);\r\n                var init_sort = function(a, b) {\r\n                    return b.sum.subtract(a.sum);\r\n                };\r\n                var is_larger = function(a, b) { \r\n                    if(!a || !b) return false; //it's empty so...\r\n                    for(var i=0; i<a.terms.length; i++) {\r\n                        if(a.terms[i].lessThan(b.terms[i])) return false;\r\n                    }\r\n                    return true;\r\n                };\r\n                var s1 = symbol1.tBase(t_map).sort(init_sort),\r\n                    s2 = symbol2.tBase(t_map).sort(init_sort);\r\n                var target = is_larger(s1[0], s2[0]) && s1[0].count > s2[0].count ? s2 : s1; //since the num is already larger than we can get the det from denom\r\n                var det = get_det(target);//we'll begin by assuming that this will let us know which term \r\n                var quotient = [];\r\n                if(det) {\r\n                    var lead_var = det[1];\r\n                    var can_divide = function(a, b) { \r\n                        if(a[0].sum.equals(b[0].sum)) return a.length >= b.length;\r\n                        return true;\r\n                    };\r\n\r\n                    var try_better_lead_var = function(s1, s2, lead_var) {\r\n                        var checked = [];\r\n                        for(var i=0; i<s1.length; i++) { \r\n                            var t = s1[i];\r\n                            for(var j=0; j<t.terms.length; j++) {\r\n                                var cf = checked[j], tt = t.terms[j];\r\n                                if(i === 0) checked[j] = tt; //add the terms for the first one\r\n                                else if(cf && !cf.equals(tt)) checked[j] = undefined;\r\n                            }\r\n                        }\r\n                        for(var i=0; i<checked.length; i++) {\r\n                            var t = checked[i];\r\n                            if(t && !t.equals(0)) return i;\r\n                        }\r\n                        return lead_var;\r\n                    };\r\n                    var sf = function(a, b){ \r\n                        var l1 = a.len(), l2 = b.len();\r\n                        var blv = b.terms[lead_var], alv = a.terms[lead_var];\r\n                        if(l2 > l1 && blv.greaterThan(alv)) return l2 - l1;\r\n                        return blv.subtract(alv); \r\n                    };\r\n\r\n                    //check to see if there's a better lead_var\r\n                    lead_var = try_better_lead_var(s1, s2, lead_var);\r\n                    //reorder both according to the max power\r\n                    s1.sort(sf); //sort them both according to the leading variable power\r\n                    s2.sort(sf);\r\n\r\n                    //try to adjust if den is larger\r\n                    var fdt = s2[0], fnt = s1[0];\r\n\r\n                    var den = new MVTerm(new Frac(1), [], fnt.map);\r\n                    if(fdt.sum.greaterThan(fnt.sum)&& fnt.len() > 1) {\r\n                        for(var i=0; i<fnt.terms.length; i++) {\r\n                            var d = fdt.terms[i].subtract(fnt.terms[i]);\r\n                            if(!d.equals(0)) {\r\n                                var nd = d.add(new Frac(1));\r\n                                den.terms[i] = d;\r\n                                for(var j=0; j<s1.length; j++) {\r\n                                    s1[j].terms[i] = s1[j].terms[i].add(nd);\r\n                                }\r\n                            }\r\n                            else den.terms[i] = new Frac(0);\r\n                        }\r\n                    }\r\n\r\n                    var dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                    while(dividend_larger && can_divide(s1, s2)) {\r\n                        var q = s1[0].divide(s2[0]);\r\n\r\n                        quotient.push(q); //add what's divided to the quotient\r\n                        s1.shift();//the first one is guaranteed to be gone so remove from dividend\r\n                        for(var i=1; i<s2.length; i++) { //loop through the denominator\r\n                            var t = s2[i].multiply(q).generateImage(), \r\n                                l2 = s1.length;\r\n                            //if we're subtracting from 0\r\n                            if(l2 === 0) { \r\n                                t.coeff = t.coeff.neg();\r\n                                s1.push(t); \r\n                                s1.sort(sf);\r\n                            }\r\n\r\n                            for(var j=0; j<l2; j++) {\r\n                                var cur = s1[j];\r\n                                if(cur.getImg() === t.getImg()) {\r\n                                    cur.coeff = cur.coeff.subtract(t.coeff);\r\n                                    if(cur.coeff.equals(0)) {\r\n                                        core.Utils.remove(s1, j);\r\n                                        j--; //adjust the iterator\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                if(j === l2 - 1) { \r\n                                    t.coeff = t.coeff.neg();\r\n                                    s1.push(t); \r\n                                    s1.sort(sf);\r\n                                }\r\n                            }\r\n                        }\r\n                        dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                        if(!dividend_larger && s1.length >= s2.length) {\r\n                            //One more try since there might be a terms that is larger than the LT of the divisor\r\n                            for(var i=1; i<s1.length; i++) {\r\n                                dividend_larger = is_larger(s1[i], s2[0]);\r\n                                if(dividend_larger) {\r\n                                    //take it from its current position and move it to the front\r\n                                    s1.unshift(core.Utils.remove(s1, i)); \r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                quot = reconvert(quotient);\r\n                rem = reconvert(s1);\r\n\r\n                if(typeof den !== 'undefined') {\r\n                    den = den.toSymbol();\r\n                    quot = _.divide(quot, den.clone());\r\n                    rem = _.divide(rem, den);\r\n                }\r\n            }\r\n\r\n            //put back the functions\r\n            if(parse_funcs) {\r\n                quot = _.parse(quot.text(), subs);\r\n                rem = _.parse(rem.text(), subs);\r\n            }\r\n\r\n            return [quot, rem];\r\n        },\r\n        line: function(v1, v2, x) {\r\n            if(core.Utils.isArray(v1))\r\n                v1 = core.Utils.convertToVector(v1);\r\n            if(core.Utils.isArray(v2))\r\n                v2 = core.Utils.convertToVector(v2);\r\n            x = _.parse(x || 'x');\r\n            if(!core.Utils.isVector(v1)||!core.Utils.isVector(v2))\r\n                _.error('Line expects a vector! Received \"'+v1+'\" & \"'+v2+'\"');\r\n            var dx = _.subtract(v2.e(1).clone(), v1.e(1).clone()),\r\n                dy = _.subtract(v2.e(2).clone(), v1.e(2).clone()),\r\n                m = _.divide(dy, dx),\r\n                a = _.multiply(x, m.clone()),\r\n                b = _.multiply(v1.e(1).clone(),m);\r\n            return _.add(_.subtract(a, b), v1.e(2).clone());\r\n        },\r\n        PartFrac: {\r\n            createTemplate: function(den, denom_factors, f_array, v) {\r\n                //clean up the denominator function by factors so it reduces nicely\r\n                den = __.Factor.factor(den);\r\n                \r\n                //clean up factors. This is so inefficient but factors are wrapped in parens for safety\r\n                den.each(function(x, key) {\r\n                    if(x.group === FN && x.fname === '' && x.args[0].group === S) {\r\n                        var y = x.args[0];\r\n                        if(this.symbols) {\r\n                            delete this.symbols[key];\r\n                            this.symbols[y.value] = y;\r\n                        }\r\n                        else {\r\n                            den = x.args[0];\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var factors, factors_vec, f, p, deg, degrees, m;\r\n                factors = denom_factors.collectFactors();\r\n                factors_vec = []; //a vector for the template\r\n                degrees = [];\r\n                m = new Symbol(1);\r\n\r\n                for(var i=0; i<factors.length; i++) { //loop through the factors\r\n                    var factor = Symbol.unwrapPARENS(factors[i]);\r\n                    //if in he for P^n where P is polynomial and n = integer\r\n                    if(factor.power.greaterThan(1)) { \r\n                        p = Number(factor.power);\r\n                        f = factor.clone().toLinear(); //remove the power so we have only the function\r\n                        deg = Number(__.degree(f, v)); //get the degree of f\r\n                        //expand the factor\r\n                        for(var j=0; j<p; j++){\r\n                            var efactor = _.pow(f.clone(), new Symbol(j+1));\r\n                            f_array.push(efactor.clone());\r\n                            var d = _.divide(den.clone(), efactor.clone());\r\n                            degrees.push(deg);\r\n                            factors_vec.push(d);\r\n                        }\r\n                    }\r\n                    /*\r\n                    Possible bug.\r\n                    Removed: causes 1/(20+24*x+4*x^2) to result in (-1/64)*(5+x)^(-1)+(1/64)*(1+x)^(-1)\r\n                    else if(factor.isConstant('all')) {\r\n                        m = _.multiply(m, factor);\r\n                    }\r\n                    */\r\n                    else {\r\n                        //get the degree of the factor so we tack it on tot he factor. This should probably be an array\r\n                        //but for now we note it on the symbol\r\n                        deg = Number(__.degree(factor, v)); \r\n                        f_array.push(factor);\r\n                        var d = _.divide(den.clone(), factor.clone());\r\n                        d = _.expand(Symbol.unwrapPARENS(d));\r\n                        degrees.push(deg);\r\n                        factors_vec.push(d);\r\n                    }\r\n                }\r\n                //put back the constant\r\n                f_array = f_array.map(function(x) {\r\n                    return _.multiply(x, m.clone());\r\n                });\r\n                return [f_array, factors_vec, degrees];\r\n            },\r\n            partfrac: function(symbol, v, as_array) { \r\n                var vars = variables(symbol);\r\n                v = v || _.parse(vars[0]); //make wrt optional and assume first variable\r\n                try {\r\n                    var num, den, factors, tfactors, ofactors, nterms, degrees,\r\n                        dterms, max, M, c, powers, div, r, factors_vec, ks,\r\n                        template, tfactors;\r\n                    num = _.expand(symbol.getNum());\r\n                    den = _.expand(symbol.getDenom().toUnitMultiplier());\r\n                    //move the entire multipier to the numerator\r\n                    num.multiplier = symbol.multiplier;\r\n                    //we only have a meaningful change if n factors > 1. This means that\r\n                    //the returned group will be a CB\r\n                    //collect the terms wrt the x\r\n                    nterms = num.groupTerms(v);\r\n                    //divide out wholes if top is larger\r\n                    if(Number(__.degree(num, v)) >= Number(__.degree(den, v))) {\r\n                        div = __.div(num.clone(), _.expand(den.clone()));\r\n                        r = div[0]; //remove the wholes\r\n                        num = div[1]; //work with the remainder\r\n                        nterms = num.groupTerms(v); //recalculate the nterms\r\n                    }\r\n                    else\r\n                        r = new Symbol(0);\r\n                    \r\n                    if(Number(__.degree(den, v)) === 1) {\r\n                        var q = _.divide(num, den);\r\n                        if(as_array)\r\n                            return [r, q];\r\n                        return _.add(r, q);\r\n                    }\r\n                    //first factor the denominator. This means that the strength of this\r\n                    //algorithm depends on how well we can factor the denominator. \r\n                    ofactors = __.Factor.factor(den);\r\n                    //create the template. This method will create the template for solving \r\n                    //the partial fractions. So given x/(x-1)^2 the template creates A/(x-1)+B/(x-1)^2\r\n                    template = __.PartFrac.createTemplate(den.clone(), ofactors, [], v);\r\n                    tfactors = template[0]; //grab the factors\r\n                    factors_vec = template[1]; //grab the factor vectors\r\n                    degrees = template[2]; //grab the degrees\r\n                    //make note of the powers of each term\r\n                    powers = [nterms.length];\r\n                    //create the dterms vector\r\n                    dterms = [];\r\n                    factors = [];\r\n                    ks = []; \r\n                    var factor, deg;\r\n                    factors_vec.map(function(x, idx) { \r\n                        factor = tfactors[idx];\r\n                        deg = degrees[idx];\r\n                        for(var i=0; i<deg; i++) {\r\n                            factors.push(factor.clone());\r\n                            var k = Symbol.create(v, i);\r\n                            var t = _.expand(_.multiply(x, k.clone())).groupTerms(v);\r\n                            //make a note of the power which corresponds to the length of the array\r\n                            var p = t.length;\r\n                            powers.push(p); \r\n                            dterms.push(t);\r\n                            ks.push(k.clone());\r\n                        }\r\n                    });\r\n                    //get the max power\r\n                    max = core.Utils.arrayMax(powers);\r\n\r\n                    //fill the holes and create a matrix\r\n                    c = new core.Matrix(core.Utils.fillHoles(nterms, max)).transpose();\r\n                    //for each of the factors we do the same\r\n                    M = new core.Matrix();\r\n                    for(var i=0; i<dterms.length; i++) {\r\n                        M.elements.push(core.Utils.fillHoles(dterms[i], max));\r\n                    }\r\n\r\n                    //solve the system of equations\r\n                    var partials = _.multiply(M.transpose().invert(), c);\r\n                    //the results are backwards to reverse it\r\n                    //partials.elements.reverse();\r\n                    //convert it all back\r\n                    var retval = as_array ? [r] : r;\r\n                    partials.each(function(e, i) {\r\n                        var term = _.multiply(ks[i],_.divide(e, factors[i]));\r\n                        if(as_array)\r\n                            retval.push(term);\r\n                        else \r\n                            retval = _.add(retval, term);\r\n                    });\r\n\r\n                    //done\r\n                    return retval;\r\n                }\r\n                catch(e){};\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        degree: function(symbol, v, o) { \r\n            o = o || {\r\n                nd: [], //numeric\r\n                sd: [], //symbolic\r\n                depth: 0 //call depth\r\n            };\r\n            \r\n            if(!v) {\r\n                var vars = variables(symbol);\r\n                //The user must specify the variable for multivariate\r\n                if(vars.length > 1)\r\n                    throw new Error('You must specify the variable for multivariate polynomials!');\r\n                //if it's empty then we're dealing with a constant\r\n                if(vars.length === 0)\r\n                    return new Symbol(0);\r\n                //assume the variable for univariate\r\n                v = _.parse(vars[0]);\r\n            }\r\n\r\n            //store the group\r\n            var g = symbol.group;\r\n            //we're going to trust the user and assume no EX. Calling isPoly \r\n            //would eliminate this but no sense in checking twice. \r\n            if(symbol.isComposite()) { \r\n                symbol = symbol.clone();\r\n                symbol.distributeExponent();\r\n                symbol.each(function(x) {\r\n                    o.depth++; //mark a depth increase\r\n                    __.degree(x, v, o);\r\n                    o.depth--; //we're back\r\n                });\r\n            }\r\n            else if(symbol.group === CB) {\r\n                symbol.each(function(x) {\r\n                    o.depth++;\r\n                    __.degree(x, v, o);\r\n                    o.depth++;\r\n                });\r\n            }\r\n            else if(g === EX && symbol.value === v.value) { \r\n                o.sd.push(symbol.power.clone());\r\n            }\r\n            else if(g === S && symbol.value === v.value){ \r\n                o.nd.push(_.parse(symbol.power));\r\n            }\r\n            else\r\n                o.nd.push(new Symbol(0));\r\n            \r\n            //get the max out of the array\r\n            var deg = o.nd.length > 0 ? core.Utils.arrayMax(o.nd) : undefined;\r\n            \r\n            if(o.depth === 0 && o.sd.length > 0) {\r\n                if(deg !== undefined)\r\n                    o.sd.unshift(deg);\r\n                return _.symfunction('max', o.sd);\r\n            }\r\n            if(!core.Utils.isSymbol(deg))\r\n                deg = _.parse(deg);\r\n            //return the degree\r\n            return deg;\r\n        },\r\n        /**\r\n         * Attempts to complete the square of a polynomial\r\n         * @param {type} symbol\r\n         * @param {type} v\r\n         * @param {type} raw\r\n         * @throws {Error} \r\n         * @returns {Object|Symbol[]}\r\n         */\r\n        sqComplete: function(symbol, v, raw) {\r\n            if(!core.Utils.isSymbol(v))\r\n                v = _.parse(v);\r\n            var stop = function(msg) {\r\n                msg = msg || 'Stopping';\r\n                throw new core.exceptions.ValueLimitExceededError(msg);\r\n            };\r\n            //if not CP then nothing to do\r\n            if(!symbol.isPoly()) \r\n                stop('Must be a polynomial!');\r\n            //declare vars\r\n            var deg, a, b, c, d, e, coeffs, sign, br, sym, sqrt_a;\r\n\r\n            br = core.Utils.inBrackets;\r\n            //make a copy\r\n            symbol = symbol.clone();\r\n            deg = core.Algebra.degree(symbol, v); //get the degree of polynomial\r\n            //must be in form ax^2 +/- bx +/- c\r\n            if(!deg.equals(2))\r\n                stop('Cannot complete square for degree '+deg);\r\n            //get the coeffs\r\n            coeffs = core.Algebra.coeffs(symbol, v);\r\n            a = coeffs[2];\r\n            //store the sign\r\n            sign = coeffs[1].sign(); \r\n            //divide the linear term by two and square it\r\n            b = _.divide(coeffs[1], new Symbol(2));\r\n            //add the difference to the constant\r\n            c = _.pow(b.clone(), new Symbol(2));\r\n            if(raw)\r\n                return [a, b, d];\r\n            sqrt_a = math.sqrt(a);\r\n            e = _.divide(math.sqrt(c), sqrt_a.clone());\r\n            //calculate d which is the constant\r\n            d = _.subtract(coeffs[0], _.pow(e.clone(), new Symbol(2)));\r\n            //compute the square part\r\n            sym = _.parse(br(sqrt_a.clone()+'*'+v+(sign < 0 ? '-' : '+')+e));\r\n            return {\r\n                a: sym,\r\n                c: d,\r\n                f: _.add(_.pow(sym.clone(), new Symbol(2)), d.clone())\r\n            };\r\n        },\r\n        Simplify: {\r\n            strip: function(symbol) {\r\n                var c = _.parse(symbol.multiplier);\r\n                symbol.toUnitMultiplier();\r\n                var p = _.parse(symbol.power);\r\n                symbol.toLinear();\r\n                return [c, p, symbol];\r\n            },\r\n            unstrip: function(cp, symbol) {\r\n                var c = cp[0];\r\n                var p = cp[1];\r\n                return _.multiply(c, _.pow(symbol, p));\r\n            },\r\n            complexSimp: function(num, den) {\r\n                var ac, bd, bc, ad, cd, r1, r2, i1, i2;\r\n                r1 = num.realpart();\r\n                i1 = num.imagpart();\r\n                r2 = den.realpart();\r\n                i2 = den.imagpart();\r\n                //apply complex arithmatic rule\r\n                ac = _.multiply(r1.clone(), r2.clone());\r\n                bd = _.multiply(i1.clone(), i2.clone());\r\n                bc = _.multiply(r2.clone(), i1);\r\n                ad = _.multiply(r1, i2.clone());\r\n                cd = _.add(_.pow(r2, new Symbol(2)), _.pow(i2, new Symbol(2)));\r\n                \r\n                return _.divide(_.add(_.add(ac, bd), _.multiply(_.subtract(bc, ad), Symbol.imaginary())), cd);\r\n            },\r\n            trigSimp: function(symbol) { \r\n                if(symbol.containsFunction(['cos', 'sin', 'tan'])) {\r\n                    symbol = symbol.clone();\r\n                    //remove power and multiplier\r\n                    var sym_array = __.Simplify.strip(symbol);\r\n                    symbol = sym_array.pop();\r\n                    //the default return value is the symbol\r\n                    var retval = symbol.clone();\r\n\r\n                    //rewrite the symbol\r\n                    if(symbol.group === CP) {\r\n                        var sym = new Symbol(0);\r\n                        symbol.each(function(x) {\r\n                            //rewrite the function\r\n                            var tr = __.Simplify.trigSimp(x.fnTransform());\r\n                            sym = _.add(sym, tr);\r\n                        }, true);\r\n                        //put back the power and multiplier and return\r\n                        retval = _.pow(_.multiply(new Symbol(symbol.multiplier), sym), new Symbol(symbol.power));\r\n                    }\r\n                    else if(symbol.group === CB) {\r\n                        //try for tangent\r\n                        var n = symbol.getNum();\r\n                        var d = symbol.getDenom();\r\n                        if(n.fname === 'sin' && d.fname === 'cos' && n.args[0].equals(d.args[0]) && n.power.equals(d.power)) {\r\n                            retval =_.parse(core.Utils.format('({0})*({1})*tan({2})^({3})', d.multiplier, n.multiplier, n.args[0], n.power));\r\n                        }\r\n                        if(retval.group === CB) {\r\n                            var t = new Symbol(1);\r\n                            retval.each(function(x) {\r\n                                if(x.fname === 'tan') {\r\n                                    x = _.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})', x.multiplier, __.Simplify.simplify(x.args[0]), x.power));\r\n                                }\r\n                                t = _.multiply(t, x);\r\n                            });\r\n                            retval = t;\r\n                        }\r\n                    }\r\n\r\n                    retval = __.Simplify.unstrip(sym_array, retval).distributeMultiplier();\r\n                    \r\n                    symbol = retval;\r\n                }\r\n                \r\n                return symbol;\r\n            },\r\n            fracSimp: function(symbol) {\r\n                //try a quick simplify of imaginary numbers\r\n                var den = symbol.getDenom();\r\n                var num = symbol.getNum();\r\n                if(num.isImaginary() && den.isImaginary())\r\n                    symbol = __.Simplify.complexSimp(num, den);\r\n                \r\n                if(symbol.isComposite()) {\r\n                    var symbols = symbol.collectSymbols();\r\n                    //assumption 1.\r\n                    //since it's a composite, it has a length of at least 1\r\n                    var retval, a, b, d1, d2, n1, n2, x, y, c, den, num;\r\n                    a = symbols.pop(); //grab the first symbol\r\n                    //loop through each term and make denominator common\r\n                    while(symbols.length) {\r\n                        b = symbols.pop(); //grab the second symbol\r\n                        d1 = _.parse(a.getDenom());\r\n                        d2 = _.parse(b.getDenom());\r\n                        n1 = a.getNum();\r\n                        n2 = b.getNum();\r\n                        c = _.multiply(d1.clone(), d2.clone());\r\n                        x = _.multiply(n1, d2);\r\n                        y = _.multiply(n2, d1);\r\n                        a = _.divide(_.add(x, y), c);\r\n                    }\r\n                    den = _.expand(a.getDenom());\r\n                    num = _.expand(a.getNum());\r\n                    \r\n                    //simplify imaginary\r\n                    if(num.isImaginary() && den.isImaginary()) {\r\n                        retval = __.Simplify.complexSimp(num, den);\r\n                    }\r\n                    else {\r\n                        retval = _.divide(num, den);\r\n                    }\r\n\r\n                    //we've already hit the simplest form so return that\r\n                    if(retval.equals(symbol))\r\n                        return retval;\r\n                    //otherwise simplify it some more\r\n                    return __.Simplify.simplify(retval);\r\n                }\r\n                return symbol;\r\n            },\r\n            ratSimp: function(symbol) {\r\n                if(symbol.group === CB) {\r\n                    var den = __.Simplify.fracSimp(symbol.getDenom());\r\n                    var num = __.Simplify.fracSimp(symbol.getNum());\r\n                    symbol = _.divide(num, den);\r\n                }\r\n                return symbol;\r\n            },\r\n            simplify: function(symbol) { \r\n                //remove the multiplier to make calculation easier;\r\n                var sym_array = __.Simplify.strip(symbol);\r\n                symbol = sym_array.pop();\r\n                \r\n                //remove gcd from denominator\r\n                symbol = __.Simplify.fracSimp(symbol);\r\n\r\n                //nothing more to do\r\n                if(symbol.isConstant() || symbol.group === core.groups.S) {\r\n                    sym_array.push(symbol);\r\n                    var ret = __.Simplify.unstrip(sym_array, symbol);\r\n                    return ret;\r\n                }\r\n                    \r\n                var simplified;\r\n                symbol = symbol.clone(); //make a copy\r\n                ////1. Try cos(x)^2+sin(x)^2 \r\n\r\n                simplified = __.Simplify.trigSimp(symbol);\r\n\r\n                //simplify common denominators\r\n                simplified = __.Simplify.ratSimp(simplified);\r\n\r\n                //first go for the \"cheapest\" simplification which may eliminate \r\n                //your problems right away. factor -> evaluate. Remember\r\n                //that there's no need to expand since factor already does that\r\n                simplified = __.Factor.factor(simplified);\r\n\r\n                //If the simplfied is a sum then we can make a few more simplifications\r\n                //e.g. simplify(1/(x-1)+1/(1-x)) as per issue #431\r\n                if(simplified.group === core.groups.CP && simplified.isLinear()) {\r\n                    var m = simplified.multiplier.clone();\r\n                    simplified.toUnitMultiplier(); //strip the multiplier\r\n                    var r = new Symbol(0);\r\n                    //return the sum of simplifications\r\n                    simplified.each(function(x) {\r\n                        var s = __.Simplify.simplify(x);\r\n                        r = _.add(r, s);\r\n                    });\r\n                    simplified = r;\r\n                    //put back the multiplier\r\n                    r.multiplier = r.multiplier.multiply(m);\r\n                }\r\n                //place back multiplier and return\r\n                var retval = __.Simplify.unstrip(sym_array, evaluate(simplified));\r\n\r\n                return retval;\r\n            }\r\n        },\r\n            \r\n        Classes: {\r\n            Polynomial: Polynomial,\r\n            Factors: Factors,\r\n            MVTerm: MVTerm\r\n        }\r\n    };\r\n\r\n    nerdamer.useAlgebraDiv = function() {\r\n        var divide = __.divideFn = _.divide;\r\n        var calls = 0; //keep track of how many calls were made\r\n        _.divide = function(a, b) {\r\n            calls++;\r\n            var ans;\r\n            if(calls === 1) //check if this is the first call. If it is use algebra divide\r\n                ans = core.Algebra.divide(a, b);\r\n            else //otherwise use parser divide\r\n                ans = divide(a, b);\r\n            calls = 0; //reset the number of calls back to none\r\n            return ans;\r\n        };\r\n    };\r\n    \r\n    nerdamer.useParserDiv = function() {\r\n        if(__.divideFn)\r\n            _.divide = __.divideFn;\r\n        delete __.divideFn;\r\n    };\r\n\t\r\n    nerdamer.register([\r\n        {\r\n            name: 'factor',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function() { return __.Factor.factor; }\r\n        },\r\n        {\r\n            name: 'simplify',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function() { return __.Simplify.simplify; }\r\n        },\r\n        {\r\n            name: 'gcd',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function() { return __.gcd; }\r\n        },\r\n        {\r\n            name: 'lcm',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function() { return __.lcm; }\r\n        },\r\n        {\r\n            name: 'roots',\r\n            visible: true,\r\n            numargs: -1,\r\n            build: function() { return __.roots; }\r\n        },\r\n        {\r\n            name: 'divide',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function() { return __.divide; }\r\n        },\r\n        {\r\n            name: 'div',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function() { return __.div; }\r\n        },\r\n        {\r\n            name: 'partfrac',\r\n            visible: true,\r\n            numargs: [1,2],\r\n            build: function() { return __.PartFrac.partfrac; }\r\n        },\r\n        {\r\n            name: 'deg',\r\n            visible: true,\r\n            numargs: [1,2],\r\n            build: function() { return __.degree; }\r\n        },\r\n        {\r\n            name: 'coeffs',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function() { \r\n                var f = function() {\r\n                    var coeffs = __.coeffs.apply(__, arguments);\r\n                    return new core.Vector(coeffs);\r\n                };\r\n                return f;\r\n            }\r\n        },\r\n        {\r\n            name: 'line',\r\n            visible: true,\r\n            numargs: [2, 3],\r\n            build: function() { return __.line; }\r\n        },\r\n        {\r\n            name: 'sqcomp',\r\n            visible: true,\r\n            numargs: [1,2],\r\n            build: function() { \r\n                var f = function(x, v) {\r\n                    try {\r\n                        v = v || variables(x)[0];\r\n                        var sq = __.sqComplete(x.clone(), v);\r\n                        return sq.f;\r\n                    }\r\n                    catch(e) {\r\n                        return x;\r\n                    }\r\n                };\r\n                return f;\r\n            }\r\n        }\r\n    ]);\r\n    nerdamer.api();\r\n})();","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !IS_IOS) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n  if (!GLOBAL_CORE_JS_PROMISE) {\n    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // We can't detect it synchronously, so just check versions\n    if (V8_VERSION === 66) return true;\n    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;\n  }\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n"],"sourceRoot":""}