{"version":3,"sources":["webpack:///./node_modules/nerdamer/nerdamer.core.js","webpack:///(webpack)/buildin/module.js"],"names":["nerdamer","imports","version","_","Parser","bigInt","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","Math","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","roots","x","y","i","j","nthpow","pow","N","P","S","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","name","message","this","undefined","error","stack","prototype","Object","create","isReserved","value","indexOf","allSame","arr","last","l","length","equals","warn","push","SHOW_WARNINGS","console","validateName","typ","regex","test","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","zero","parts","String","toLowerCase","split","e","pop","coeff_array","slice","Array","join","dec","isPrime","n","q","floor","sqrt","isNumber","allNumeric","isFraction","isSymbol","multiplier","toDecimal","obj","Symbol","isExpression","Expression","variables","poly","vars","c","add","isNaN","group","prevgroup","previousGroup","power","symbols","firstObject","args","sort","arraySum","sum","map","separate","symbol","o","expand","insert","key","sym","clone","each","isConstant","fname","fillHoles","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","isVariableSymbol","isArray","isInt","toString","isNegative","lessThan","stringify","inBrackets","str","stringReplace","from","to","with_str","substr","customType","custom","sameSign","a","b","format","call","arguments","shift","new_str","replace","match","index","arg","range","start","end","step","keys","both","compare","sym1","sym2","comparison","scope","random","block","parse","setFunction","params_array","body","functions","mapped_function","params","arrayMax","max","apply","arrayMin","min","arrayClone","new_array","arrayAddSlices","slices","delta","retval","nroots","unwrapPARENS","toLinear","_roots","toPolarFormArray","evaluate","r","den","p","formula","t","fromArray","root","negate","multiply","imaginary","comboSort","combined","na","nb","decompose_fn","fn","wrt","as_obj","ax","stripVar","subtract","divide","nround","s","Number","MAX_VALUE","round","getU","u","v","clearU","indx","hasOwnProperty","even","evenFraction","arrayUnique","item","removeDuplicates","condition","conditionType","seen","temp","reserveNames","remove","indexOrKey","result","splice","setting","f","opt","current_setting","importFunctions","arguments2Array","getCoeffs","coeffs","term","contains","coeff","convertToVector","vector","elements","generatePrimes","upto","last_prime","allNumbers","allConstants","isPi","isE","DivisionByZero","ParseError","UndefinedError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","exceptions","Big","cos","sin","Math2","csc","sec","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","h","derivative","median","values","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","done","epsilon","d","EPSILON","idx","bigpow","Frac","isInteger","nthroot","gamma","z","g","C","bigfactorial","times","bigLog","quick","k","invert","factorial","is_int","NaN","dfactorial","GCD","QGCD","gcd","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","lcprime","prime","lt","rho","xf","cz","mod","minus","sm","boxfactor","safety","fib","integer_part","simpson","get_value","side","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","m","V1","V2","maxDepthCount","integrate","Ci","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","decimal","text","option","useGroup","asHash","wrapCondition","valueOf","frac","exec","negative","quotient","digits","passed","prefix","cycle","numer","denom","divmod","remainder","operator","om","collectSymbols","pg","pwg","isComposite","charAt","cv","parens","primeFactors","Scientific","startsWith","isScientific","fromScientific","convert","simple","Fraction","isInfinity","bin","preprocessors","names","actions","Slice","upper","lower","Collection","Token","node","node_type","column","type","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","atan2","greaterThan","symfunction","trig","isImaginary","getQuadrant","isLinear","trigh","infinity","units","action","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","radians","degrees","continued_fraction","scientific","pfactor","matrix","imatrix","determinant","size","transpose","dot","cross","vecget","vecset","vectrim","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","IF","is_in","conjugate","polarform","rectform","union","intersection","difference","intersects","is_subset","print","findFunction","fmodules","fmodule","override","which","with_what","restore","what","extend","force_call","extended","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","USE_BIG","bigConvert","operator_filter_regex","ostr","filter","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","prepare_expression","group1","group2","first","before","e_org","g1","g2","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","callPeekers","tokenize","trim","col","L","lpos","tokens","scopes","target","open_brackets","has_space","SPACE","EMPTY_STRING","COMMA","MINUS","MULT","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","adjust_column_position","last_token_is_numeric","is_multiplication","bracket","pair","prev","nxt","is_operator","toRPN","output","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","next_is_comma","getter","il","element","subbed","isUnit","toHTML","indent","tab","repeat","html","tree","location","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","ms","distributeMultiplier","V","M","getDenom","getNum","_symbol","cf","symbol1","symbol2","rows","l2","cols","is_negative","img","setPower","qa","tw","nn","rem","toUnitMultiplier","isOne","sigfigs","asbig","theta","original","symMinMax","numVal","SYMBOLIC_MIN_MAX","getval","aval","bval","base","log_sym","log_base","img_part","sIsConstant","toExponential","quadrant","isFinite","clean","new_num","new_den","pn","hascomposites","sp","sub","composites","non_composites","isDenom","prod","finalResult","identity","tolerance","col_index","vec1","vec2","mat","set1","set2","testSQRT","absEquals","testPow","fct","toTeX","expression_or_obj","TeX","cdot","nobj","LaTeX","braces","expr","lb","ub","argSplit","latex","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","ONN","gt","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","isEven","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","abs_b","sgn","aa","_a","_b","a1","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","txt","first_arg","buildFunction","Build","build","isPolynomial","isPoly","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","variable","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","copy","rounded","next_two","ed","is_neg","isFrac","nstr","m_dc","simplify","neg","narr","unshift","qcompare","isnegative","lcm","div","unwrapSQRT","all","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","concat","isCombination","opts","qc","quickConversion","fullConversion","parseInt","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","lim","LN","dim","liminf","inverted","t_varray","input","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","bracketTypes","square","brace","angle","filterTokens","filtered","raw_tokens","parse_next","get","items","lw","rl","el","arrayPrefill","val","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","isSquare","toRightTriangular","isSingular","augment","rr","np","els","divisor","new_element","ki","kp","inverse_elements","nel","fel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","_intersection","dependencies","_rename","reformat","deps","getProperName","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","f_array","alias","Function","LOG_FNS","Utils","groups","PARSER","libExports","fndec","multi_options","convertToLaTeX","convertFromLaTeX","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","ref_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","disallowed","api","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractAny","subtractSmall","multiplyLong","a_i","b_j","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","useKaratsuba","l1","multiplySmallAndArray","a_j","divMod1","quotientDigit","divisorMostSignificantDigit","divModSmall","divMod2","guess","xlen","highx","highy","check","part","reverse","divModAny","self","qSign","mSign","isBasicPrime","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","small","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","low","high","restricted","digit","absBase","charCodeAt","charCode","parseBaseFromArray","toBase","out","toBaseString","parseStringValue","decimalPlace","isValid","parseNumberValue","zeros","toJSON","minusOne","isInstance","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","O","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","W","J","cubeRoot","cbrt","Z","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","U","naturalExponential","H","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","toDecimalPlaces","toDP","R","toFraction","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","T","LN10","toPrecision","toSignificantDigits","toSD","truncated","G","I","search","$","K","X","Y","en","rn","sn","on","un","cn","defaults","getRandomValues","randomBytes","hn","an","dn","gn","wn","Nn","En","Mn","yn","qn","Uint32Array","On","Fn","An","Dn","Zn","Pn","Rn","Ln","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable"],"mappings":"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","file":"chunk-13f526c0.7ae217199a64cef59600.worker.js","sourcesContent":["/*\n * Author : Martin Donk\n * Website : http://www.nerdamer.com\n * Email : martin.r.donk@gmail.com\n * Source : https://github.com/jiggzson/nerdamer\n */\n\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\n//externals ====================================================================\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\n\nvar nerdamer = (function (imports) {\n    \"use strict\";\n\n//version ====================================================================== \n    var version = '1.1.2';\n\n//inits ========================================================================\n    var _ = new Parser(); //nerdamer's parser\n\n    //import bigInt\n    var bigInt = imports.bigInt;\n    var bigDec = imports.bigDec;\n    //set the precision to js precision\n    bigDec.set({\n        precision: 250\n    });\n\n    var Groups = {};\n\n    //container of pregenerated primes\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\n\n//Settings ===================================================================== \n    var CUSTOM_OPERATORS = {};\n\n    var Settings = {\n        //the max number up to which to cache primes. Making this too high causes performance issues\n        init_primes: 1000,\n\n        exclude: [],\n        //If you don't care about division by zero for example then this can be set to true. \n        //Has some nasty side effects so choose carefully.\n        suppress_errors: false,\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\n        //cos(9) for convenience but parse to number will always try to return a number if set to true. \n        PARSE2NUMBER: false,\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\n        SAFE: false,\n        //the symbol to use for imaginary symbols\n        IMAGINARY: 'i',\n        //the modules used to link numeric function holders\n        FUNCTION_MODULES: [Math],\n        //Allow certain characters\n        ALLOW_CHARS: ['π'],\n        //Allow nerdamer to convert multi-character variables\n        USE_MULTICHARACTER_VARS: true,\n        //Allow changing of power operator\n        POWER_OPERATOR: '^',\n        //The variable validation regex\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\n        //Aliases\n        ALIASES: {\n            'π': 'pi',\n            '∞': 'Infinity'\n        },\n        POSITIVE_MULTIPLIERS: false,\n        //Cached items\n        CACHE: {},\n        //Print out warnings or not\n        SILENCE_WARNINGS: false,\n        //Precision\n        PRECISION: 80,\n        //function mappings\n        VECTOR: 'vector',\n        PARENTHESIS: 'parens',\n        SQRT: 'sqrt',\n        ABS: 'abs',\n        FACTORIAL: 'factorial',\n        DOUBLEFACTORIAL: 'dfactorial',\n        //reference pi and e\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\n        PI: Math.PI,\n        E: Math.E,\n        LOG: 'log', \n        LOG10: 'log10',\n        LOG10_LATEX: 'log_{10}',\n        MAX_EXP: 200000\n    };\n\n    (function () {\n        Settings.CACHE.roots = {};\n        var x = 40,\n                y = 40;\n        for (var i = 2; i <= x; i++) {\n            for (var j = 2; j <= y; j++) {\n                var nthpow = bigInt(i).pow(j);\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\n            }\n        }\n    })();\n    \n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\n    //The groups that help with organizing during parsing. Note that for FN is still a function even \n    //when it's raised to a symbol, which typically results in an EX\n    var N = Groups.N = 1, // A number\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5). \n            S = Groups.S = 3, // A single variable e.g. x. \n            EX = Groups.EX = 4, // An exponential\n            FN = Groups.FN = 5, // A function\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\n\n    var CONST_HASH = Settings.CONST_HASH = '#';\n\n    var PARENTHESIS = Settings.PARENTHESIS;\n\n    var SQRT = Settings.SQRT;\n\n    var ABS = Settings.ABS;\n\n    var FACTORIAL = Settings.FACTORIAL;\n\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\n\n    //the storage container \"memory\" for parsed expressions\n    var EXPRESSIONS = [];\n\n    //variables\n    var VARS = {};\n\n    //the container used to store all the reserved functions\n    var RESERVED = [];\n\n    var WARNINGS = [];\n\n    /**\n     * Use this when errors are suppressible\n     * @param {String} msg\n     * @param {object} ErrorObj \n     */\n    var err = function (msg, ErrorObj) {\n        if (!Settings.suppress_errors) {\n            if (ErrorObj)\n                throw new ErrorObj(msg);\n            else\n                throw new Error(msg);\n        }\n    };\n\n//Utils ======================================================================== \n    var customError = function (name) {\n        var E = function (message) {\n            this.name = name;\n            this.message = message !== undefined ? message : '';\n            var error = new Error(this.message);\n            error.name = this.name;\n            this.stack = error.stack;\n        }; //create an empty error\n        E.prototype = Object.create(Error.prototype);\n        return E;\n    };\n\n    /**\n     * Checks to see if value is one of nerdamer's reserved names\n     * @param {String} value\n     * @return boolean\n     */\n    var isReserved = function (value) {\n        return RESERVED.indexOf(value) !== -1;\n    };\n\n    /**\n     * Checks to see that all symbols in array are the same\n     * @param {Symbol[]} arr\n     * @returns {bool}\n     */\n    var allSame = function (arr) {\n        var last = arr[0];\n        for (var i = 1, l = arr.length; i < l; i++)\n            if (!arr[i].equals(last))\n                return false;\n        return true;\n    };\n\n    /**\n     * Used to pass warnings or low severity errors about the library\n     * @param msg\n     */\n    var warn = function (msg) {\n        WARNINGS.push(msg);\n        if (Settings.SHOW_WARNINGS && console && console.warn) {\n            console.warn(msg);\n        }\n    };\n\n    /**\n     * Enforces rule: \"must start with a letter or underscore and \n     * can have any number of underscores, letters, and numbers thereafter.\"\n     * @param name The name of the symbol being checked\n     * @param {String} typ - The type of symbols that's being validated\n     * @throws {Exception}  - Throws an exception on fail\n     */\n    var validateName = function (name, typ) {\n        typ = typ || 'variable';\n        if (Settings.ALLOW_CHARS.indexOf(name) !== -1)\n            return;\n        var regex = Settings.VALIDATION_REGEX;\n        if (!(regex.test(name))) {\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\n        }\n    };\n\n    /**\n     * Convert number from scientific format to decimal format\n     * @param {Number} num\n     */\n    var scientificToDecimal = function (num) {\n        var nsign = Math.sign(num);\n        //remove the sign\n        num = Math.abs(num);\n        //if the number is in scientific notation remove it\n        if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n            var zero = '0',\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\n                    e = parts.pop(), //store the exponential part\n                    l = Math.abs(e), //get the number of zeros\n                    sign = e / l,\n                    coeff_array = parts[0].split('.');\n            if (sign === -1) {\n                l = l - coeff_array[0].length;\n                if (l < 0) {\n                  num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n                } \n                else {\n                  num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n                }\n            } \n            else {\n                var dec = coeff_array[1];\n                if (dec)\n                    l = l - dec.length;\n                if (l < 0) {\n                  num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n                } else {\n                  num = coeff_array.join('') + new Array(l + 1).join(zero);\n                }\n            }\n        }\n\n        return nsign < 0 ? '-'+num : num;\n    };\n    /**\n     * Checks if number is a prime number\n     * @param {Number} n - the number to be checked\n     */\n    var isPrime = function (n) {\n        var q = Math.floor(Math.sqrt(n));\n        for (var i = 2; i <= q; i++) {\n            if (n % i === 0)\n                return false;\n        }\n        return true;\n    };\n    \n    /**\n     * Checks if n is a number\n     * @param {any} n \n     */\n    var isNumber = function(n) {\n        return /^\\d+\\.?\\d*$/.test(n);\n    };\n    \n    /**\n     * Checks to see if an array contains only numeric values\n     * @param {Array} arr \n     */\n    var allNumeric = function(arr) {\n        for(var i=0; i<arr.length; i++)\n            if(!isNumber(arr[i]))\n                return false;\n        return true;\n    };\n    /**\n     * Checks to see if a number or Symbol is a fraction\n     * @param {Number|Symbol} num\n     * @returns {boolean}\n     */\n    var isFraction = function (num) {\n        if (isSymbol(num))\n            return isFraction(num.multiplier.toDecimal());\n        return (num % 1 !== 0);\n    };\n\n    /**\n     * Checks to see if the object provided is a Symbol\n     * @param {Object} obj\n     */\n    var isSymbol = function (obj) {\n        return (obj instanceof Symbol);\n    };\n\n    /**\n     * Checks to see if the object provided is an Expression\n     * @param {Object} obj\n     */\n    var isExpression = function (obj) {\n        return (obj instanceof Expression);\n    };\n\n    /**\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\n     * names are then returned in alphabetical order.\n     * @param {Symbol} obj\n     * @param {Boolean} poly \n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated \n     * automatically. In the future this will be a Collector object.\n     * @returns {String[]} - An array containing variable names\n     */\n    var variables = function (obj, poly, vars) {\n        vars = vars || {\n            c: [],\n            add: function (value) {\n                if (this.c.indexOf(value) === -1 && isNaN(value))\n                    this.c.push(value);\n            }\n        };\n\n        if (isSymbol(obj)) {\n            var group = obj.group,\n                    prevgroup = obj.previousGroup;\n            if (group === EX)\n                variables(obj.power, poly, vars);\n\n            if (group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\n                for (var x in obj.symbols) {\n                    variables(obj.symbols[x], poly, vars);\n                }\n            }\n            else if (group === S || prevgroup === S) {\n                //very crude needs fixing. TODO\n                if (!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\n                    vars.add(obj.value);\n            }\n            else if (group === PL || prevgroup === PL) {\n                variables(firstObject(obj.symbols), poly, vars);\n            }\n            else if (group === EX) {\n                if (!isNaN(obj.value))\n                    vars.add(obj.value);\n                variables(obj.power, poly, vars);\n            }\n            else if (group === FN && !poly) {\n                for (var i = 0; i < obj.args.length; i++) {\n                    variables(obj.args[i], poly, vars);\n                }\n            }\n        }\n\n        return vars.c.sort();\n    };\n    \n    /**\n     * Returns the sum of an array\n     * @param {Array} arr\n     * @returns {Symbol}\n     */\n    var arraySum = function(arr) {\n        var sum = new Symbol(0);\n        arr.map(function(x) {\n            sum = _.add(sum, x);\n        });\n        return sum;\n    };\n\n    /**\n     * Separates out the variables into terms of variabls. \n     * e.g. x+y+x*y+sqrt(2)+pi returns \n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\n     * @param {type} symbol\n     * @param {type} o\n     * @returns {undefined}\n     * @throws {Error} for expontentials\n     */\n    var separate = function (symbol, o) {\n        symbol = _.expand(symbol);\n        o = o || {};\n        var insert = function (key, sym) {\n            if (!o[key])\n                o[key] = new Symbol(0);\n            o[key] = _.add(o[key], sym.clone());\n        };\n        symbol.each(function (x) {\n            if (x.isConstant('all'))\n                insert('constants', x);\n            else if (x.group === S) {\n                insert(x.value, x);\n            }\n            else if (x.group === FN && (x.fname === ABS || x.fname === '')) {\n                separate(x.args[0]);\n            }\n            else if (x.group === EX || x.group === FN) {\n                throw new Error('Unable to separate. Term cannot be a function!');\n            }\n            else {\n                insert(variables(x).join(' '), x);\n            }\n        });\n\n        return o;\n    };\n\n    /**\n     * Fills holes in an array with zero symbol or generates one with n zeroes\n     * @param {Array} arr \n     * @param {Number} n \n     */\n    var fillHoles = function (arr, n) {\n        n = n || arr.length;\n        for (var i = 0; i < n; i++) {\n            var sym = arr[i];\n            if (!sym)\n                arr[i] = new Symbol(0);\n        }\n        return arr;\n    };\n\n    /**\n     * \n     * Checks to see if the object provided is a Vector\n     * @param {Object} obj\n     */\n    var isVector = function (obj) {\n        return (obj instanceof Vector);\n    };\n\n    /**\n     * Checks to see if the object provided is a Matrix\n     * @param {Object} obj\n     */\n    var isMatrix = function (obj) {\n        return (obj instanceof Matrix);\n    };\n    \n    var isSet = function(obj) {\n        return (obj instanceof Set);\n    };\n    \n    /**\n     * Checks to see if a symbol is in group N\n     * @param {Symbol} symbol\n     */\n    var isNumericSymbol = function (symbol) {\n        return symbol.group === N || symbol.group === P;\n    };\n\n    /**\n     * Checks to see if a symbol is a variable with no multiplier nor power\n     * @param {Symbol} symbol\n     */\n    var isVariableSymbol = function (symbol) {\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\n    };\n\n    /**\n     * Checks to see if the object provided is an Array\n     * @param {Object} arr\n     */\n    var isArray = function (arr) {\n        return Array.isArray(arr);\n    };\n\n    /**\n     * Checks to see if a number is an integer\n     * @param {Number} num\n     */\n    var isInt = function (num) {\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\n    };\n\n    /**\n     * @param {Number|Symbol} obj\n     * @returns {boolean}\n     */\n    var isNegative = function (obj) {\n        if (isSymbol(obj)) {\n            obj = obj.multiplier;\n        }\n        return obj.lessThan(0);\n    };\n    /**\n     * Safely stringify object\n     * @param o\n     */\n    var stringify = function(o) {\n        if(!o)\n            return o;\n        return String(o);\n    };\n    \n    /**\n     * @param {String} str\n     * @returns {String} - returns a formatted string surrounded by brackets\n     */\n    var inBrackets = function (str) {\n        return '(' + str + ')';\n    };\n\n    /**\n     * A helper function to replace parts of string\n     * @param {String} str - The original string\n     * @param {Integer} from - The starting index\n     * @param {Integer} to - The ending index\n     * @param {String} with_str - The replacement string\n     * @returns {String} - A formatted string\n     */\n    var stringReplace = function (str, from, to, with_str) {\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\n    };\n\n    /**\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\n     * @param {Object} obj\n     * @returns {boolean}\n     */\n    var customType = function (obj) {\n        return obj !== undefined && obj.custom;\n    };\n\n    /**\n     * Checks to see if numbers are both negative or are both positive\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {boolean}\n     */\n    var sameSign = function (a, b) {\n        return (a < 0) === (b < 0);\n    };\n\n    /**\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\n     * @example format('{0} nice, {0} sweet', 'something')\n     * //returns 'something nice, something sweet'\n     */\n    var format = function () {\n        var args = [].slice.call(arguments),\n                str = args.shift();\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\n            var arg = args[index];\n            return typeof arg === 'function' ? arg() : arg;\n        });\n\n        return new_str;\n    };\n    \n    /**\n     * Generates an array with values within a range. Multiplies by a step if provided\n     * @param {Number} start\n     * @param {Number} end\n     * @param {Number} step\n     */\n    var range = function(start, end, step) {\n        var arr = [];\n        step = step || 1;\n        for(var i=start; i<=end; i++) \n            arr.push(i*step);\n        return arr;\n    };\n    \n    /**\n     * Returns an array of all the keys in an array\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    var keys = Object.keys;\n\n    /**\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects \n     * so only use if you need any first random or if there's only one item in the object\n     * @param {Object} obj\n     * @param {String} key Return this key as first object\n     * @param {Boolean} both\n     * @returns {*}\n     */\n    var firstObject = function (obj, key, both) {\n        for (var x in obj)\n            break;\n        if (key)\n            return x;\n        if(both)\n            return {\n                key: x,\n                obj: obj[x]\n            };\n        return obj[x];\n    };\n\n    /**\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\n     * @param {Symbol} sym1\n     * @param {Symbol} sym2\n     * @param {String[]} vars - an optional array of variables to use\n     * @returns {bool}\n     */\n    var compare = function (sym1, sym2, vars) {\n        var n = 5; //a random number between 1 and 5 is good enough\n        var scope = {}; // scope object with random numbers generated using vars\n        var comparison;\n        for (var i = 0; i < vars.length; i++)\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\n        block('PARSE2NUMBER', function () {\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\n        });\n        return comparison;\n    };\n\n    /**\n     * Is used to set a user defined function using the function assign operator\n     * @param {String} name\n     * @param {String[]} params_array\n     * @param {String} body\n     * @returns {Boolean}\n     */\n    var setFunction = function (name, params_array, body) {\n        validateName(name);\n        if (!isReserved(name)) {\n            params_array = params_array || variables(_.parse(body));\n            _.functions[name] = [_.mapped_function, params_array.length, {\n                    name: name,\n                    params: params_array,\n                    body: body\n                }];\n            return body;\n        }\n        return null;\n    };\n\n    /**\n     * Returns the minimum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMax = function (arr) {\n        return Math.max.apply(undefined, arr);\n    };\n\n    /**\n     * Returns the maximum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMin = function (arr) {\n        return Math.min.apply(undefined, arr);\n    };\n\n    /**\n     * Clones array with clonable items\n     * @param {Array} arr\n     * @returns {Array}\n     */\n    var arrayClone = function (arr) {\n        var new_array = [], l = arr.length;\n        for (var i = 0; i < l; i++)\n            new_array[i] = arr[i].clone();\n        return new_array;\n    };\n\n    /**\n     * Fills numbers between array values\n     * @param {Numbers[]} arr\n     * @param {Integer} slices\n     */\n    var arrayAddSlices = function(arr, slices) {\n        slices = slices || 20;\n        var retval = [];\n        var c, delta, e;\n        retval.push(arr[0]); //push the beginning\n        for(var i=0; i<arr.length-1; i++) {\n            c = arr[i];\n            delta = arr[i+1]-c; //get the difference\n            e = delta/slices; //chop it up in the desired number of slices\n            for(var j=0; j<slices; j++) {\n                c += e; //add the mesh to the last slice\n                retval.push(c);\n            }\n        }\n\n        return retval;\n    };\n\n     /**\n     * Gets nth roots of a number\n     * @param {Symbol} symbol\n     * @returns {Vector}\n     */\n    var nroots = function(symbol) {\n        var a, b;\n\n        if(symbol.group === FN && symbol.fname === '') {\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n            b = _.parse(symbol.power);\n        }\n        else if(symbol.group === P) {\n            a = _.parse(symbol.value);\n            b = _.parse(symbol.power);\n        }\n\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\n            var _roots = [];\n            \n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\n            var r = parts[0];\n            \n            //var r = _.parse(a).abs().toString();\n\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n            var x = _.arg(a);\n            var n = b.multiplier.den.toString();\n            var p = b.multiplier.num.toString();\n\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\n\n            for(var i=0; i<n; i++) {\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n            }\n            return Vector.fromArray(_roots);\n        }\n        else if(symbol.isConstant(true, true)) {\n            var sign = symbol.sign();\n            var x = evaluate(symbol.abs());\n            var root = _.sqrt(x);\n\n            var _roots = [root.clone(), root.negate()];\n\n            if(sign < 0)\n                _roots = _roots.map(function(x) {\n                    return _.multiply(x, Symbol.imaginary());\n                });\n                \n        }\n        else {\n            _roots = [_.parse(symbol)];\n        }\n\n        return Vector.fromArray(_roots);\n    };\n\n    /**\n     * Sorts and array given 2 parameters\n     * @param {String} a\n     * @param {String} b\n     */\n    var comboSort = function (a, b) {\n        var l = a.length,\n                combined = []; //the linker\n        for (var i = 0; i < a.length; i++) {\n            combined.push([a[i], b[i]]); //create the map\n        }\n\n        combined.sort(function (x, y) {\n            return x[0] - y[0];\n        });\n\n        var na = [], nb = [];\n\n        for (i = 0; i < l; i++) {\n            na.push(combined[i][0]);\n            nb.push(combined[i][1]);\n        }\n\n        return [na, nb];\n    };\n    /**\n     * TODO: Pick a more descriptive name and better description\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\n     * Example a*x^2+b wrt x\n     * @param {Symbol} fn\n     * @param {String} wrt\n     * @param {bool} as_obj\n     */\n    var decompose_fn = function (fn, wrt, as_obj) {\n        wrt = String(wrt); //convert to string\n        var ax, a, x, b;\n        if (fn.group === CP) {\n            var t = _.expand(fn.clone()).stripVar(wrt);\n            ax = _.subtract(fn.clone(), t.clone());\n            b = t;\n        }\n        else\n            ax = fn.clone();\n        a = ax.stripVar(wrt);\n        x = _.divide(ax.clone(), a.clone());\n        b = b || new Symbol(0);\n        if (as_obj)\n            return {\n                a: a,\n                x: x,\n                ax: ax,\n                b: b\n            };\n        return [a, x, ax, b];\n    };\n    /**\n     * Rounds a number up to x decimal places\n     * @param {Number} x\n     * @param {Number} s\n     */\n    var nround = function (x, s) {\n        if(isInt(x)) {\n            if(x >= Number.MAX_VALUE)\n                return x.toString();\n            return Number(x);\n        }\n            \n        s = typeof s === 'undefined' ? 14 : s;\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\n    };\n\n    /**\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\n     * instance a is used in the symbol then it keeps going down the line until\n     * one is found that's not in use. If all letters are taken then it\n     * starts appending numbers. \n     * IMPORTANT! It assumes that the substitution will be undone\n     * beore the user gets to interact with the object again.\n     * @param {Symbol} symbol\n     */\n    var getU = function (symbol) {\n        //start with u\n        var u = 'u', //start with u\n                v = u, //init with u\n                c = 0, //postfix number\n                vars = variables(symbol);\n        //make sure this variable isn't reserved and isn't in the variable list\n        while (!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\n            v = u + c++;\n        //get an empty slot. It seems easier to just push but the\n        //problem is that we may have some which are created by clearU\n        for (var i = 0, l = RESERVED.length; i <= l; i++)\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\n            if (!RESERVED[i]) {\n                RESERVED[i] = v; //reserve the variable\n                break;\n            }\n        return v;\n    };\n\n    /**\n     * Clears the u variable so it's no longer reserved\n     * @param {String} u\n     */\n    var clearU = function (u) {\n        var indx = RESERVED.indexOf(u);\n        if (indx !== -1)\n            RESERVED[indx] = undefined;\n    };\n\n    /**\n     * Loops through each item in object and calls function with item as param\n     * @param {Object|Array} obj\n     * @param {Function} fn \n     */\n    var each = function (obj, fn) {\n        if (isArray(obj)) {\n            var l = obj.length;\n            for (var i = 0; i < l; i++)\n                fn.call(obj, i);\n        }\n        else {\n            for (var x in obj)\n                if (obj.hasOwnProperty(x))\n                    fn.call(obj, x);\n        }\n    };\n\n    /**\n     * Checks to see if a number is an even number\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var even = function (num) {\n        return num % 2 === 0;\n    };\n\n    /**\n     * Checks to see if a fraction is divisible by 2\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var evenFraction = function (num) {\n        return 1 / (num % 1) % 2 === 0;\n    };\n\n    /**\n     * Strips duplicates out of an array\n     * @param {Array} arr\n     */\n    var arrayUnique = function (arr) {\n        var l = arr.length, a = [];\n        for (var i = 0; i < l; i++) {\n            var item = arr[i];\n            if (a.indexOf(item) === -1)\n                a.push(item);\n        }\n        return a;\n    };\n    \n    /**\n     * Removes duplicates from an array. Returns a new array\n     * @param {Array} arr\n     * @param {Function} condition\n     */\n    var removeDuplicates = function(arr, condition) {\n        var conditionType = typeof condition;\n\n        if(conditionType !== 'function' || conditionType === 'undefined') {\n            condition = function(a, b) {\n                return a === b;\n            };\n        }\n\n        var seen = [];\n\n        while(arr.length) {\n            var a = arr[0];\n            //only one element left so we're done\n            if(arr.length === 1) {\n                seen.push(a);\n                break;\n            }\n            var temp = [];\n            seen.push(a); //we already scanned these\n            for(var i=1; i<arr.length; i++) {\n                var b = arr[i];\n                //if the number is outside the specified tolerance\n                if(!condition(a, b))\n                    temp.push(b);\n            }\n            //start over with the remainder\n            arr = temp;\n        }\n\n        return seen;\n    };\n    \n    /**\n     * Reserves the names in an object so they cannot be used as function names\n     * @param {Object} obj\n     */\n    var reserveNames = function (obj) {\n        var add = function (item) {\n            if (RESERVED.indexOf(item) === -1)\n                RESERVED.push(item);\n        };\n\n        if (typeof obj === 'string')\n            add(obj);\n        else {\n            each(obj, function (x) {\n                add(x);\n            });\n        }\n    };\n\n    /**\n     * Removes an item from either an array or an object. If the object is an array, the index must be \n     * specified after the array. If it's an object then the key must be specified\n     * @param {Object|Array} obj\n     * @param {Integer} indexOrKey\n     */\n    var remove = function (obj, indexOrKey) {\n        var result;\n        if (isArray(obj)) {\n            result = obj.splice(indexOrKey, 1)[0];\n        }\n        else {\n            result = obj[indexOrKey];\n            delete obj[indexOrKey];\n        }\n        return result;\n    };\n\n    /**\n     * Creates a temporary block in which one of the global settings is temporarily modified while\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\n     * answer for a period you would set PARSE2NUMBER to true in the block.\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\n     * @param {String} setting - The setting being accessed\n     * @param {Function} f \n     * @param {boolean} opt - The value of the setting in the block\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\n     */\n    var block = function (setting, f, opt, obj) {\n        var current_setting = Settings[setting];\n        Settings[setting] = opt === undefined ? true : !!opt;\n        var retval = f.call(obj);\n        Settings[setting] = current_setting;\n        return retval;\n    };\n\n    /**\n     * provide a mechanism for accessing functions directly. Not yet complete!!! \n     * Some functions will return undefined. This can maybe just remove the \n     * function object at some point when all functions are eventually \n     * housed in the global function object. Returns ALL parser available \n     * functions. Parser.functions may not contain all functions\n     */\n    var importFunctions = function () {\n        var o = {};\n        for (var x in _.functions)\n            o[x] = _.functions[x][0];\n        return o;\n    };\n\n    /**\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\n     * @param {Array|object} obj\n     */\n    var arguments2Array = function (obj) {\n        return [].slice.call(obj);\n    };\n\n    /**\n     * Returns the coefficients of a symbol\n     * @param {Symbol} symbol\n     * @param {Symbol} wrt\n     */\n    var getCoeffs = function (symbol, wrt) {\n        var coeffs = [];\n        //we loop through the symbols and stick them in their respective \n        //containers e.g. y*x^2 goes to index 2\n        symbol.each(function (term) {\n            if (term.contains(wrt)) {\n                //we want only the coefficient which in this case will be everything but the variable\n                //e.g. a*b*x -> a*b if the variable to solve for is x\n                var coeff = term.stripVar(wrt),\n                        x = _.divide(term.clone(), coeff.clone()),\n                        p = x.power.toDecimal();\n            }\n            else {\n                coeff = term;\n                p = 0;\n            }\n            var e = coeffs[p];\n            //if it exists just add it to it\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\n\n        }, true);\n\n        for (var i = 0; i < coeffs.length; i++)\n            if (!coeffs[i])\n                coeffs[i] = new Symbol(0);\n        //fill the holes\n        return coeffs;\n    };\n\n    /**\n     * As the name states. It forces evaluation of the expression \n     * @param {Symbol} symbol\n     * @param {Symbol} o\n     */\n    var evaluate = function (symbol, o) {\n        return block('PARSE2NUMBER', function () {\n            return _.parse(symbol, o);\n        }, true);\n    };\n\n    /**\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\n     * @param {String[]|String|Symbol|Number|Number[]} x \n     */\n    var convertToVector = function (x) {\n        if (isArray(x)) {\n            var vector = new Vector([]);\n            for (var i = 0; i < x.length; i++)\n                vector.elements.push(convertToVector(x[i]));\n            return vector;\n        }\n        //Ensure that a nerdamer ready object is returned\n        if (!isSymbol(x))\n            return _.parse(x);\n        return x;\n    };\n\n    /**\n     * Generates prime numbers up to a specified number\n     * @param {Number} upto \n     */\n    var generatePrimes = function (upto) {\n        //get the last prime in the array\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\n        //no need to check if we've already encountered the number. Just check the cache.\n        for (var i = last_prime; i < upto; i++) {\n            if (isPrime(i))\n                PRIMES.push(i);\n        }\n    };\n    /**\n     * Checks to see if all arguments are numbers\n     * @param {object} args\n     */\n    var allNumbers = function (args) {\n        for (var i = 0; i < args.length; i++)\n            if (args[i].group !== N)\n                return false;\n        return true;\n    };\n    /*\n     * Checks if all arguments aren't just all number but if they\n     * are constants as well e.g. pi, e.\n     * @param {object} args \n     */\n    var allConstants = function (args) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i].isPi() || args[i].isE())\n                continue;\n            if (!args[i].isConstant(true))\n                return false;\n        }\n        return true;\n    };\n\n\n//Exceptions ===================================================================\n    //Is thrown for division by zero\n    var DivisionByZero = customError('DivisionByZero');\n    //Is throw if an error occured during parsing\n    var ParseError = customError('ParseError');\n    //Is thrown if the expression results in undefined\n    var UndefinedError = customError('UndefinedError');\n    //Is throw if a function exceeds x amount of iterations\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\n    //Is thrown if the parser receives an incorrect type\n    var NerdamerTypeError = customError('NerdamerTypeError');\n    //Is thrown if bracket parity is not correct\n    var ParityError = customError('ParityError');\n    //Is thrown if an unexpectd or incorrect operator is encountered\n    var OperatorError = customError('OperatorError');\n    //Is thrown if an index is out of range.\n    var OutOfRangeError = customError('OutOfRangeError');\n    //Is thrown if dimensions are incorrect. Mostly for matrices\n    var DimensionError = customError('DimensionError');\n    //Is thrown if variable name violates naming rule\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\n    //Is thrown if the limits of the library are exceeded for a function\n    //This can be that the function become unstable passed a value\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\n    //Is throw if the value is an incorrect LH or RH value\n    var NerdamerValueError = customError('NerdamerValueError');\n    //Is throw if the value is an incorrect LH or RH value\n    var SolveError = customError('SolveError');\n\n    var exceptions = {\n        DivisionByZero: DivisionByZero,\n        ParseError: ParseError,\n        UndefinedError: UndefinedError,\n        MaximumIterationsReached: MaximumIterationsReached,\n        NerdamerTypeError: NerdamerTypeError,\n        ParityError: ParityError,\n        OperatorError: OperatorError,\n        OutOfRangeError: OutOfRangeError,\n        DimensionError: DimensionError,\n        InvalidVariableNameError: InvalidVariableNameError,\n        ValueLimitExceededError: ValueLimitExceededError,\n        NerdamerValueError: NerdamerValueError,\n        SolveError: SolveError\n    };\n//Big ========================================================================== \n    var Big = {\n        cos: function (x) {\n            return new Symbol(bigDec.cos(x.multiplier.toDecimal()));\n        },\n        sin: function (x) {\n            return new Symbol(bigDec.sin(x.multiplier.toDecimal()));\n        }\n    };\n//Math2 ======================================================================== \n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the \n    //functions within are pretty self-explanatory.\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\n    var Math2 = {\n        csc: function (x) {\n            return 1 / Math.sin(x);\n        },\n        sec: function (x) {\n            return 1 / Math.cos(x);\n        },\n        cot: function (x) {\n            return 1 / Math.tan(x);\n        },\n\t\tacsc: function(x) { return Math.asin(1/x); },\n        asec: function(x) { \n            return Math.acos(1/x); \n        },\n        acot: function(x) { \n            return (Math.PI / 2) - Math.atan(x);\n        },\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n        erf: function (x) {\n            var t = 1 / (1 + 0.5 * Math.abs(x));\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\n                    t * (1.00002368 +\n                            t * (0.37409196 +\n                                    t * (0.09678418 +\n                                            t * (-0.18628806 +\n                                                    t * (0.27886807 +\n                                                            t * (-1.13520398 +\n                                                                    t * (1.48851587 +\n                                                                            t * (-0.82215223 +\n                                                                                    t * (0.17087277)))))))))\n                    );\n            return x >= 0 ? result : -result;\n        },\n        diff: function(f) {\n            var h = 0.001;\n            \n            var derivative = function(x) { \n                return (f(x + h) - f(x - h)) / (2 * h); \n            };\n            \n            return derivative;\n        },\n        median: function (...values) {\n            values.sort(function (a, b) {\n                return a - b;\n            });\n\n            var half = Math.floor(values.length / 2);\n\n            if (values.length % 2)\n                return values[half];\n\n            return (values[half - 1] + values[half]) / 2.0;\n        },\n        /*\n         * Reverses continued fraction calculation\n         * @param {obj} contd\n         * @returns {Number}\n         */\n        fromContinued: function (contd) {\n            var arr = contd.fractions.slice();\n            var e = 1 / arr.pop();\n            for (var i = 0, l = arr.length; i < l; i++) {\n                e = 1 / (arr.pop() + e);\n            }\n            return contd.sign * (contd.whole + e);\n        },\n        /*\n         * Calculates continued fractions\n         * @param {Number} n\n         * @param {Number} x The number of places\n         * @returns {Number}\n         */\n        continuedFraction: function (n, x) {\n            x = x || 20;\n            var sign = Math.sign(n); /*store the sign*/\n            var absn = Math.abs(n); /*get the absolute value of the number*/\n            var whole = Math.floor(absn); /*get the whole*/\n            var ni = absn - whole; /*subtract the whole*/\n            var c = 0; /*the counter to keep track of iterations*/\n            var done = false;\n            var epsilon = 1e-14;\n            var max = 1e7;\n            var e, w;\n            var retval = {\n                whole: whole,\n                sign: sign,\n                fractions: []\n            };\n            /*start calculating*/\n            while (!done && ni !== 0) {\n                /*invert and get the whole*/\n                e = 1 / ni;\n                w = Math.floor(e);\n                if (w > max) {\n                    /*this signals that we may have already gone too far*/\n                    var d = Math2.fromContinued(retval) - n;\n                    if (d <= Number.EPSILON)\n                        break;\n                }\n                /*add to result*/\n                retval.fractions.push(w);\n                /*move the ni to the decimal*/\n                ni = e - w;\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n                if (ni <= epsilon || c >= x - 1)\n                    done = true;\n                c++;\n            }\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n            var idx = retval.fractions.length - 1;\n            if (retval.fractions[idx] === 1) {\n                retval.fractions.pop();\n                /*increase the last one by one*/\n                retval.fractions[--idx]++;\n            }\n            return retval;\n        },\n        bigpow: function (n, p) {\n            if (!(n instanceof Frac))\n                n = Frac.create(n);\n            if (!(p instanceof Frac))\n                p = Frac.create(p);\n            var retval = new Frac(0);\n            if (p.isInteger()) {\n                retval.num = n.num.pow(p.toString());\n                retval.den = n.den.pow(p.toString());\n            }\n            else {\n                var num = Frac.create(Math.pow(n.num, p.num));\n                var den = Frac.create(Math.pow(n.den, p.num));\n\n                retval.num = Math2.nthroot(num, p.den.toString());\n                retval.den = Math2.nthroot(den, p.den);\n            }\n            return retval;\n        },\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n        gamma: function (z) {\n            var g = 7;\n            var C = [\n                0.99999999999980993,\n                676.5203681218851,\n                -1259.1392167224028,\n                771.32342877765313,\n                -176.61502916214059,\n                12.507343278686905,\n                -0.13857109526572012,\n                9.9843695780195716e-6,\n                1.5056327351493116e-7]\n                    ;\n\n            if (z < 0.5)\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\n            else {\n                z -= 1;\n\n                var x = C[0];\n                for (var i = 1; i < g + 2; i++)\n                    x += C[i] / (z + i);\n\n                var t = z + g + 0.5;\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\n            }\n        },\n        //factorial\n        bigfactorial: function (x) {\n            var retval = new bigInt(1);\n            for (var i = 2; i <= x; i++)\n                retval = retval.times(i);\n            return new Frac(retval);\n        },\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\n        bigLog: function (x) {\n            varn            if (CACHE[x]) {\n                return Frac.quick.apply(null, CACHE[x].split('/'));\n            }\n            x = new Frac(x);\n            var n = 80;\n            var retval = new Frac(0);\n            var a = x.subtract(new Frac(1));\n            var b = x.add(new Frac(1));\n            for (var i = 0; i < n; i++) {\n                var t = new Frac(2 * i + 1);\n                var k = Math2.bigpow(a.divide(b), t);\n                var r = t.clone().invert().multiply(k);\n                retval = retval.add(r);\n\n            }\n            return retval.multiply(new Frac(2));\n        },\n        //the factorial function but using the big library instead\n        factorial: function (x) {\n            var is_int = x % 1 === 0;\n            \n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n            if (is_int && x < 0)\n                return NaN;\n            \n            if(!is_int)\n                return Math2.gamma(x+1);\n            \n            var retval = 1;\n            for (var i = 2; i <= x; i++)\n                retval = retval * i;\n            return retval;\n        },\n        //double factorial\n        //http://mathworld.wolfram.com/DoubleFactorial.html\n        dfactorial: function (x) {\n            if (isInt(x)) {\n                var even = x % 2 === 0;\n                /* If x = even then n = x/2 else n = (x-1)/2*/\n                var n = even ? x / 2 : (x + 1) / 2;\n                /*the return value*/\n                var r = new Frac(1);\n                /*start the loop*/\n                if (even)\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\n                else\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\n            }\n            else {\n                /*Not yet extended to bigNum*/\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\n            }\n\n            /*done*/\n            return r;\n        },\n        GCD: function () {\n            var args = arrayUnique([].slice.call(arguments)\n                    .map(function (x) {\n                        return Math.abs(x);\n                    })).sort(),\n                    a = Math.abs(args.shift()),\n                    n = args.length;\n\n            while (n-- > 0) {\n                var b = Math.abs(args.shift());\n                while (true) {\n                    a %= b;\n                    if (a === 0) {\n                        a = b;\n                        break;\n                    }\n                    b %= a;\n                    if (b === 0)\n                        break;\n                    ;\n                }\n            }\n            return a;\n        },\n        QGCD: function () {\n            var args = [].slice.call(arguments);\n            var a = args[0];\n            for (var i = 1; i < args.length; i++) {\n                var b = args[i];\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n                a = b.gcd(a);\n                if (sign < 0)\n                    a.negate();\n            }\n            return a;\n        },\n        LCM: function (a, b) {\n            return (a * b) / Math2.GCD(a, b);\n        },\n        //pow but with the handling of negative numbers\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n        pow: function (b, e) {\n            if (b < 0) {\n                if (Math.abs(e) < 1) {\n                    /*nth root of a negative number is imaginary when n is even*/\n                    if (1 / e % 2 === 0)\n                        return NaN;\n                    return -Math.pow(Math.abs(b), e);\n                }\n            }\n            return Math.pow(b, e);\n        },\n        factor: function (n) {\n            n = Number(n);\n            var sign = Math.sign(n); /*store the sign*/\n            /*move the number to absolute value*/\n            n = Math.abs(n);\n            var ifactors = Math2.ifactor(n);\n            var factors = new Symbol();\n            factors.symbols = {};\n            factors.group = CB;\n            for (var x in ifactors) {\n                var factor = new Symbol(1);\n                factor.group = P; /*cheat a little*/\n                factor.value = x;\n                factor.power = new Symbol(ifactors[x]);\n                factors.symbols[x] = factor;\n            }\n            factors.updateHash();\n            \n            if(n === 1) {\n                factors = new Symbol(n);\n            }\n            \n            /*put back the sign*/\n            if(sign < 0)\n                factors.negate();\n            \n            return factors;\n        },\n        /**\n         * Uses trial division\n         * @param {Integer} n - the number being factored\n         * @param {object} factors -  the factors object\n         * @returns {object}\n         */\n        sfactor: function (n, factors) {\n            factors = factors || {};\n            var r = Math.floor(Math.sqrt(n));\n            var lcprime = PRIMES[PRIMES.length - 1];\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n            /*takes too long*/\n            if (r > lcprime && n < 1e6)\n                generatePrimes(r);\n            var l = PRIMES.length;\n            for (var i = 0; i < l; i++) {\n                var prime = PRIMES[i];\n                /*trial division*/\n                while (n % prime === 0) {\n                    n = n / prime;\n                    factors[prime] = (factors[prime] || 0) + 1;\n                }\n            }\n            if (n > 1)\n                factors[n] = 1;\n            return factors;\n        },\n        /**\n         * Pollard's rho\n         * @param {Integer} n\n         * @returns {object}\n         */\n        ifactor: function (n) {\n            n = String(n);\n\n            if (n === '0')\n                return {'0': 1};\n            n = new bigInt(n); /*convert to bigInt for safety*/\n            var sign = n.sign ? -1 : 1;\n            n = n.abs();\n            var factors = {}; /*factor object being returned.*/\n            if (n.lt('65536')) { /*less than 2^16 just use trial division*/\n                factors = Math2.sfactor(n, factors);\n            }\n            else {\n                var add = function (e) {\n                    if (!e.isPrime()) {\n                        factors = Math2.sfactor(e, factors);\n                    }\n                    else\n                        factors[e] = (factors[e] || 0) + 1;\n                };\n\n                while (!n.abs().equals(1)) {\n                    if (n.isPrime()) {\n                        add(n);\n                        break;\n                    }\n                    else {\n                        function rho(c) {\n                            var xf = new bigInt(c),\n                                    cz = 2,\n                                    x = new bigInt(c),\n                                    factor = new bigInt(1);\n\n                            while (factor.equals(1)) {\n                                for (var i = 0; i <= cz && factor.equals(1); i++) {\n                                    x = x.pow(2).add(1).mod(n);\n                                    factor = bigInt.gcd(x.minus(xf).abs(), n);\n                                }\n\n                                cz = cz * 2;\n                                xf = x;\n                            }\n                            if (factor.equals(n)) {\n                                return rho(c + 1);\n                            }\n                            return factor;\n                        }\n                        var factor = rho(2);\n                        add(factor);\n                        /*divide out the factor*/\n                        n = n.divide(factor);\n                    }\n                }\n            }\n\n            /*put the sign back*/\n            if (sign === -1) {\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\n                factors['-' + sm] = factors[sm];\n                delete factors[sm];\n            }\n\n            return factors;\n        },\n        //factors a number into rectangular box. If sides are primes that this will be\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n        boxfactor: function (n, max) {\n            max = max || 200; //stop after this number of iterations\n            var c, r,\n                    d = Math.floor((5 / 12) * n), //the divisor\n                    i = 0, //number of iterations\n                    safety = false;\n            while (true) {\n                c = Math.floor(n / d);\n                r = n % d;\n                if (r === 0)\n                    break; //we're done\n                if (safety)\n                    return [n, 1];\n                d = Math.max(r, d - r);\n                i++;\n                safety = i > max;\n            }\n            return [c, d, i];\n        },\n        fib: function (n) {\n            var sign = Math.sign(n);\n            n = Math.abs(n);\n            sign = even(n) ? sign : Math.abs(sign);\n            var a = 0, b = 1, f = 1;\n            for (var i = 2; i <= n; i++) {\n                f = a + b;\n                a = b;\n                b = f;\n            }\n            return f * sign;\n        },\n        mod: function (x, y) {\n            return x % y;\n        },\n        //http://mathworld.wolfram.com/IntegerPart.html\n        integer_part: function (x) {\n            var sign = Math.sign(x);\n            return sign * Math.floor(Math.abs(x));\n        },\n        simpson: function (f, a, b, step) {\n            var get_value = function (f, x, side) {\n                var v = f(x);\n                var d = 0.000000000001;\n                if (isNaN(v)) {\n                    v = f(side === 1 ? x + d : x - d);\n                }\n                return v;\n            };\n\n            step = step || 0.0001;\n            //calculate the number of intervals\n            var n = Math.abs(Math.floor((b - a) / step));\n            //simpson's rule requires an even number of intervals. If it's not then add 1\n            if (n % 2 !== 0)\n                n++;\n            //get the interval size\n            var dx = (b - a) / n;\n            //get x0\n            var retval = get_value(f, a, 1);\n\n            //get the middle part 4x1+2x2+4x3 ...\n            //but first set a flag to see if it's even or odd. \n            //The first one is odd so we start there\n            var even = false;\n            //get x1\n            var xi = a + dx;\n            //the coefficient\n            var c, k;\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\n            for (var i = 1; i < n; i++) {\n                c = even ? 2 : 4;\n                k = c * get_value(f, xi, 1);\n                retval += k;\n                //flip the even flag\n                even = !even;\n                //increment xi\n                xi += dx;\n            }\n\n            //add xn\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\n\n        },\n        /**\n         * https://github.com/scijs/integrate-adaptive-simpson\n         * @param {Function} f - the function being integrated\n         * @param {Number} a - lower bound\n         * @param {Number} b - upper bound\n         * @param {Number} tol - step width\n         * @param {Number} maxdepth\n         * @returns {Number}\n         */\n        num_integrate: function (f, a, b, tol, maxdepth) {\n            if (maxdepth < 0)\n                throw new Error('max depth cannot be negative');\n\n            /* This algorithm adapted from pseudocode in:*/\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n                if (state.nanEncountered) {\n                    return NaN;\n                }\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n                h = b - a;\n                f1 = f(a + h * 0.25);\n                f2 = f(b - h * 0.25);\n                /* Simple check for NaN:*/\n                if (isNaN(f1)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n                /* Simple check for NaN:*/\n                if (isNaN(f2)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n\n                sl = h * (fa + 4 * f1 + fm) / 12;\n                sr = h * (fm + 4 * f2 + fb) / 12;\n                s2 = sl + sr;\n                err = (s2 - V0) / 15;\n\n                if (state.maxDepthCount > 1000 * maxdepth) {\n                    return;\n                }\n\n\n                if (depth > maxdepth) {\n                    state.maxDepthCount++;\n                    return s2 + err;\n                }\n                else if (Math.abs(err) < tol) {\n                    return s2 + err;\n                }\n                else {\n                    m = a + h * 0.5;\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n                    if (isNaN(V1)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n                    if (isNaN(V2)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n\n                    return V1 + V2;\n                }\n            }\n\n            function integrate(f, a, b, tol, maxdepth) {\n                var state = {\n                    maxDepthCount: 0,\n                    nanEncountered: false\n                };\n\n                if (tol === undefined) {\n                    tol = 1e-9;\n                }\n                if (maxdepth === undefined) {\n                    /*Issue #458 - This was lowered because of performance issues. */\n                    /*This was suspected from before but is now confirmed with this issue*/\n                    maxdepth = 45;\n                }\n\n                var fa = f(a);\n                var fm = f(0.5 * (a + b));\n                var fb = f(b);\n\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n                if (state.maxDepthCount > 0) {\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n                }\n\n                if (state.nanEncountered) {\n                    throw new Error('Function does not converge over interval!');\n                }\n\n                return result;\n            }\n            var retval;\n\n            try {\n                retval = integrate(f, a, b, tol, maxdepth);\n            }\n            catch (e) {\n                /*fallback to non-adaptive*/\n                return Math2.simpson(f, a, b);\n            }\n            return nround(retval, 12);\n        },\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\n        //CosineIntegral\n        Ci: function (x) {\n            var n = 20,\n                    /*roughly Euler–Mascheroni*/\n                    g = 0.5772156649015329, \n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                /*cache 2n*/\n                var n2 = 2 * i; \n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\n            }\n            return Math.log(x) + g + sum;\n        },\n        /*SineIntegral*/\n        Si: function (x) {\n            var n = 20,\n                    sum = 0;\n            for (var i = 0; i < n; i++) {\n                var n2 = 2 * i;\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\n            }\n            return sum;\n        },\n        /*ExponentialIntegral*/\n        Ei: function (x) {\n            if (Number(x) === 0)\n                return -Infinity;\n            var n = 30,\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\n            }\n            return g + Math.abs(Math.log(x)) + sum;\n        },\n        /*Hyperbolic Sine Integral*/\n        /*http://mathworld.wolfram.com/Shi.html*/\n        Shi: function (x) {\n            var n = 30,\n                    sum = 0,\n                    k, t;\n            for (var i = 0; i < n; i++) {\n                k = 2 * i;\n                t = k + 1;\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\n            }\n            return sum;\n        },\n        /*the cosine integral function*/\n        Chi: function (x) {\n            var dx, g, f;\n            dx = 0.001;\n            g = 0.5772156649015328606;\n            f = function (t) {\n                return (Math.cosh(t) - 1) / t;\n            };\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\n        },\n        /*the log integral*/\n        Li: function (x) {\n            return Math2.Ei(Math2.bigLog(x));\n        },\n        /*the gamma incomplete function*/\n        gamma_incomplete: function (n, x) {\n            var t = n - 1,\n                    sum = 0,\n                    x = x || 0;\n            for (var i = 0; i < t; i++) {\n                sum += Math.pow(x, i) / Math2.factorial(i);\n            }\n            return Math2.factorial(t) * Math.exp(-x) * sum;\n        },\n        /*\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\n         * if x > 0 then 1\n         * if x == 0 then 1/2\n         * if x < 0 then 0\n         */\n        step: function (x) {\n            if (x > 0)\n                return 1;\n            if (x < 0)\n                return 0;\n            return 0.5;\n        },\n        /*\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\n         * if |x| > 1/2 then 0\n         * if |x| == 1/2 then 1/2\n         * if |x| < 1/2 then 1\n         */\n        rect: function (x) {\n            var x = Math.abs(x);\n            if (x === 0.5)\n                return x;\n            if (x > 0.5)\n                return 0;\n            return 1;\n        },\n        /*\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\n         * if x == 0 then 1\n         * otherwise sin(x)/x\n         */\n        sinc: function (x) {\n            if (x.equals(0))\n                return 1;\n            return Math.sin(x) / x;\n        },\n        /*\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\n         * if |x| >= 1 then 0\n         * if |x| < then 1-|x|\n         */\n        tri: function (x) {\n            x = Math.abs(x);\n            if (x >= 1)\n                return 0;\n            return 1 - x;\n        },\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\n        nthroot: function (A, n) {\n            /*make sure the input is of type Frac*/\n            if (!(A instanceof Frac))\n                A = new Frac(A.toString());\n            if (!(n instanceof Frac))\n                n = new Frac(n.toString());\n            if (n.equals(1))\n                return A;\n            /*begin algorithm*/\n            var xk = A.divide(new Frac(2)); /*x0*/\n            var e = new Frac(1e-15);\n            var dk, dk0, d0;\n            var a = n.clone().invert(),\n                    b = n.subtract(new Frac(1));\n            do {\n                var powb = Math2.bigpow(xk, b);\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n                dk = Frac.create(dk_dec);\n                if (d0)\n                    break;\n\n                xk = xk.add(dk);\n                /*check to see if there's no change from the last xk*/\n                var dk_dec = dk.toDecimal();\n                d0 = dk0 ? dk0 === dk_dec : false;\n                dk0 = dk_dec;\n            }\n            while (dk.abs().gte(e))\n\n            return xk;\n        },\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n        /*Just the square root function but big :)*/\n        sqrt: function (n) {\n            if (!(n instanceof Frac))\n                n = new Frac(n);\n            var xn, d, ld, same_delta;\n            var c = 0; /*counter*/\n            var done = false;\n            var delta = new Frac(1e-20);\n            xn = n.divide(new Frac(2));\n            var safety = 1000;\n            do {\n                /*break if we're not converging*/\n                if (c > safety)\n                    throw new Error('Unable to calculate square root for ' + n);\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\n                xn = new Frac(xn.decimal(30));\n                /*get the difference from the true square*/\n                d = n.subtract(xn.multiply(xn));\n                /*if the square of the calculated number is close enough to the number*/\n                /*we're getting the square root or the last delta was the same as the new delta*/\n                /*then we're done*/\n                same_delta = ld ? ld.equals(d) : false;\n                if (d.clone().abs().lessThan(delta) || same_delta)\n                    done = true;\n                /*store the calculated delta*/\n                ld = d;\n                c++; /*increase the counter*/\n            }\n            while (!done)\n\n            return xn;\n        }\n    };\n    //link the Math2 object to Settings.FUNCTION_MODULES\n    Settings.FUNCTION_MODULES.push(Math2);\n    reserveNames(Math2); //reserve the names in Math2\n\n\n//Polyfills ==================================================================== \n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\n    Math.sign = Math.sign || function (x) {\n        x = +x; // convert to a number\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n        return x > 0 ? 1 : -1;\n    };\n\n    Math.cosh = Math.cosh || function (x) {\n        var y = Math.exp(x);\n        return (y + 1 / y) / 2;\n    };\n\n    Math.sech = Math.sech || function (x) {\n        return 1 / Math.cosh(x);\n    };\n\n    Math.csch = Math.csch || function (x) {\n        return 1 / Math.sinh(x);\n    };\n\n    Math.coth = Math.coth || function (x) {\n        return 1 / Math.tanh(x);\n    };\n\n    Math.sinh = Math.sinh || function (x) {\n        var y = Math.exp(x);\n        return (y - 1 / y) / 2;\n    };\n\n    Math.tanh = Math.tanh || function (x) {\n        if (x === Infinity) {\n            return 1;\n        }\n        else if (x === -Infinity) {\n            return -1;\n        }\n        else {\n            var y = Math.exp(2 * x);\n            return (y - 1) / (y + 1);\n        }\n    };\n\n    Math.asinh = Math.asinh || function (x) {\n        if (x === -Infinity) {\n            return x;\n        }\n        else {\n            return Math.log(x + Math.sqrt(x * x + 1));\n        }\n    };\n\n    Math.acosh = Math.acosh || function (x) {\n        return Math.log(x + Math.sqrt(x * x - 1));\n    };\n\n    Math.atanh = Math.atanh || function (x) {\n        return Math.log((1 + x) / (1 - x)) / 2;\n    };\n\n    Math.log10 = Math.log10 || function (x) {\n        return Math.log(x) * Math.LOG10E;\n    };\n\n    Math.trunc = Math.trunc || function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n\n//Global functions ============================================================= \n    /**\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector. \n     * If all else fails it *assumes* the object has a toString method and will call that.\n     * \n     * @param {Object} obj\n     * @param {String} option get is as a hash \n     * @param {int} useGroup\n     * @returns {String}\n     */\n    function text(obj, option, useGroup) {\n        var asHash = option === 'hash',\n                //whether to wrap numbers in brackets\n                wrapCondition = undefined,\n                opt = asHash ? undefined : option;\n\n        function toString(obj) {\n            switch (option)\n            {\n                case 'decimals':\n                case 'decimal':\n                    wrapCondition = wrapCondition || function (str) {\n                        return false;\n                    };\n                    return obj.valueOf();\n                case 'recurring':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf(\"'\") !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var negative = false;\n                    var m = Number(parts[0]);\n                    if (m < 0) {\n                        m = -m;\n                        negative = true;\n                    }\n                    var n = Number(parts[1]);\n                    if (!n)\n                        n = 1;\n\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\n                    quotient = quotient.toString() + \".\";\n                    while (c && c < n) {\n                        c *= 10;\n                        quotient += \"0\";\n                    }\n                    var digits = \"\", passed = [], i = 0;\n                    while (true) {\n                        if (typeof passed[c] !== 'undefined') {\n                            var prefix = digits.slice(0, passed[c]),\n                                    cycle = digits.slice(passed[c]),\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\n                        }\n                        var q = Math.floor(c / n), r = c - q * n;\n                        passed[c] = i;\n                        digits += q.toString();\n                        i += 1;\n                        c = 10 * r;\n                    }\n                case 'mixed':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var numer = new bigInt(parts[0]);\n                    var denom = new bigInt(parts[1]);\n                    if (denom.equals(0))\n                        denom = new bigInt(1);\n\n                    //return the quotient plus the remainder\n                    var divmod = numer.divmod(denom);\n                    var quotient = divmod.quotient;\n                    var remainder = divmod.remainder;\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\n                default:\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n\n                    return obj.toString();\n            }\n        }\n\n        //if the object is a symbol\n        if (isSymbol(obj)) {\n            var multiplier = '',\n                    power = '',\n                    sign = '',\n                    group = obj.group || useGroup,\n                    value = obj.value;\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\n            if (!asHash) {\n                //use asDecimal to get the object back as a decimal\n                var om = toString(obj.multiplier);\n                if (om == '-1') {\n                    sign = '-';\n                    om = '1';\n                }\n                //only add the multiplier if it's not 1\n                if (om != '1')\n                    multiplier = om;\n                //use asDecimal to get the object back as a decimal\n                var p = obj.power ? toString(obj.power) : '';\n                //only add the multiplier \n                if (p != '1') {\n                    //is it a symbol\n                    if (isSymbol(p)) {\n                        power = text(p, opt);\n                    }\n                    else {\n                        power = p;\n                    }\n                }\n            }\n\n            switch (group) {\n                case N:\n                    multiplier = '';\n\n                    //if it's numerical then all we need is the multiplier\n                    value = obj.multiplier == '-1' ? '1' : toString(obj.multiplier);\n                    power = '';\n                    break;\n                case PL:\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CP:\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CB:\n                    value = obj.collectSymbols(function (symbol) {\n                        var g = symbol.group;\n                        //both groups will already be in brackets if their power is greater than 1\n                        //so skip it.\n                        if ((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\n                            return inBrackets(text(symbol, opt));\n                        }\n                        return text(symbol, opt);\n                    }).join('*');\n                    break;\n                case EX:\n                    var pg = obj.previousGroup,\n                            pwg = obj.power.group;\n\n                    //PL are the exception. It's simpler to just collect and set the value\n                    if (pg === PL)\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\n                    if (!(pg === N || pg === S || pg === FN) && !asHash) {\n                        value = inBrackets(value);\n                    }\n\n                    if ((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\n                        power = inBrackets(power);\n                    }\n                    break;\n            }\n\n            if (group === FN) {\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\n                    return text(symbol, opt);\n                }).join(','));\n            }\n            //TODO: Needs to be more efficient. Maybe. \n            if (group === FN && obj.fname in CUSTOM_OPERATORS) {\n                var a = text(obj.args[0]);\n                var b = text(obj.args[1]);\n                if (obj.args[0].isComposite()) //preserve the brackets\n                    a = inBrackets(a);\n                if (obj.args[1].isComposite()) //preserve the brackets\n                    b = inBrackets(b);\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\n            }\n            //wrap the power since / is less than ^\n            //TODO: introduce method call isSimple\n            if (power && group !== EX && wrapCondition(power)) {\n                power = inBrackets(power);\n            }\n\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\n            //by a multiplier and have to be in brackets to preserve the order of precedence\n            if (((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\n                    || !asHash && group === P && value == -1\n                    || obj.fname === PARENTHESIS) {\n\n                value = inBrackets(value);\n            }\n\n            var c = sign + multiplier;\n            if (multiplier && wrapCondition(multiplier))\n                c = inBrackets(c);\n\n            if (power < 0)\n                power = inBrackets(power);\n            if (multiplier)\n                c = c + '*';\n            if (power)\n                power = Settings.POWER_OPERATOR + power;\n\n            //this needs serious rethinking. Must fix\n            if (group === EX && value.charAt(0) === '-')\n                value = inBrackets(value);\n\n            var cv = c + value;\n\n            if (obj.parens)\n                cv = inBrackets(cv);\n\n            return cv + power;\n        }\n        else if (isVector(obj)) {\n            var l = obj.elements.length,\n                    c = [];\n            for (var i = 0; i < l; i++)\n                c.push(obj.elements[i].text(option));\n            return '[' + c.join(',') + ']';\n        }\n        else {\n            try {\n                return obj.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        }\n    }\n    /**\n     * Calculates prime factors for a number\n     * @param {int} num\n     * @returns {Array}\n     */\n\n    function primeFactors(num) {\n        if (isPrime(num))\n            return [num];\n        var l = num, i = 1, factors = [],\n                epsilon = 2.2204460492503130808472633361816E-16;\n        while (i < l) {\n            var quotient = num / i;\n            var whole = Math.floor(quotient);\n            var remainder = quotient - whole;\n            if (remainder <= epsilon && i > 1) {\n                if (PRIMES.indexOf(i) !== -1)\n                    PRIMES[i]=i;\n                factors.push(i);\n                l = whole;\n            }\n            i++;\n        }\n        \n        return factors.sort(function (a, b) {\n            return a - b;\n        });\n    };\n\n//Expression ===================================================================   \n    /** \n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and \n     * provides the user with some useful functions. If you want to provide the user with extra\n     * library functions then add them to this class's prototype.\n     * @param {Symbol} symbol\n     * @returns {Expression} wraps around the Symbol class\n     */\n    function Expression(symbol) {\n        //we don't want arrays wrapped\n        this.symbol = symbol;\n    }\n    /**\n     * Returns stored expression at index. For first index use 1 not 0.\n     * @param {bool} asType  \n     * @param {Integer} expression_number \n     */\n    Expression.getExpression = function (expression_number, asType) {\n        if (expression_number === 'last' || !expression_number)\n            expression_number = EXPRESSIONS.length;\n        if (expression_number === 'first')\n            expression_number = 1;\n        var index = expression_number - 1,\n                expression = EXPRESSIONS[index],\n                retval = expression ? new Expression(expression) : expression;\n        return retval;\n    };\n    Expression.prototype = {\n        /**\n         * Returns the text representation of the expression\n         * @param {String} opt - option of formatting numbers\n         * @param {Number} n The number of significant figures\n         * @returns {String}\n         */\n        text: function (opt, n) {\n            var round = typeof n === 'undefined';\n            n = n || 24; \n            opt = opt || 'decimals';\n            if (this.symbol.text_)\n                return this.symbol.text_(opt);\n            \n            if(this.symbol.group === N && (opt === 'decimals' || opt === 'decimal')) {\n                var txt = this.symbol.multiplier.toDecimal(n);\n                \n                //round as not to have a breaking change but only do so if no significant figures were specified\n                if(round && !isInt(txt)) \n                    txt = nround(txt, 19).toString();\n                return txt;\n            }\n            return text(this.symbol, opt);\n        },\n        /**\n         * Returns the latex representation of the expression\n         * @param {String} option - option for formatting numbers\n         * @returns {String}\n         */\n        latex: function (option) {\n            if (this.symbol.latex)\n                return this.symbol.latex(option);\n            return LaTeX.latex(this.symbol, option);\n        },\n        valueOf: function () {\n            return this.symbol.valueOf();\n        },\n\n        /**\n         * Evaluates the expression and tries to reduce it to a number if possible.\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\n         * Other than that it will just use it's own text and reparse\n         * @returns {Expression}\n         */\n        evaluate: function () {\n            var first_arg = arguments[0], expression, idx = 1;\n            //Enable getting of expressions using the % so for example %1 should get the first expression\n            if (typeof first_arg === 'string') {\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\n            }\n            else if (first_arg instanceof Expression || isSymbol(first_arg)) {\n                expression = first_arg.text();\n            }\n            else {\n                expression = this.symbol.text();\n                idx--;\n            }\n\n            var subs = arguments[idx] || {};\n\n            return new Expression(block('PARSE2NUMBER', function () {\n                return _.parse(expression, subs);\n            }, true));\n        },\n        /**\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of \n         * the default alphabetical order\n         * @param vars {Array}\n         */\n        buildFunction: function (vars) {\n            return Build.build(this.symbol, vars);\n        },\n        /**\n         * Checks to see if the expression is just a plain old number\n         * @returns {boolean}\n         */\n        isNumber: function () {\n            return isNumericSymbol(this.symbol);\n        },\n        /**\n         * Checks to see if the expression is infinity\n         * @returns {boolean}\n         */\n        isInfinity: function () {\n            return Math.abs(this.symbol.multiplier) === Infinity;\n        },\n        /**\n         * Returns all the variables in the expression\n         * @returns {Array}\n         */\n        variables: function () {\n            return variables(this.symbol);\n        },\n\n        toString: function () {\n            try {\n                if (isArray(this.symbol))\n                    return '[' + this.symbol.toString() + ']';\n                return this.symbol.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        },\n        //forces the symbol to be returned as a decimal\n        toDecimal: function (prec) {\n            Settings.precision = prec;\n            var dec = text(this.symbol, 'decimals');\n            Settings.precision = undefined;\n            return dec;\n        },\n        //checks to see if the expression is a fraction\n        isFraction: function () {\n            return isFraction(this.symbol);\n        },\n        //checks to see if the symbol is a multivariate polynomial\n        isPolynomial: function () {\n            return this.symbol.isPoly();\n        },\n        //performs a substitution\n        sub: function (symbol, for_symbol) {\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\n        },\n        operation: function (otype, symbol) {\n            if (isExpression(symbol))\n                symbol = symbol.symbol;\n            else if (!isSymbol(symbol))\n                symbol = _.parse(symbol);\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\n        },\n        add: function (symbol) {\n            return this.operation('add', symbol);\n        },\n        subtract: function (symbol) {\n            return this.operation('subtract', symbol);\n        },\n        multiply: function (symbol) {\n            return this.operation('multiply', symbol);\n        },\n        divide: function (symbol) {\n            return this.operation('divide', symbol);\n        },\n        pow: function (symbol) {\n            return this.operation('pow', symbol);\n        },\n        expand: function () {\n            return new Expression(_.expand(this.symbol));\n        },\n        each: function (callback, i) {\n            if (this.symbol.each)\n                this.symbol.each(callback, i);\n            else if (isArray(this.symbol)) {\n                for (var i = 0; i < this.symbol.length; i++)\n                    callback.call(this.symbol, this.symbol[i], i);\n            }\n            else\n                callback.call(this.symbol);\n        },\n        eq: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = _.subtract(this.symbol.clone(), value);\n                return d.equals(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        lt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.lessThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.greaterThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gte: function (value) {\n            return this.gt(value) || this.eq(value);\n        },\n        lte: function (value) {\n            return this.lt(value) || this.eq(value);\n        },\n\n        numerator: function () {\n            return new Expression(this.symbol.getNum());\n        },\n        denominator: function () {\n            return new Expression(this.symbol.getDenom());\n        },\n        hasFunction: function(f) {\n            return this.symbol.containsFunction(f);\n        },\n        contains: function(variable) {\n            return this.symbol.contains(variable);\n        }\n    };\n    //Aliases\n    Expression.prototype.toTeX = Expression.prototype.latex;\n\n//Scientific ===================================================================  \n    function Scientific(num) {\n        if (!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if (num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        } else {\n            this.sign = 1;\n        }\n\n        if (Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        } else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function (num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function (num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || '';\n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w + d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location - (zeroes + 1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\n\n            return this;\n        },\n        round: function (num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if (num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num + 1);\n                //get the next two\n                var next_two = this.coeff.substring(num + 1, num + 3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if (next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded + ed;\n            }\n\n            return n;\n        },\n        copy: function () {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function (n) {\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n            return (this.sign === -1 ? '-' : '') + coeff + 'e' + this.exponent;\n        }\n    };\n\n    Scientific.isScientific = function (num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function (num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    };\n    Scientific.removeLeadingZeroes = function (num) {\n        var match = num.match(/^0*(.*)$/);\n        return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function (num) {\n        var match = num.match(/0*$/);\n        return match ? num.substring(0, num.length - match[0].length) : '';\n    };\n    Scientific.round = function (c, n) {\n        var coeff = nround(c, n);\n        var m = String(coeff).split('.').pop();\n        var d = n - m.length;\n        //if we're asking for more significant figures\n        if (d > 0) {\n            coeff = coeff + (new Array(d + 1).join(0));\n        }\n        return coeff;\n    };\n\n//Scientific ===================================================================\n    /*\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\n     */\n\n    function Scientific(num) {\n        if(!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if(num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        }\n        else {\n            this.sign = 1;\n        }\n\n        if(Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        }\n        else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function(num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function(num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || ''; \n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w+d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location-(zeroes+1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0)+'.'+(coeff.substr(1, coeff.length) || '0');\n\n            return this;\n        },\n        round: function(num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if(num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num+1);\n                //get the next two\n                var next_two = this.coeff.substring(num+1, num+3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if(next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded+ed;\n            }\n\n            return n;\n        },\n        copy: function() {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function(n) {\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n            return (this.sign === -1 ? '-' : '' )+coeff+'e'+this.exponent;\n        }\n    };\n\n    Scientific.isScientific = function(num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function(num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    }; \n    Scientific.removeLeadingZeroes = function(num) {\n      var match = num.match(/^0*(.*)$/);\n      return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function(num) {\n      var match = num.match(/0*$/);\n      return match ? num.substring(0, num.length-match[0].length) : '';\n    };\n\n\n//Frac =========================================================================    \n    function Frac(n) {\n        if (n instanceof Frac)\n            return n;\n        if (n === undefined)\n            return this;\n        try {\n            if (isInt(n)) {\n                try {\n                    this.num = bigInt(n);\n                    this.den = bigInt(1);\n                }\n                catch (e) {\n                    return Frac.simple(n);\n                }\n            }\n            else {\n                var frac = Fraction.convert(n);\n                this.num = new bigInt(frac[0]);\n                this.den = new bigInt(frac[1]);\n            }\n        }\n        catch (e) {\n            return Frac.simple(n);\n        }\n\n    }\n    //safe to use with negative numbers or other types\n    Frac.create = function (n) {\n        if (n instanceof Frac)\n            return n;\n        n = n.toString();\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\n        if (is_neg)\n            n = n.substr(1, n.length - 1); //remove the sign\n        var frac = new Frac(n);\n        //put the sign back\n        if (is_neg)\n            frac.negate();\n        return frac;\n    };\n    Frac.isFrac = function (o) {\n        return (o instanceof Frac);\n    };\n    Frac.quick = function (n, d) {\n        var frac = new Frac();\n        frac.num = new bigInt(n);\n        frac.den = new bigInt(d);\n        return frac;\n    };\n    Frac.simple = function (n) {\n        var nstr = String(scientificToDecimal(n)),\n                m_dc = nstr.split('.'),\n                num = m_dc.join(''),\n                den = 1,\n                l = (m_dc[1] || '').length;\n        for (var i = 0; i < l; i++)\n            den += '0';\n        var frac = Frac.quick(num, den);\n        return frac.simplify();\n    };\n    Frac.prototype = {\n        multiply: function (m) {\n            if (this.isOne()) {\n                return m.clone();\n            }\n            if (m.isOne()) {\n                return this.clone();\n            }\n\n            var c = this.clone();\n            c.num = c.num.multiply(m.num);\n            c.den = c.den.multiply(m.den);\n\n            return c.simplify();\n        },\n        divide: function (m) {\n            if (m.equals(0))\n                throw new DivisionByZero('Division by zero not allowed!');\n            return this.clone().multiply(m.clone().invert()).simplify();\n        },\n        subtract: function (m) {\n            return this.clone().add(m.clone().neg());\n        },\n        neg: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        add: function (m) {\n            var n1 = this.den, n2 = m.den, c = this.clone();\n            var a = c.num, b = m.num;\n            if (n1.equals(n2)) {\n                c.num = a.add(b);\n            }\n            else {\n                c.num = a.multiply(n2).add(b.multiply(n1));\n                c.den = n1.multiply(n2);\n            }\n\n            return c.simplify();\n        },\n        mod: function (m) {\n            var a = this.clone(),\n                    b = m.clone();\n            //make their denominators even and return the mod of their numerators\n            a.num = a.num.multiply(b.den);\n            a.den = a.den.multiply(b.den);\n            b.num = b.num.multiply(this.den);\n            b.den = b.den.multiply(this.den);\n            a.num = a.num.mod(b.num);\n            return a.simplify();\n        },\n        simplify: function () {\n            var gcd = bigInt.gcd(this.num, this.den);\n\n            this.num = this.num.divide(gcd);\n            this.den = this.den.divide(gcd);\n            return this;\n        },\n        clone: function () {\n            var m = new Frac();\n            m.num = new bigInt(this.num);\n            m.den = new bigInt(this.den);\n            return m;\n        },\n        decimal: function (prec) {\n            var sign = this.num.isNegative() ? '-' : '';\n            if (this.num.equals(this.den)) {\n                return '1';\n            }\n            //go plus one for rounding\n            prec = prec || Settings.PRECISION;\n            prec++;\n            var narr = [],\n                    n = this.num.abs(),\n                    d = this.den;\n            for (var i = 0; i < prec; i++) {\n                var w = n.divide(d), //divide out whole\n                        r = n.subtract(w.multiply(d)); //get remainder\n\n                narr.push(w);\n                if (r.equals(0))\n                    break;\n                n = r.times(10); //shift one dec place\n            }\n            var whole = narr.shift();\n            if (narr.length === 0) {\n                return sign + whole.toString();\n            }\n\n            if (i === prec) {\n                var lt = [];\n                //get the last two so we can round it\n                for (var i = 0; i < 2; i++)\n                    lt.unshift(narr.pop());\n                //put the last digit back by rounding the last two\n                narr.push(Math.round(lt.join('.')));\n            }\n\n            var dec = whole.toString() + '.' + narr.join('');\n            return sign + dec;\n        },\n        toDecimal: function (prec) {\n            if (prec || Settings.PRECISION) {\n                return this.decimal(prec);\n            }\n            else \n                return this.num / this.den;\n        },\n        qcompare: function (n) {\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\n        },\n        equals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].equals(q[1]);\n        },\n        absEquals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].abs().equals(q[1]);\n        },\n        //lazy check to be fixed. Sufficient for now but will cause future problems\n        greaterThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].gt(q[1]);\n        },\n        gte: function (n) {\n            return this.greaterThan(n) || this.equals(n);\n        },\n        lte: function (n) {\n            return this.lessThan(n) || this.equals(n);\n        },\n        lessThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].lt(q[1]);\n        },\n        isInteger: function () {\n            return this.den.equals(1);\n        },\n        negate: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        invert: function () {\n            var t = this.den;\n            //why invert 0/1? It'll become 1/0 and that's a lie.\n            if (!this.num.equals(0)) {\n                var isnegative = this.num.isNegative();\n                this.den = this.num.abs();\n                this.num = t;\n                if (isnegative)\n                    this.num = this.num.multiply(-1);\n            }\n\n            return this;\n        },\n        isOne: function () {\n            return this.num.equals(1) && this.den.equals(1);\n        },\n        sign: function () {\n            return this.num.isNegative() ? -1 : 1;\n        },\n        abs: function () {\n            this.num = this.num.abs();\n            return this;\n        },\n        gcd: function (f) {\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\n        },\n        toString: function () {\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n        },\n        valueOf: function () {\n//            if(this.num == 24) throw new Error(999)\n            if (Settings.USE_BIG)\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\n            return this.num / this.den;\n        },\n        isNegative: function () {\n            return this.toDecimal() < 0;\n        }\n    };\n\n//Symbol =======================================================================\n    /**\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group. \n     * All symbols except for \"numbers (group N)\" have a power. \n     * @class Primary data type for the Parser. \n     * @param {String} obj \n     * @returns {Symbol}\n     */\n    function Symbol(obj) {\n        var isInfinity = obj === 'Infinity';\n        //this enables the class to be instantiated without the new operator\n        if (!(this instanceof Symbol)) {\n            return new Symbol(obj);\n        }\n        ;\n        //define numeric symbols\n        if (/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj)) {\n            this.group = N;\n            this.value = CONST_HASH;\n            this.multiplier = new Frac(obj);\n        }\n        //define symbolic symbols\n        else {\n            this.group = S;\n            validateName(obj);\n            this.value = obj;\n            this.multiplier = new Frac(1);\n            this.imaginary = obj === Settings.IMAGINARY;\n            this.isInfinity = isInfinity;\n        }\n\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\n        //Although this is still redundant in constants, it simplifies the logic in\n        //other parts so we'll keep it\n        this.power = new Frac(1);\n\n        // Added to silence the strict warning.\n        return this;\n    }\n    /**\n     * Returns vanilla imaginary symbol\n     * @returns {Symbol}\n     */\n    Symbol.imaginary = function () {\n        var s = new Symbol(Settings.IMAGINARY);\n        s.imaginary = true;\n        return s;\n    };\n    /**\n     * Return nerdamer's representation of Infinity\n     * @param {int} negative -1 to return negative infinity \n     * @returns {Symbol} \n     */\n    Symbol.infinity = function (negative) {\n        var v = new Symbol('Infinity');\n        if (negative === -1)\n            v.negate();\n        return v;\n    };\n    Symbol.shell = function (group, value) {\n        var symbol = new Symbol(value);\n        symbol.group = group;\n        symbol.symbols = {};\n        symbol.length = 0;\n        return symbol;\n    };\n    //sqrt(x) -> x^(1/2)\n    Symbol.unwrapSQRT = function (symbol, all) {\n        var p = symbol.power;\n        if (symbol.fname === SQRT && (symbol.isLinear() || all)) {\n            var t = symbol.args[0].clone();\n            t.power = t.power.multiply(new Frac(1 / 2));\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\n            symbol = t;\n            if (all)\n                symbol.power = p.multiply(new Frac(1 / 2));\n        }\n\n        return symbol;\n    };\n    Symbol.hyp = function (a, b) {\n        a = a || new Symbol(0);\n        b = b || new Symbol(0);\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\n    };\n    //converts to polar form array\n    Symbol.toPolarFormArray = function (symbol) {\n        var re, im, r, theta;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        r = Symbol.hyp(re, im);\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\n        return [r, theta];\n    };\n    //removes parentheses\n    Symbol.unwrapPARENS = function (symbol) {\n        if (symbol.fname === '') {\n            var r = symbol.args[0];\n            r.power = r.power.multiply(symbol.power);\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\n            if (symbol.fname === '')\n                return Symbol.unwrapPARENS(r);\n            return r;\n        }\n        return symbol;\n    };\n    //quickly creates a Symbol\n    Symbol.create = function (value, power) {\n        power = power === undefined ? 1 : power;\n        return _.parse('(' + value + ')^(' + power + ')');\n    };\n    Symbol.prototype = {\n        isSimple: function () {\n            return this.power.equals(1) && this.multiplier.equals(1);\n        },\n        //returns a clone.\n        powSimp: function () {\n            if (this.group === CB) {\n                var powers = [],\n                        sign = this.multiplier.sign();\n                this.each(function (x) {\n                    var p = x.power;\n                    //why waste time if I can't do anything anyway\n                    if (isSymbol(p) || p.equals(1))\n                        return this.clone();\n                    powers.push(p);\n                });\n                var min = new Frac(arrayMin(powers));\n\n                //handle the coefficient\n                //handle the multiplier\n                var sign = this.multiplier.sign(),\n                        m = this.multiplier.clone().abs(),\n                        mfactors = Math2.ifactor(m);\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\n                //we can then reduce it to 2*3*5*(15)^2 \n                var out_ = new Frac(1);\n                var in_ = new Frac(1);\n\n                for (var x in mfactors) {\n                    var n = new Frac(mfactors[x]);\n                    if (!n.lessThan(min)) {\n                        n = n.divide(min).subtract(new Frac(1));\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\n                    }\n\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\n                }\n                var t = new Symbol(in_);\n                this.each(function (x) {\n                    x = x.clone();\n                    x.power = x.power.divide(min);\n                    t = _.multiply(t, x);\n                });\n\n                var xt = _.symfunction(PARENTHESIS, [t]);\n                xt.power = min;\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\n\n                return xt;\n            }\n            return this.clone();\n        },\n        /**\n         * Checks to see if two functions are of equal value\n         * @param {Symbol} symbol\n         */\n        equals: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.value === symbol.value && this.power.equals(symbol.power)\n                    && this.multiplier.equals(symbol.multiplier)\n                    && this.group === symbol.group;\n        },\n        abs: function() {\n            var e = this.clone();\n            e.multiplier.abs();\n            return e;\n        },\n        // Greater than\n        gt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Greater than\n        gte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Less than\n        lt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        // Less than\n        lte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        /**\n         * Because nerdamer doesn't group symbols by polynomials but \n         * rather a custom grouping method, this has to be\n         * reinserted in order to make use of most algorithms. This function\n         * checks if the symbol meets the criteria of a polynomial.\n         * @param {bool} multivariate\n         * @returns {boolean}\n         */\n        isPoly: function (multivariate) {\n            var g = this.group,\n                    p = this.power;\n            //the power must be a integer so fail if it's not\n            if (!isInt(p) || p < 0)\n                return false;\n            //constants and first orders\n            if (g === N || g === S || this.isConstant(true))\n                return true;\n            var vars = variables(this);\n            if (g === CB && vars.length === 1) {\n                //the variable is assumed the only one that was found\n                var v = vars[0];\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\n                if (!v)\n                    return true;\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    //sqrt(x)\n                    if (sym.group === FN && !sym.args[0].isConstant())\n                        return false;\n                    if (!sym.contains(v) && !sym.isConstant(true))\n                        return false;\n                }\n                return true;\n            }\n            //PL groups. These only fail if a power is not an int\n            //this should handle cases such as x^2*t\n            if (this.isComposite() || g === CB && multivariate) {\n                //fail if we're not checking for multivariate polynomials\n                if (!multivariate && vars.length > 1)\n                    return false;\n                //loop though the symbols and check if they qualify\n                for (var x in this.symbols) {\n                    //we've already the symbols if we're not checking for multivariates at this point\n                    //so we check the sub-symbols\n                    if (!this.symbols[x].isPoly(multivariate))\n                        return false;\n                }\n                return true;\n            }\n            else\n                return false;\n\n            /*\n             //all tests must have passed so we must be dealing with a polynomial\n             return true;\n             */\n        },\n        //removes the requested variable from the symbol and returns the remainder\n        stripVar: function (x, exclude_x) {\n            var retval;\n            if ((this.group === PL || this.group === S) && this.value === x)\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\n            else if (this.group === CB && this.isLinear()) {\n                retval = new Symbol(1);\n                this.each(function (s) {\n                    if (!s.contains(x, true))\n                        retval = _.multiply(retval, s.clone());\n                });\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\n            }\n            else if (this.group === CP && !this.isLinear()) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === CP && this.isLinear()) {\n                retval = new Symbol(0);\n                this.each(function (s) {\n                    if (!s.contains(x)) {\n                        var t = s.clone();\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\n                        retval = _.add(retval, t);\n                    }\n                });\n                //BIG TODO!!! It doesn't make much sense\n                if (retval.equals(0))\n                    retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === EX && this.power.contains(x, true)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === FN && this.contains(x)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else\n                //wth? This should technically be the multiplier. \n                //Unfortunately this method wasn't very well thought out :`(.   \n                //should be: retval = new Symbol(this.multiplier);\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\n                //this will break a bunch of unit tests so be ready to for the long haul\n                retval = this.clone();\n\n\n            return retval;\n        },\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a]. \n        toArray: function (v, arr) {\n            arr = arr || {\n                arr: [],\n                add: function (x, idx) {\n                    var e = this.arr[idx];\n                    this.arr[idx] = e ? _.add(e, x) : x;\n                }\n            };\n            var g = this.group;\n\n            if (g === S && this.contains(v)) {\n                arr.add(new Symbol(this.multiplier), this.power);\n            }\n            else if (g === CB) {\n                var a = this.stripVar(v),\n                        x = _.divide(this.clone(), a.clone());\n                var p = x.isConstant() ? 0 : x.power;\n                arr.add(a, p);\n            }\n            else if (g === PL && this.value === v) {\n                this.each(function (x, p) {\n                    arr.add(x.stripVar(v), p);\n                });\n            }\n            else if (g === CP) {\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\n                //each case is handled above\n                this.each(function (x) {\n                    x.toArray(v, arr);\n                });\n            }\n            else if (this.contains(v)) {\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\n            }\n            else {\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\n            }\n            //fill the holes\n            arr = arr.arr; //keep only the array since we don't need the object anymore\n            for (var i = 0; i < arr.length; i++)\n                if (!arr[i])\n                    arr[i] = new Symbol(0);\n            return arr;\n        },\n        //checks to see if a symbol contans a function\n        hasFunc: function (v) {\n            var fn_group = this.group === FN || this.group === EX;\n            if (fn_group && !v || fn_group && this.contains(v))\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].hasFunc(v))\n                        return true;\n                }\n            }\n            return false;\n        },\n        sub: function (a, b) {\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\n            if (a.group === N || a.group === P)\n                err('Cannot substitute a number. Must be a variable');\n            var same_pow = false,\n                    a_is_unit_multiplier = a.multiplier.equals(1),\n                    m = this.multiplier.clone(),\n                    retval;\n            /* \n             * In order to make the substitution the bases have to first match take\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\n             * In both cases the first condition is that the bases match so we begin there\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\n             */\n            if (this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\n                //we cleared the first hurdle but a subsitution may not be possible just yet\n                if (a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\n                    if (a.isLinear()) {\n                        retval = b;\n                    }\n                    else if (a.power.equals(this.power)) {\n                        retval = b;\n                        same_pow = true;\n                    }\n                    if (a.multiplier.equals(this.multiplier))\n                        m = new Frac(1);\n                }\n            }\n            //the next thing is to handle CB\n            else if (this.group === CB || this.previousGroup === CB) {\n                retval = new Symbol(1);\n                this.each(function (x) {\n                    retval = _.multiply(retval, x.sub(a, b));\n                });\n            }\n            else if (this.isComposite()) {\n                if (a.isComposite() && this.isComposite() && this.isLinear() && a.isLinear()) {\n                    var find = function (stack, needle) {\n                        for (var x in stack.symbols) {\n                            var sym = stack.symbols[x];\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\n                            if (sym.isComposite() && find(sym, needle) || sym.equals(needle))\n                                return true;\n                        }\n                        return false;\n                    };\n                    //go fish\n                    for (var x in a.symbols) {\n                        if (!find(this, a.symbols[x]))\n                            return this.clone();\n                    }\n                    retval = _.add(_.subtract(this.clone(), a), b);\n                }\n                else {\n                    retval = new Symbol(0);\n                    this.each(function (x) {\n                        retval = _.add(retval, x.sub(a, b));\n                    });\n                }\n            }\n            else if (this.group === EX) {\n                // the parsed value could be a function so parse and sub\n                retval = _.parse(this.value).sub(a, b);\n            }\n            else if (this.group === FN) {\n                var nargs = [];\n                for (var i = 0; i < this.args.length; i++) {\n                    var arg = this.args[i];\n                    if (!isSymbol(arg))\n                        arg = _.parse(arg);\n                    nargs.push(arg.sub(a, b));\n                }\n                retval = _.symfunction(this.fname, nargs);\n            }\n            //if we did manage a substitution\n            if (retval) {\n                if (!same_pow) {\n                    //substitute the power\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\n                    //now raise the symbol to that power\n                    retval = _.pow(retval, p);\n                }\n\n                //transfer the multiplier\n                retval.multiplier = retval.multiplier.multiply(m);\n                //done\n                return retval;\n            }\n            //if all else fails\n            return this.clone();\n        },\n        isMonomial: function () {\n            if (this.group === S)\n                return true;\n            if (this.group === CB) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].group !== S)\n                        return false;\n            }\n            else\n                return false;\n            return true;\n        },\n        isPi: function () {\n            return this.group === S && this.value === 'pi';\n        },\n        sign: function () {\n            return this.multiplier.sign();\n        },\n        isE: function () {\n            return this.value === 'e';\n        },\n        isSQRT: function () {\n            return this.fname === SQRT;\n        },\n        isConstant: function (check_all, check_symbols) {\n            if(check_symbols && this.group === CB) {\n                for(var x in this.symbols) {\n                    if(this.symbols[x].isConstant(true))\n                        return true;\n                }\n            }\n            \n            if (check_all === 'all' && (this.isPi() || this.isE()))\n                return true;\n            \n            if (check_all && this.group === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (!this.args[i].isConstant(check_all))\n                        return false;\n                }\n                return true;\n            }\n            \n            if(check_all)\n                return isNumericSymbol(this);\n            return this.value === CONST_HASH;\n        },\n        //the symbols is imaginary if \n        //1. n*i\n        //2. a+b*i\n        //3. a*i\n        isImaginary: function () {\n            if (this.imaginary)\n                return true;\n            else if (this.symbols) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].isImaginary())\n                        return true;\n            }\n            return false;\n        },\n        /**\n         * Returns the real part of a symbol\n         * @returns {Symbol}\n         */\n        realpart: function () {\n            if (this.isConstant()) {\n                return this.clone();\n            }\n            else if (this.imaginary)\n                return new Symbol(0);\n            else if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.realpart());\n                });\n                return retval;\n            }\n            else if (this.isImaginary())\n                return new Symbol(0);\n            return this.clone();\n        },\n        /*\n         * Return imaginary part of a symbol\n         * @returns {Symbol}\n         */\n        imagpart: function () {\n            if (this.group === S && this.isImaginary())\n                return new Symbol(this.multiplier);\n            if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.imagpart());\n                });\n                return retval;\n            }\n            if (this.group === CB)\n                return this.stripVar(Settings.IMAGINARY);\n            return new Symbol(0);\n        },\n        isInteger: function () {\n            return this.isConstant() && this.multiplier.isInteger();\n        },\n        isLinear: function (wrt) {\n            if (wrt) {\n                if (this.isConstant())\n                    return true;\n                if (this.group === S) {\n                    if (this.value === wrt)\n                        return this.power.equals(1);\n                    else\n                        return true;\n                }\n\n                if (this.isComposite() && this.power.equals(1)) {\n                    for (var x in this.symbols) {\n                        if (!this.symbols[x].isLinear(wrt))\n                            return false;\n                    }\n                    return true;\n                }\n\n                if (this.group === CB && this.symbols[wrt])\n                    return this.symbols[wrt].isLinear(wrt);\n                return false;\n            }\n            else\n                return this.power.equals(1);\n        },\n        /**\n         * Checks to see if a symbol has a function by a specified name or within a specified list\n         * @param {String|String[]} names\n         * @returns {Boolean}\n         */\n        containsFunction: function (names) {\n            if (typeof names === 'string')\n                names = [names];\n            if (this.group === FN && names.indexOf(this.fname) !== -1)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].containsFunction(names))\n                        return true;\n                }\n            }\n            return false;\n        },\n        multiplyPower: function (p2) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n\n            var p1 = this.power;\n\n            if (this.group !== EX && p2.group === N) {\n                var p = p2.multiplier;\n                if (this.group === N && !p.isInteger()) {\n                    this.convert(P);\n                }\n\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\n\n                if (this.group === P && isInt(this.power)) {\n                    //bring it back to an N\n                    this.value = Math.pow(this.value, this.power);\n                    this.toLinear();\n                    this.convert(N);\n                }\n            }\n            else {\n                if (this.group !== EX) {\n                    p1 = new Symbol(p1);\n                    this.convert(EX);\n                }\n                this.power = _.multiply(p1, p2);\n            }\n\n            return this;\n        },\n        setPower: function (p, retainSign) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n            if (this.group === EX && !isSymbol(p)) {\n                this.group = this.previousGroup;\n                delete this.previousGroup;\n                if (this.group === N) {\n                    this.multiplier = new Frac(this.value);\n                    this.value = CONST_HASH;\n                }\n                else\n                    this.power = p;\n            }\n            else {\n                var isSymbolic = false;\n                if (isSymbol(p)) {\n                    if (p.group === N) {\n                        //p should be the multiplier instead\n                        p = p.multiplier;\n\n                    }\n                    else {\n                        isSymbolic = true;\n                    }\n                }\n                var group = isSymbolic ? EX : P;\n                this.power = p;\n                if (this.group === N && group)\n                    this.convert(group, retainSign);\n            }\n\n            return this;\n        },\n        /**\n         * Checks to see if symbol is located in the denominator\n         * @returns {boolean}\n         */\n        isInverse: function () {\n            if (this.group === EX)\n                return (this.power.multiplier.lessThan(0));\n            return this.power < 0;\n        },\n        /**\n         * Make a duplicate of a symbol by copying a predefined list of items. \n         * The name 'copy' would probably be a more appropriate name.\n         * to a new symbol\n         * @param {Symbol} c \n         * @returns {Symbol}\n         */\n        clone: function (c) {\n            var clone = c || new Symbol(0),\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\n                    properties = [\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\n                    l = properties.length, i;\n            if (this.symbols) {\n                clone.symbols = {};\n                for (var x in this.symbols) {\n                    clone.symbols[x] = this.symbols[x].clone();\n                }\n            }\n\n            for (i = 0; i < l; i++) {\n                if (this[properties[i]] !== undefined) {\n                    clone[properties[i]] = this[properties[i]];\n                }\n            }\n\n            clone.power = this.power.clone();\n            clone.multiplier = this.multiplier.clone();\n            //add back the flag to track if this symbol is a conversion symbol\n            if (this.isConversion)\n                clone.isConversion = this.isConversion;\n\n            if (this.isUnit)\n                clone.isUnit = this.isUnit;\n\n            return clone;\n        },\n        /**\n         * Converts a symbol multiplier to one.\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\n         * @returns {Symbol}\n         */\n        toUnitMultiplier: function (keepSign) {\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\n            this.multiplier.den = new bigInt(1);\n            return this;\n        },\n        /**\n         * Converts a Symbol's power to one.\n         * @returns {Symbol}\n         */\n        toLinear: function () {\n            this.setPower(new Frac(1));\n            return this;\n        },\n        /**\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\n         * @param {Function} fn\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well \n         */\n        each: function (fn, deep) {\n            if (!this.symbols) {\n                fn.call(this, this, this.value);\n            }\n            else {\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    if (sym.group === PL && deep) {\n                        for (var y in sym.symbols) {\n                            fn.call(x, sym.symbols[y], y);\n                        }\n                    }\n                    else\n                        fn.call(this, sym, x);\n                }\n            }\n        },\n        /**\n         * A numeric value to be returned for Javascript. It will try to \n         * return a number as far a possible but in case of a pure symbolic\n         * symbol it will just return its text representation\n         * @returns {String|Number}\n         */\n        valueOf: function () {\n            if (this.group === N)\n                return this.multiplier.valueOf();\n            else if (this.power === 0) {\n                return 1;\n            }\n            else if (this.multiplier === 0) {\n                return 0;\n            }\n            else {\n                return text(this, 'decimals');\n            }\n        },\n        /**\n         * Checks to see if a symbols has a particular variable within it.\n         * Pass in true as second argument to include the power of exponentials\n         * which aren't check by default.\n         * @example var s = _.parse('x+y+z'); s.contains('y');\n         * //returns true\n         * @param {any} variable \n         * @param {boolean} all \n         * @returns {boolean}\n         */\n        contains: function (variable, all) {\n            //contains expects a string\n            variable = String(variable);\n            var g = this.group;\n            if (this.value === variable)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].contains(variable, all))\n                        return true;\n                }\n            }\n            if (g === FN || this.previousGroup === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (this.args[i].contains(variable, all))\n                        return true;\n                }\n            }\n\n            if (g === EX) {\n                //exit only if it does\n                if (all && this.power.contains(variable, all)) {\n                    return true;\n                }\n                if (this.value === variable)\n                    return true;\n\n            }\n\n            return this.value === variable;\n        },\n        /**\n         * Negates a symbols\n         * @returns {boolean}\n         */\n        negate: function () {\n            this.multiplier.negate();\n            if (this.group === CP || this.group === PL)\n                this.distributeMultiplier();\n            return this;\n        },\n        /**\n         * Inverts a symbol\n         * @param {boolean} power_only\n         * @param {boolean} all\n         * @returns {boolean}\n         */\n        invert: function (power_only, all) {\n            //invert the multiplier\n            if (!power_only)\n                this.multiplier = this.multiplier.invert();\n            //invert the rest\n            if (isSymbol(this.power)) {\n                this.power.negate();\n            }\n            else if (this.group === CB && all) {\n                this.each(function (x) {\n                    return x.invert();\n                });\n            }\n            else {\n                if (this.power && this.group !== N)\n                    this.power.negate();\n            }\n            return this;\n        },\n        /**\n         * Symbols of group CP or PL may have the multiplier being carried by \n         * the top level symbol at any given time e.g. 2*(x+y+z). This is \n         * convenient in many cases, however in some cases the multiplier needs\n         * to be carried individually e.g. 2*x+2*y+2*z.\n         * This method distributes the multiplier over the entire symbol\n         * @param {boolean} all\n         * @returns {Symbol}\n         */\n        distributeMultiplier: function (all) {\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\n            if (this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\n                    s.distributeMultiplier();\n                }\n                this.toUnitMultiplier();\n            }\n\n            return this;\n        },\n        /**\n         * This method expands the exponent over the entire symbol just like\n         * distributeMultiplier\n         * @returns {Symbol}\n         */\n        distributeExponent: function () {\n            if (!this.power.equals(1)) {\n                var p = this.power;\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    if (s.group === EX) {\n                        s.power = _.multiply(s.power, new Symbol(p));\n                    }\n                    else {\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\n                    }\n                }\n                this.toLinear();\n            }\n            return this;\n        },\n        /**\n         * This method will attempt to up-convert or down-convert one symbol\n         * from one group to another. Not all symbols are convertible from one \n         * group to another however. In that case the symbol will remain \n         * unchanged.\n         * @param {int} group\n         * @param {string} imaginary \n         */\n        convert: function (group, imaginary) {\n            if (group > FN) {\n                //make a clone of this symbol;\n                var cp = this.clone();\n\n                //attach a symbols object and upgrade the group\n                this.symbols = {};\n\n                if (group === CB) {\n                    //symbol of group CB hold symbols bound together through multiplication\n                    //because of commutativity this multiplier can technically be anywhere within the group\n                    //to keep track of it however it's easier to always have the top level carry it\n                    cp.toUnitMultiplier();\n                }\n                else {\n                    //reset the symbol\n                    this.toUnitMultiplier();\n                }\n\n                if (this.group === FN) {\n                    cp.args = this.args;\n                    delete this.args;\n                    delete this.fname;\n                }\n\n                //the symbol may originate from the symbol i but this property no longer holds true\n                //after copying\n                if (this.isImgSymbol)\n                    delete this.isImgSymbol;\n\n                this.toLinear();\n                //attach a clone of this symbol to the symbols object using its proper key\n                this.symbols[cp.keyForGroup(group)] = cp;\n                this.group = group;\n                //objects by default don't have a length property. However, in order to keep track of the number\n                //of sub-symbols we have to impliment our own.\n                this.length = 1;\n            }\n            else if (group === EX) {\n                //1^x is just one so check and make sure\n                if (!(this.group === N && this.multiplier.equals(1))) {\n                    if (this.group !== EX)\n                        this.previousGroup = this.group;\n                    if (this.group === N) {\n                        this.value = this.multiplier.num.toString();\n                        this.toUnitMultiplier();\n                    }\n                    //update the hash to reflect the accurate hash\n                    else\n                        this.value = text(this, 'hash');\n\n                    this.group = EX;\n                }\n            }\n            else if (group === N) {\n                var m = this.multiplier.toDecimal();\n                if (this.symbols)\n                    this.symbols = undefined;\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\n            }\n            else if (group === P && this.group === N) {\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\n                this.toUnitMultiplier(!imaginary);\n                this.group = P;\n            }\n            return this;\n        },\n        /**\n         * This method is one of the principal methods to make it all possible.\n         * It performs cleanup and prep operations whenever a symbols is \n         * inserted. If the symbols results in a 1 in a CB (multiplication) \n         * group for instance it will remove the redundant symbol. Similarly\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\n         * will remove any dangling zeroes from the symbol. It will also \n         * up-convert or down-convert a symbol if it detects that it's \n         * incorrectly grouped. It should be noted that this method is not\n         * called directly but rather by the 'attach' method for addition groups\n         * and the 'combine' method for multiplication groups.\n         * @param {Symbol} symbol\n         * @param {String} action\n         */\n        insert: function (symbol, action) {\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\n            if (!isSymbol(symbol))\n                err('Object ' + symbol + ' is not of type Symbol!');\n            if (this.symbols) {\n                var group = this.group;\n                if (group > FN) {\n                    var key = symbol.keyForGroup(group);\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\n                    if (action === 'add') {\n                        var hash = key;\n                        if (existing) {\n                            //add them together using the parser\n                            this.symbols[hash] = _.add(existing, symbol);\n                            //if the addition resulted in a zero multiplier remove it\n                            if (this.symbols[hash].multiplier.equals(0)) {\n                                delete this.symbols[hash];\n                                this.length--;\n\n                                if (this.length === 0) {\n                                    this.convert(N);\n                                    this.multiplier = new Frac(0);\n                                }\n                            }\n                        }\n                        else {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                    }\n                    else {\n                        //check if this is of group P and unwrap before inserting\n                        if (symbol.group === P && isInt(symbol.power)) {\n                            symbol.convert(N);\n                        }\n\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\n                        if (symbol.group !== EX) {\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                            symbol.toUnitMultiplier();\n                        }\n                        else {\n                            symbol.parens = symbol.multiplier.lessThan(0);\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\n                            symbol.toUnitMultiplier(true);\n                        }\n\n                        if (existing) {\n                            //remove because the symbol may have changed\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\n                            if (symbol.isConstant()) {\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\n                            }\n\n                            this.length--;\n                            //clean up\n                        }\n\n                        //don't insert the symbol if it's 1\n                        if (!symbol.isOne(true)) {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                        else if (symbol.multiplier.lessThan(0)) {\n                            this.negate(); //put back the sign\n                        }\n                    }\n\n                    //clean up\n                    if (this.length === 0)\n                        this.convert(N);\n                    //update the hash\n                    if (this.group === CP || this.group === CB) {\n                        this.updateHash();\n                    }\n                }\n            }\n\n            return this;\n        },\n        //the insert method for addition\n        attach: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'add');\n                return this;\n            }\n            return this.insert(symbol, 'add');\n        },\n        //the insert method for multiplication\n        combine: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'multiply');\n                return this;\n            }\n            return this.insert(symbol, 'multiply');\n        },\n        /**\n         * This method should be called after any major \"surgery\" on a symbol.\n         * It updates the hash of the symbol for example if the fname of a \n         * function has changed it will update the hash of the symbol.\n         */\n        updateHash: function () {\n            if (this.group === N)\n                return;\n\n            if (this.group === FN) {\n                var contents = '',\n                        args = this.args,\n                        is_parens = this.fname === PARENTHESIS;\n                for (var i = 0; i < args.length; i++)\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\n                var fn_name = is_parens ? '' : this.fname;\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\n            }\n            else if (!(this.group === S || this.group === PL)) {\n                this.value = text(this, 'hash');\n            }\n        },\n        /**\n         * this function defines how every group in stored within a group of \n         * higher order think of it as the switchboard for the library. It \n         * defines the hashes for symbols. \n         * @param {int} group\n         */\n        keyForGroup: function (group) {\n            var g = this.group;\n            var key;\n\n            if (g === N) {\n                key = this.value;\n            }\n            else if (g === S || g === P) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === FN) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === PL) {\n                //if the order is reversed then we'll assume multiplication\n                //TODO: possible future dilemma\n                if (group === CB)\n                    key = text(this, 'hash');\n                else if (group === CP) {\n                    if (this.power.equals(1))\n                        key = this.value;\n                    else\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\n                }\n                else if (group === PL)\n                    key = this.power.toString();\n                else\n                    key = this.value;\n                return key;\n            }\n            else if (g === CP) {\n                if (group === CP) {\n                    key = text(this, 'hash');\n                }\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === CB) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === EX) {\n                if (group === PL)\n                    key = text(this.power);\n                else\n                    key = text(this, 'hash');\n            }\n\n            return key;\n        },\n        /** \n         * Symbols are typically stored in an object which works fine for most\n         * cases but presents a problem when the order of the symbols makes\n         * a difference. This function simply collects all the symbols and \n         * returns them as an array. If a function is supplied then that \n         * function is called on every symbol contained within the object.\n         * @param {Function} fn\n         * @param {Object} opt\n         * @param {Function} sort_fn\n         * @@param {Boolean} expand_symbol \n         * @returns {Array}\n         */\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\n            var collected = [];\n            if (!this.symbols)\n                collected.push(this);\n            else {\n                for (var x in this.symbols) {\n                    var symbol = this.symbols[x];\n                    if (expand_symbol && (symbol.group === PL || symbol.group === CP)) {\n                        collected = collected.concat(symbol.collectSymbols());\n                    }\n                    else\n                        collected.push(fn ? fn(symbol, opt) : symbol);\n                }\n            }\n            if (sort_fn === null)\n                sort_fn = undefined; //WTF Firefox? Seriously?\n\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\n        },\n        /**\n         * Returns the latex representation of the symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        latex: function (option) {\n            return LaTeX.latex(this, option);\n        },\n        /**\n         * Returns the text representation of a symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        text: function (option) {\n            return text(this, option);\n        },\n        /**\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\n         */\n        isOne: function (abs) {\n            var f = abs ? 'absEquals' : 'equals';\n            if (this.group === N)\n                return this.multiplier[f](1);\n            else\n                return this.power.equals(0);\n        },\n        isComposite: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CP || g === PL || pg === PL || pg === CP;\n        },\n        isCombination: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CB || pg === CB;\n        },\n        lessThan: function (n) {\n            return this.multiplier.lessThan(n);\n        },\n        greaterThan: function (n) {\n            return this.multiplier.greaterThan(n);\n        },\n        /**\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\n         * with other classes the symbol is either the denominator or not. \n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\n         * denominator and has to be found by looking at the actual symbols themselves.\n         */\n        getDenom: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (this.group === CB && this.power.lessThan(0))\n                symbol = _.expand(symbol);\n\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.lessThan(0)) {\n                var d = _.parse(symbol.multiplier.den);\n                retval = symbol.toUnitMultiplier();\n                retval.power.negate();\n                retval = _.multiply(d, retval); //put back the coeff\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.den);\n                for (var x in symbol.symbols)\n                    if (symbol.symbols[x].power < 0)\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\n            }\n            else\n                retval = _.parse(symbol.multiplier.den);\n            return retval;\n        },\n        getNum: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (symbol.group === CB && symbol.power.lessThan(0))\n                symbol = _.expand(symbol);\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.greaterThan(0) && symbol.group !== CB) {\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.num);\n                symbol.each(function (x) {\n                    if (x.power > 0 || x.group === EX && x.power.multiplier > 0) {\n                        retval = _.multiply(retval, x.clone());\n                    }\n                });\n            }\n            else {\n                retval = _.parse(symbol.multiplier.num);\n            }\n            return retval;\n        },\n        toString: function () {\n            return this.text();\n        }\n    };\n\n//Parser =======================================================================     \n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    function Parser() {\n        //Point to the local parser instead of the global one\n        var _ = this;\n        var bin = {};\n        var preprocessors = {names: [], actions: []};\n\n//Parser.classes ===============================================================\n        function Slice(upper, lower) {\n            this.start = upper;\n            this.end = lower;\n        }\n        ;\n        Slice.prototype.isConstant = function () {\n            return this.start.isConstant() && this.end.isConstant();\n        };\n        Slice.prototype.text = function () {\n            return text(this.start) + ':' + text(this.end);\n        };\n\n        /**\n         * Class used to collect arguments for functions\n         * @returns {Parser.Collection}\n         */\n        function Collection() {\n            this.elements = [];\n        }\n        Collection.prototype.append = function (e) {\n            this.elements.push(e);\n        };\n        Collection.prototype.getItems = function () {\n            return this.elements;\n        };\n        Collection.prototype.toString = function () {\n            return _.pretty_print(this.elements);\n        };\n        Collection.create = function (e) {\n            var collection = new Collection();\n            if (e)\n                collection.append(e);\n            return collection;\n        };\n\n        function Token(node, node_type, column) {\n            this.type = node_type;\n            this.value = node;\n            if (column !== undefined)\n                this.column = column + 1;\n            if (node_type === Token.OPERATOR) {\n                //copy everything over from the operator\n                var operator = operators[node];\n                for (var x in operator)\n                    this[x] = operator[x];\n\n            }\n            else if (node_type === Token.FUNCTION) {\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\n                this.leftAssoc = false;\n            }\n        }\n        Token.prototype.toString = function () {\n            return this.value;\n        };\n        Token.prototype.toString = function () {\n            if (this.is_prefix)\n                return '`' + this.value;\n            return this.value;\n        };\n        //some constants\n        Token.OPERATOR = 'OPERATOR';\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\n        Token.FUNCTION = 'FUNCTION';\n        Token.UNIT = 'UNIT';\n        Token.KEYWORD = 'KEYWORD';\n        Token.MAX_PRECEDENCE = 999;\n        //create link to classes\n        this.classes = {\n            Collection: Collection,\n            Slice: Slice,\n            Token: Token\n        };\n//Parser.modules ===============================================================\n        //object for functions which handle complex number\n        var complex = {\n            prec: undefined,\n            cos: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cos(r) * Math.cosh(i));\n                im = _.parse(Math.sin(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sin: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(r) * Math.cosh(i));\n                im = _.parse(Math.cos(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tan: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sec: function (r, i) {\n                var t = this.removeDen(this.cos(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csc: function (r, i) {\n                var t = this.removeDen(this.sin(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            cot: function (r, i) {\n                var t = this.removeDen(this.tan(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acos: function (r, i) {\n                var symbol, sq, a, b, c;\n                symbol = this.fromArray([r, i]);\n                sq = _.expand(_.pow(symbol.clone(), new Symbol(2))); //z*z\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\n                b = _.expand(_.add(symbol.clone(), a));\n                c = log(b);\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\n            },\n            asin: function (r, i) {\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\n            },\n            atan: function (r, i) {\n                var a, b, c, symbol;\n                symbol = complex.fromArray([r, i]);\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\n            },\n            asec: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.acos.apply(this, d);\n            },\n            acsc: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.asin.apply(this, d);\n            },\n            acot: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.atan.apply(this, d);\n            },\n            //Hyperbolic trig\n            cosh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cosh(r) * Math.cos(i));\n                im = _.parse(Math.sinh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sinh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(r) * Math.cos(i));\n                im = _.parse(Math.cosh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tanh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sech: function (r, i) {\n                var t = this.removeDen(this.cosh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csch: function (r, i) {\n                var t = this.removeDen(this.sinh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            coth: function (r, i) {\n                var t = this.removeDen(this.tanh(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acosh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\n            },\n            asinh: function (r, i) {\n                var a, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\n                return _.expand(log(_.add(z, a)));\n            },\n            atanh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = log(_.add(z.clone(), new Symbol(1)));\n                b = log(_.subtract(new Symbol(1), z));\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\n            },\n            asech: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.acosh.apply(this, t);\n            },\n            acsch: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.asinh.apply(this, t);\n            },\n            acoth: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.atanh.apply(this, t);\n            },\n            sqrt: function (symbol) {\n                var re, im, h, a, d;\n                re = symbol.realpart();\n                im = symbol.imagpart();\n                h = Symbol.hyp(re, im);\n                a = _.add(re.clone(), h);\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\n            },\n            log: function (r, i) {\n                var re, im;\n                re = log(Symbol.hyp(r, i));\n                im = _.parse(Math.atan2(i, r));\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\n            },\n            removeDen: function (symbol) {\n                var den, r, i, re, im;\n                if (isArray(symbol)) {\n                    r = symbol[0];\n                    i = symbol[1];\n                }\n                else {\n                    r = symbol.realpart();\n                    i = symbol.imagpart();\n                }\n\n                den = Math.pow(r, 2) + Math.pow(i, 2);\n                re = _.parse(r / den);\n                im = _.parse(i / den);\n                return [re, im];\n            },\n            fromArray: function (arr) {\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\n            },\n            evaluate: function (symbol, f) {\n                var re, im, sign;\n\n                sign = symbol.power.sign();\n                //remove it from under the denominator\n                symbol.power = symbol.power.abs();\n                //expand\n                if (symbol.power.greaterThan(1))\n                    symbol = _.expand(symbol);\n                //remove the denominator\n                if (sign < 0) {\n                    var d = this.removeDen(symbol);\n                    re = d[0];\n                    im = d[1];\n                }\n                else {\n                    re = symbol.realpart();\n                    im = symbol.imagpart();\n                }\n\n                if (re.isConstant('all') && im.isConstant('all'))\n                    return this[f].call(this, re, im);\n                return _.symfunction(f, [symbol]);\n            }\n        };\n        //object for functions which handle trig\n        var trig = this.trig = {\n            //container for trigonometric function\n            cos: function (symbol) {\n                if (symbol.equals('pi') && symbol.multiplier.den.equals(2))\n                    return new Symbol(0);\n\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(new Symbol(Settings.PI / 2)))\n                        return new Symbol(0);\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.cos(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cos');\n                    }\n                }\n                if (symbol.equals(0))\n                    return new Symbol(1);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = Number(m.num), d = Number(m.den);\n                        if (d === 2)\n                            retval = new Symbol(0);\n                        else if (d === 3) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else if (d === 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d === 6) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cos', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('cos', [symbol]);\n\n                return retval;\n            },\n            sin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sin(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sin');\n                }\n\n                if (symbol.equals(0))\n                    return new Symbol(0);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        sign = symbol.multiplier.sign(),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n                if (symbol.equals('pi'))\n                    retval = new Symbol(0);\n                else if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n                    }\n                }\n\n                if (!retval)\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n\n                if (c && (q === 3 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            tan: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'tan');\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('tan', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('tan', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            sec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.sec(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sec');\n                    return _.parse(format('1/cos({0})', symbol));\n                }\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = new Symbol(2);\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('2/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('sec', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('sec', [symbol]);\n\n                return retval;\n            },\n            csc: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant())\n                        return new Symbol(Math2.csc(symbol.valueOf()));\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'csc');\n                    return _.parse(format('1/sin({0})', symbol));\n                }\n\n                var retval,\n                    c = false,\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\n                    sign = symbol.multiplier.sign(),\n                    m = symbol.multiplier.abs();\n\n                symbol.multiplier = m;\n\n                if(symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if(isInt(m)) {\n                        throw new UndefinedError('csc is undefined for '+symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if(d == 2) {\n                            retval = new Symbol(1); c = true;\n                        }\n                        else if(d == 3) {\n                            retval = _.parse('2/sqrt(3)'); c = true\n                        }\n                        else if(d == 4) {\n                            retval = _.parse('sqrt(2)'); c = true;\n                        }\n                        else if(d == 6) {\n                            retval = new Symbol(2); c = true;\n                        }\n                        else \n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n                    }\n                }\n\n                if(!retval) retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n\n                if(c && (q === 3 || q === 4)) retval.negate();\n\n                return retval;\n            },\n            cot: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.cot(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'cot');\n                    return _.parse(format('1/tan({0})', symbol));\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            retval = new Symbol(0);\n                        else if (d == 3) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cot', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('cot', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            acos: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acos');\n                }\n                return _.symfunction('acos', arguments);\n            },\n            asin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asin');\n                }\n                return _.symfunction('asin', arguments);\n            },\n            atan: function (symbol) {\n                var retval;\n                if (symbol.equals(0))\n                    retval = new Symbol(0);\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.atan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'atan');\n                    return _.symfunction('atan', arguments);\n                }\n                else if (symbol.equals(-1))\n                    retval = _.parse('-pi/4');\n                else\n                    retval = _.symfunction('atan', arguments);\n                return retval;\n            },\n            asec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asec');\n                }\n                return _.symfunction('asec', arguments);\n            },\n            acsc: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acsc');\n                }\n                return _.symfunction('acsc', arguments);\n            },\n            acot: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant()) {\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\n                    }\n\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acot');\n                }\n                return _.symfunction('acot', arguments);\n            },\n            atan2: function (a, b) {\n                if (a.equals(0) && b.equals(0))\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\n\n                if (Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\n                    return new Symbol(Math.atan2(a, b));\n                }\n                return _.symfunction('atan2', arguments);\n            }\n        };\n        //object for functions which handle hyperbolic trig\n        var trigh = this.trigh = {\n            //container for hyperbolic trig function\n            cosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.cosh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cosh');\n                    }\n                }\n\n                return retval = _.symfunction('cosh', arguments);\n            },\n            sinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.sinh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sinh');\n                    }\n                }\n\n                return retval = _.symfunction('sinh', arguments);\n            },\n            tanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tanh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'tanh');\n                    }\n                }\n\n                return retval = _.symfunction('tanh', arguments);\n            },\n            sech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sech(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sech');\n                    }\n                    return _.parse(format('1/cosh({0})', symbol));\n                }\n\n                return retval = _.symfunction('sech', arguments);\n            },\n            csch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.csch(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'csch');\n                    }\n                    return _.parse(format('1/sinh({0})', symbol));\n                }\n\n                return retval = _.symfunction('csch', arguments);\n            },\n            coth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.coth(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'coth');\n                    }\n                    return _.parse(format('1/tanh({0})', symbol));\n                }\n\n                return retval = _.symfunction('coth', arguments);\n            },\n            acosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acosh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2-1))', symbol.toString())));\n                else\n                    retval = _.symfunction('acosh', arguments);\n                return retval;\n            },\n            asinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asinh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2+1))', symbol.toString())));\n                else\n                    retval = _.symfunction('asinh', arguments);\n                return retval;\n            },\n            atanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'atanh');\n                else if (Settings.PARSE2NUMBER) {\n                    retval = evaluate(_.parse(format('(1/2)*'+Settings.LOG+'((1+({0}))/(1-({0})))', symbol.toString())));\n                }\n                else\n                    retval = _.symfunction('atanh', arguments);\n                return retval;\n            },\n            asech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asech');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\n                else\n                    retval = _.symfunction('asech', arguments);\n                return retval;\n            },\n            acsch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acsch');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\n                else\n                    retval = _.symfunction('acsch', arguments);\n                return retval;\n            },\n            acoth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acoth');\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(1))\n                        retval = Symbol.infinity();\n                    else\n                        retval = evaluate(\n                                _.divide(\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\n                                        new Symbol(2)));\n                }\n                else\n                    retval = _.symfunction('acoth', arguments);\n                return retval;\n            }\n        };\n        //list of supported units\n        this.units = {};\n        //list all the supported operators\n        var operators = {\n            '\\\\': {\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            },\n            '!!': {\n                precedence: 7,\n                operator: '!!',\n                action: 'dfactorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\n                }\n            },\n            '!': {\n                precedence: 7,\n                operator: '!',\n                action: 'factorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return factorial(e); //wrap it in a factorial function\n                }\n            },\n            '^': {\n                precedence: 6,\n                operator: '^',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '**': {\n                precedence: 6,\n                operator: '**',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '%': {\n                precedence: 4,\n                operator: '%',\n                action: 'percent',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                overloaded: true,\n                overloadAction: 'mod',\n\t\toverloadLeftAssoc: false,\n                operation: function (x) {\n                    return _.divide(x, new Symbol(100));\n                }\n            },\n            '*': {\n                precedence: 4,\n                operator: '*',\n                action: 'multiply',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '/': {\n                precedence: 4,\n                operator: '/',\n                action: 'divide',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '+': {\n                precedence: 3,\n                operator: '+',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            'plus': {\n                precedence: 3,\n                operator: 'plus',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            '-': {\n                precedence: 3,\n                operator: '-',\n                action: 'subtract',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x.negate();\n                }\n            },\n            '=': {\n                precedence: 2,\n                operator: '=',\n                action: 'equals',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '==': {\n                precedence: 1,\n                operator: '==',\n                action: 'eq',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<': {\n                precedence: 1,\n                operator: '<',\n                action: 'lt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<=': {\n                precedence: 1,\n                operator: '<=',\n                action: 'lte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '>': {\n                precedence: 1,\n                operator: '>',\n                action: 'gt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '=>': {\n                precedence: 1,\n                operator: '=>',\n                action: 'gte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ',': {\n                precedence: 0,\n                operator: ',',\n                action: 'comma',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ':': {\n                precedence: 0,\n                operator: ',',\n                action: 'assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false,\n                vectorFn: 'slice'\n            },\n            ':=': {\n                precedence: 0,\n                operator: ',',\n                action: 'function_assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            }\n        };\n        //brackets\n        var brackets = {\n            '(': {\n                type: 'round',\n                id: 1,\n                is_open: true,\n                is_close: false\n            },\n            ')': {\n                type: 'round',\n                id: 2,\n                is_open: false,\n                is_close: true\n            },\n            '[': {\n                type: 'square',\n                id: 3,\n                is_open: true,\n                is_close: false,\n                maps_to: 'vector'\n            },\n            ']': {\n                type: 'square',\n                id: 4,\n                is_open: false,\n                is_close: true\n            },\n            '{': {\n                type: 'curly',\n                id: 5,\n                is_open: true,\n                is_close: false,\n                maps_to: 'Set'\n            },\n            '}': {\n                type: 'curly',\n                id: 6,\n                is_open: false,\n                is_close: true\n            }\n        };\n        // Supported functions.\n        // Format: function_name: [mapped_function, number_of_parameters]\n        var functions = this.functions = {\n            'cos': [trig.cos, 1],\n            'sin': [trig.sin, 1],\n            'tan': [trig.tan, 1],\n            'sec': [trig.sec, 1],\n            'csc': [trig.csc, 1],\n            'cot': [trig.cot, 1],\n            'acos': [trig.acos, 1],\n            'asin': [trig.asin, 1],\n            'atan': [trig.atan, 1],\n            'arccos': [trig.acos, 1],\n            'arcsin': [trig.asin, 1],\n            'arctan': [trig.atan, 1],\n            'asec': [trig.asec, 1],\n            'acsc': [trig.acsc, 1],\n            'acot': [trig.acot, 1],\n            'atan2': [trig.atan2, 2],\n            'acoth': [trigh.acoth, 1],\n            'asech': [trigh.asech, 1],\n            'acsch': [trigh.acsch, 1],\n            'sinh': [trigh.sinh, 1],\n            'cosh': [trigh.cosh, 1],\n            'tanh': [trigh.tanh, 1],\n            'asinh': [trigh.asinh, 1],\n            'sech': [trigh.sech, 1],\n            'csch': [trigh.csch, 1],\n            'coth': [trigh.coth, 1],\n            'acosh': [trigh.acosh, 1],\n            'atanh': [trigh.atanh, 1],\n            'log10': [, 1],\n            'exp': [exp, 1],\n            'radians': [radians, 1],\n            'degrees': [degrees, 1],\n            'min': [min, -1],\n            'max': [max, -1],\n            'erf': [, 1],\n            'floor': [, 1],\n            'ceil': [, 1],\n            'trunc': [, 1],\n            'Si': [, 1],\n            'step': [, 1],\n            'rect': [, 1],\n            'sinc': [sinc, 1],\n            'tri': [, 1],\n            'sign': [sign, 1],\n            'Ci': [, 1],\n            'Ei': [, 1],\n            'Shi': [, 1],\n            'Chi': [, 1],\n            'Li': [, 1],\n            'fib': [, 1],\n            'fact': [factorial, 1],\n            'factorial': [factorial, 1],\n            'continued_fraction': [continued_fraction, [1, 2]],\n            'dfactorial': [, 1],\n            'gamma_incomplete': [, [1, 2]],\n            'round': [round, [1, 2]],\n            'scientific': [scientific, [1, 2]],\n            'mod': [mod, 2],\n            'pfactor': [pfactor, 1],\n            'vector': [vector, -1],\n            'matrix': [matrix, -1],\n            'Set': [set, -1],\n            'imatrix': [imatrix, -1],\n            'parens': [parens, -1],\n            'sqrt': [sqrt, 1],\n            'nthroot': [nthroot, 2],\n            'log': [log, [1, 2]],\n            'expand': [expand, 1],\n            'abs': [abs, 1],\n            'invert': [invert, 1],\n            'determinant': [determinant, 1],\n            'size': [size, 1],\n            'transpose': [transpose, 1],\n            'dot': [dot, 2],\n            'cross': [cross, 2],\n            'vecget': [vecget, 2],\n            'vecset': [vecset, 3],\n            'vectrim': [vectrim, [1, 2]],\n            'matget': [matget, 3],\n            'matset': [matset, 4],\n            'matgetrow': [matgetrow, 2],\n            'matsetrow': [matsetrow, 3],\n            'matgetcol': [matgetcol, 2],\n            'matsetcol': [matsetcol, 3],\n            'IF': [IF, 3],\n            'is_in': [is_in, 2],\n            //imaginary support\n            'realpart': [realpart, 1],\n            'imagpart': [imagpart, 1],\n            'conjugate': [conjugate, 1],\n            'arg': [arg, 1],\n            'polarform': [polarform, 1],\n            'rectform': [rectform, 1],\n            'sort': [sort, [1, 2]],\n            'integer_part': [, 1],\n            'union': [union, 2],\n            'contains': [contains, 2],\n            'intersection': [intersection, 2],\n            'difference': [difference, 2],\n            'intersects': [intersects, 2],\n            'is_subset': [is_subset, 2],\n            //system support\n            'print': [print, -1]\n        };\n\n        //error handler\n        this.error = err;\n        //this function is used to comb through the function modules and find a function given its name\n        var findFunction = function (fname) {\n            var fmodules = Settings.FUNCTION_MODULES,\n                    l = fmodules.length;\n            for (var i = 0; i < l; i++) {\n                var fmodule = fmodules[i];\n                if (fname in fmodule)\n                    return fmodule[fname];\n            }\n            err('The function ' + fname + ' is undefined!');\n        };\n\n        /**\n         * This method gives the ability to override operators with new methods.\n         * @param {String} which\n         * @param {Function} with_what\n         */\n        this.override = function (which, with_what) {\n            if (!bin[which])\n                bin[which] = [];\n            bin[which].push(this[which]);\n            this[which] = with_what;\n        };\n\n        /**\n         * Restores a previously overridden operator\n         * @param {String} what\n         */\n        this.restore = function (what) {\n            if (this[what])\n                this[what] = bin[what].pop();\n        };\n\n        /**\n         * This method is supposed to behave similarly to the override method but it does not override\n         * the existing function rather it only extends it\n         * @param {String} what\n         * @param {Function} with_what\n         * @param {boolean} force_call\n         */\n        this.extend = function (what, with_what, force_call) {\n            var _ = this,\n                    extended = this[what];\n            if (typeof extended === 'function' && typeof with_what === 'function') {\n                var f = this[what];\n                this[what] = function (a, b) {\n                    if (isSymbol(a) && isSymbol(b) && !force_call)\n                        return f.call(_, a, b);\n                    else\n                        return with_what.call(_, a, b, f);\n                };\n            }\n        };\n\n        /**\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with \n         * a few extras. The most important thing is that that it gives a fname and \n         * an args property to the symbols in addition to changing its group to FN\n         * @param {String} fn_name\n         * @param {Array} params\n         * @returns {Symbol}\n         */\n        this.symfunction = function (fn_name, params) {\n            //call the proper function and return the result;\n            var f = new Symbol(fn_name);\n            f.group = FN;\n            if (typeof params === 'object')\n                params = [].slice.call(params);//ensure an array\n            f.args = params;\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\n            f.updateHash();\n            return f;\n        };\n\n        /**\n         * An internal function call for the Parser. This will either trigger a real \n         * function call if it can do so or just return a symbolic representation of the \n         * function using symfunction.\n         * @param {String} fn_name\n         * @param {Array} args\n         * @param {int} allowed_args\n         * @returns {Symbol}\n         */\n        this.callfunction = function (fn_name, args, allowed_args) {\n            var fn_settings = functions[fn_name];\n\n            if (!fn_settings)\n                err('Nerdamer currently does not support the function ' + fn_name);\n\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\n                    fn = fn_settings[0], //get the mapped function\n                    retval;\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\n            //an array so make sure to wrap the argument in an array.\n            if (!(args instanceof Array))\n                args = args !== undefined ? [args] : [];\n\n            if (num_allowed_args !== -1) {\n                var is_array = isArray(num_allowed_args),\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n                        num_args = args.length;\n\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n\n                if (num_args < min_args)\n                    err(format(error_msg, 'minimum', min_args, num_args));\n                if (num_args > max_args)\n                    err(format(error_msg, 'maximum', max_args, num_args));\n            }\n\n            /*\n             * The following are very important to the how nerdamer constructs functions!\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\n             *     they are expecting a symbolic output.\n             */\n            //check if arguments are all numers\n            var numericArgs = allNumbers(args);\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n            if (Settings.USE_BIG && numericArgs) {\n                retval = Big[fn_name].apply(undefined, args);\n            }\n            else {\n                if (!fn) {\n                    //Remember assumption 1. No function defined so it MUST be numeric in nature\n                    fn = findFunction(fn_name);\n                    if (Settings.PARSE2NUMBER && numericArgs)\n                        retval = bigConvert(fn.apply(fn, args));\n                    else\n                        retval = _.symfunction(fn_name, args);\n                }\n                else {\n                    //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n                    retval = fn.apply(fn_settings[2], args);\n                }\n            }\n\n            return retval;\n        };\n        /**\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when \n         * substituting spaces for multiplication\n         */\n        this.operator_filter_regex = (function () {\n            //we only want the operators which are singular since those are the ones\n            //that nerdamer uses anyway\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\n                if (x.length === 1)\n                    return x;\n            }).join('\\\\');\n            //create a regex which captures all spaces between characters except those\n            //have an operator on one end\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\n        })();\n\n        /**\n         * Replaces nerdamer.setOperator\n         * @param {object} operator\n         * @param {boolean} shift         \n         */\n        this.setOperator = function (operator, action, shift) {\n            var name = operator.operator; //take the name to be the symbol\n            operators[name] = operator;\n            if(action)\n                this[operator.action] = action;\n            //make the parser aware of the operator\n            _[name] = operator.operation;\n            //make the action available to the parser if infix\n            if (!operator.action &&!(operator.prefix || operator.postif)) {\n                operator.action = name;\n            }\n            //if this operator is exclusive then all successive operators should be shifted\n            if (shift === 'over' || shift === 'under') {\n                var precedence = operator.precedence;\n\n                for (var x in operators) {\n                    var o = operators[x];\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\n                    if (condition)\n                        o.precedence++;\n                }\n                ;\n            }\n        };\n        \n        /**\n         * Gets an opererator by its symbol\n         * @param {String} operator\n         * @returns {Object}\n         */\n        this.getOperator = function(operator) {\n            return operators[operator];\n        };\n        \n        this.aliasOperator = function(o, n) {\n            var t = {};\n            var operator = operators[o];\n            //copy everything over to the new operator\n            for(var x in operator) {\n                t[x] = operator[x];\n            }\n            //update the symbol\n            t.operator = n;\n            \n            this.setOperator(t);\n        };\n        \n        /**\n         * Returns the list of operators. Caution! Can break parser!\n         * @returns {object}\n         */\n        this.getOperators = function () {\n            //will replace this with some cloning action in the future\n            return operators;\n        };\n\n        this.getBrackets = function () {\n            return brackets;\n        };\n        /*\n         * Preforms preprocessing on the string. Useful for making early modification before \n         * sending to the parser\n         * @param {String} e\n         */\n        var prepare_expression = function (e) {\n            /*\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for \n             * a side-by-side close and open parenthesis\n             */\n            e = String(e);\n            //apply preprocessors\n            for (var i = 0; i < preprocessors.actions.length; i++)\n                e = preprocessors.actions[i].call(this, e);\n\n            /* //NO LONGER NEEDED SINCE IMPLIED MULTIPLICATION IS NOW HANDLED LATER IN TOKENIZER\n            var match;\n            //add support for spaces between variables\n            while (true) {\n                match = _.operator_filter_regex.exec(e);\n                if (!match)\n                    break;\n                try {\n                    var a = match[1],\n                            b = match[2];\n                    validateName(a);\n                    validateName(b);\n                    e = e.replace(match[0], a + '*' + b);\n                }\n                catch (e) {\n                    break;\n                }\n            }\n            */\n            \n            //e = e.split(' ').join('');//strip empty spaces\n            //replace multiple spaces with one space\n            e = e.replace(/\\s+/g, ' ');\n            \n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\n            if(/e/gi.test(e)) {\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) { \n                    return scientificToDecimal(x);\n                });\n            }\n            //replace scientific numbers\n            \n            //allow omission of multiplication after coefficients\n            e = e.replace(/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi, function () {\n                var str = arguments[4],\n                        group1 = arguments[1],\n                        group2 = arguments[2],\n                        start = arguments[3],\n                        first = str.charAt(start),\n                        before = '',\n                        d = '*';\n                if (!first.match(/[\\+\\-\\/\\*]/))\n                    before = str.charAt(start - 1);\n                if (before.match(/[a-z]/i))\n                    d = '';\n                return group1 + d + group2;\n            })\n            .replace(/([a-z0-9_]+)/gi, function (match, a) {\n                if (Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\n                    if (!isNaN(a))\n                        return a;\n                    return a.split('').join('*');\n                }\n                return a;\n            })\n            //allow omission of multiplication sign between brackets\n            .replace(/\\)\\(/g, ')*(') || '0';\n            //replace x(x+a) with x*(x+a)\n            while (true) {\n                var e_org = e; //store the original\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\n                    var g1 = a || c,\n                            g2 = b || d;\n                    if (g1 in functions) //create a passthrough for functions\n                        return g1 + g2;\n                    return g1 + '*' + g2;\n                });\n                //if the original equals the replace we're done\n                if (e_org === e)\n                    break;\n            }\n            return e;\n        };\n        //delay setting of constants until Settings is ready\n        this.initConstants = function () {\n            this.CONSTANTS = {\n                E: new Symbol(Settings.E),\n                PI: new Symbol(Settings.PI)\n            };\n        };\n        /*\n         * Debugging method used to better visualize vector and arrays\n         * @param {object} o\n         * @returns {String}\n         */\n        this.pretty_print = function (o) {\n            if (Array.isArray(o)) {\n                var s = o.map(x => _.pretty_print(x)).join(', ');\n                if (o.type === 'vector')\n                    return 'vector<' + s + '>';\n                return '(' + s + ')';\n            }\n            return o.toString();\n        };\n        this.peekers = {\n            pre_operator: [],\n            post_operator: [],\n            pre_function: [],\n            post_function: []\n        };\n        \n        this.callPeekers = function(name) {\n            var peekers = this.peekers[name];\n            //remove the first items and stringify\n            var args = arguments2Array(arguments).slice(1).map(stringify);\n            //call each one of the peekers\n            for(var i=0; i<peekers.length; i++) {\n                peekers[i].apply(null, args);\n            }\n        };\n        /*\n         * Tokenizes the string\n         * @param {String} e\n         * @returns {Token[]}\n         */\n        this.tokenize = function (e) {\n            //cast to String\n            e = String(e);\n            //remove multiple white spaces and spaces at beginning and end of string\n            e = e.trim().replace(/\\s+/g, ' ');\n            //remove spaces before and after brackets\n            for (var x in brackets) {\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\n                e = e.replace(regex, x);\n            }\n\n            var col = 0; //the column position\n            var L = e.length; //expression length\n            var lpos = 0; //marks beginning of next token\n            var tokens = []; //the tokens container\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\n            var depth = 0;\n            var open_brackets = [];\n            var has_space = false; //marks if an open space character was found\n            var SPACE = ' ';\n            var EMPTY_STRING = '';\n            var COMMA = ',';\n            var MINUS = '-';\n            var MULT = '*';\n            //Possible source of bug. Review\n            /*\n             //gets the next space\n             var next_space = function(from) {\n             for(var i=from; i<L; i++) {\n             if(e.charAt(i) === ' ')\n             return i;\n             }\n             \n             return L; //assume the end of the string instead\n             };\n             */\n            /**\n             * Adds a scope to tokens\n             * @param {String} scope_type \n             * @param {int} column \n             * @returns {undefined}\n             */\n            var addScope = function (scope_type, column) {\n                var new_scope = []; //create a new scope\n                if (scope_type !== undefined) {\n                    new_scope.type = scope_type;\n                }\n                new_scope.column = column; //mark the column of the scope\n                scopes.push(new_scope); //add it to the list of scopes\n                target.push(new_scope); //add it to the tokens list since now it's a scope\n                target = new_scope; //point to it\n                depth++; //go down one in scope\n            };\n            /**\n             * Goes up in scope by one\n             * @returns {undefined}\n             */\n            var goUp = function () {\n                scopes.pop(); //remove the scope from the scopes stack\n                target = scopes[--depth]; //point the above scope\n            };\n            /**\n             * Extracts all the operators from the expression string starting at postion start_at\n             * @param {int} start_at\n             * @returns {String}\n             */\n            var get_operator_str = function (start_at) {\n                start_at = start_at !== undefined ? start_at : col;\n                //mark the end of the operator as the start since we're just going\n                //to be walking along the string\n                var end = start_at + 1;\n                //just keep moving along\n                while (e.charAt(end++) in operators) {\n                }\n                //remember that we started at one position ahead. The beginning operator is what triggered\n                //this function to be called in the first place. String.CharAt is zero based so we now\n                //have to correct two places. The initial increment + the extra++ at the end of end during\n                //the last iteration.\n                return e.substring(start_at, end - 1);\n            };\n            /**\n             * Breaks operator up in to several different operators as defined in operators\n             * @param {String} operator_str\n             * @returns {String[]}\n             */\n            var chunkify = function (operator_str) {\n                var start = col - operator_str.length; //start of operator\n                var _operators = [];\n                var operator = operator_str.charAt(0);\n                //grab the largest possible chunks but start at 2 since we already know\n                //that the first character is an operator\n\n                for (var i = 1, L = operator_str.length; i < L; i++) {\n                    var ch = operator_str.charAt(i);\n                    var o = operator + ch;\n                    //since the operator now is undefined then the last operator \n                    //was the largest possible combination.\n                    if (!(o in operators)) {\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                        operator = ch;\n                    }\n                    else\n                        operator = o;//now the operator is the larger chunk\n                }\n                //add the last operator\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                return _operators;\n            };\n\n            /**\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\n             * @param {int} at\n             * @param {String} token\n             * @returns {undefined}\n             */\n            var add_token = function (at, token) {\n                //grab the token if we're not supplied one\n                if (token === undefined)\n                    token = e.substring(lpos, at);\n                //only add it if it's not an empty string\n                if (token in _.units)\n                    target.push(new Token(token, Token.UNIT, lpos));\n                else if (token !== '')\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\n            };\n            /**\n             * Adds a function to the output\n             * @param {String} f\n             * @returns {undefined}\n             */\n            var add_function = function (f) {\n                target.push(new Token(f, Token.FUNCTION, lpos));\n            };\n            /**\n             * Tokens are found between operators so this marks the location of where the last token was found\n             * @param {int} position\n             * @returns {undefined}\n             */\n            var set_last_position = function (position) {\n                lpos = position + 1;\n            };\n            /**\n             * When a operator is found and added, especially a combo operator, then the column location\n             * has to be adjusted to the end of the operator\n             * @returns {undefined}\n             */\n            var adjust_column_position = function () {\n                lpos = lpos + operator_str.length - 2;\n                col = lpos - 1;\n            };\n            for (; col < L; col++) {\n                var ch = e.charAt(col);\n                if (ch in operators) {\n                    add_token(col);\n                    //is the last token numeric?\n                    var last_token_is_numeric = target[0] && isNumber(target[0]); \n                    //is this character multiplication?\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\n                    //if we're in a new scope then go up by one but if the space \n                    //is right befor an operator then it makes no sense to go up in scope\n                    //consider sin -x. The last position = current position at the minus sign\n                    //this means that we're going for sin(x) -x which is wrong\n                    //Ignore comma since comma is still part of the existing scope.\n                    if (has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\n                        has_space = false;\n                        goUp();\n                    }\n                    //mark the last position that a \n                    set_last_position(col + 1);\n                    var operator_str = get_operator_str(col);\n\n                    adjust_column_position();\n                    target.push.apply(target, chunkify(operator_str));\n                }\n                else if (ch in brackets) {\n                    var bracket = brackets[ch];\n\n                    if (bracket.is_open) {\n                        //mark the bracket\n                        open_brackets.push([bracket, lpos]);\n                        var f = e.substring(lpos, col);\n                        if (f in functions) {\n                            add_function(f);\n                        }\n                        else if (f !== '') {\n                            //assume multiplication\n                            //TODO: Add the multiplication to stack\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\n                        }\n                        //go down one in scope\n                        addScope(bracket.maps_to, col);\n                    }\n                    else if (bracket.is_close) {\n                        //get the matching bracket\n                        var pair = open_brackets.pop();\n                        //throw errors accordingly\n                        //missing open bracket\n                        if (!pair)\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\n                        //incorrect pair\n                        else if (pair[0].id !== bracket.id - 1)\n                            throw new ParityError('Parity error');\n\n                        add_token(col);\n                        goUp();\n                    }\n                    set_last_position(col);\n                }\n                else if (ch === SPACE) {\n                    var prev = e.substring(lpos, col); //look back\n                    var nxt = e.charAt(col+1); //look forward\n                    if (has_space) {\n\n                        if (prev in operators) {\n                            target.push(new Token(prev, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, prev);\n                            //we're at the closing space\n                            goUp(); //go up in scope if we're at a space\n                            \n                            //assume multiplication if it's not an operator except for minus\n                            var is_operator = nxt in operators;\n\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator)\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                        }\n                        has_space = false; //remove the space\n                    }\n                    else {\n                        //we're at the closing space\n                        //check if it's a function\n                        var f = e.substring(lpos, col);\n\n                        if (f in functions) {\n                            //there's no need to go up in scope if the next character is an operator\n                            has_space = true; //mark that a space was found\n                            add_function(f);\n                            addScope();\n                        }\n                        else if (f in operators) {\n                            target.push(new Token(f, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, f);\n                            //peek ahead to the next character\n                            var nxt = e.charAt(col+1);\n\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\n                            //is not an operator\n                            \n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                        }\n                        //Possible source of bug. Review\n                        /*\n                         //space can mean multiplication so add the symbol if the is encountered\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\n                         var next = e.charAt(col+1);\n                         var next_is_operator = next in operators;\n                         var ns = next_space(col+1);\n                         var next_word = e.substring(col+1, ns);\n                         //the next can either be a prefix operator or no operator\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\n                         target.push(new Token('*', Token.OPERATOR, col));\n                         }\n                         */\n                    }\n                    set_last_position(col); //mark this location    \n                }\n            }\n            //check that all brackets were closed\n            if (open_brackets.length) {\n                var b = open_brackets.pop();\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\n            }\n            //add the last token\n            add_token(col);\n\n            return tokens;\n        };\n        /*\n         * Puts token array in Reverse Polish Notation\n         * @param {Token[]} tokens\n         * @returns {Token[]}\n         */\n        this.toRPN = function (tokens) {\n            var fn = tokens.type;\n            var l = tokens.length, i;\n            var output = [];\n            var stack = [];\n            var prefixes = [];\n            var collapse = function (target, destination) {\n                while (target.length)\n                    destination.push(target.pop());\n            };\n            //mark all the prefixes and add them to the stack\n            for (i = 0; i < l; i++) {\n                var token = tokens[i];\n                if (token.type !== Token.OPERATOR)\n                    break;\n                if (!token.prefix)\n                    throw new OperatorError('Not a prefix operator');\n                token.is_prefix = true;\n                stack.push(token);\n            }\n            //begin with remaining tokens\n            for (; i < l; i++) {\n                var e = tokens[i];\n                if (e.type === Token.OPERATOR) {\n                    var operator = e;\n\t\t    \n\t\t    //create the option for the operator being overloaded\n                    if (operator.overloaded) {\n                        var next = tokens[i + 1];\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\n                        if (next && next.type === Token.VARIABLE_OR_LITERAL) {\n                            operator.postfix = false;\n                            //override the original function with the overload function\n                            operator.action = operator.overloadAction;\n\t\t\t    operator.leftAssoc = operator.overloadLeftAssoc;\n                        }\n                    }\n\t\t\t\n                    //if the stack is not empty\n                    while (stack.length) {\n                        var last = stack[stack.length - 1];\n                        //if (there is an operator at the top of the operator stack with greater precedence)\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\n                        if (!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\n                            break;\n                        output.push(stack.pop());\n                    }\n                    \n                    //change the behavior of the operator if it's a vector and we've been asked to do so\n                    if ((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\n                        operator.action = operator.vectorFn;\n\n\n                    //if the operator is a postfix operator then we're ready to go since it belongs\n                    //to the preceding token. However the output cannot be empty. It must have either\n                    //an operator or a variable/literal\n                    if (operator.postfix) {\n                        var previous = tokens[i - 1];\n                        if (!previous)\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\n                        else if (previous.type === Token.OPERATOR) {\n                            //a postfix can only be followed by a postfix\n                            if (!previous.postfix)\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\n                        }\n                    }\n                    else {\n                        //we must be at an infix so point the operator this\n                        do {\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\n                            var next = tokens[i + 1]; //take a look ahead\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\n                            if (next_is_operator) {\n                                //if it's not a prefix operator then it not in the right place\n                                if (!next.prefix) {\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\n                                }\n                                //mark it as a confirmed prefix\n                                next.is_prefix = true;\n                                //add it to the prefixes\n                                prefixes.push(next);\n                                i++;\n                            }\n                        }\n                        while (next_is_operator)\n                    }\n\n                    //if it's a prefix it should be on a special stack called prefixes\n                    //we do this to hold on to prefixes because of left associative operators.\n                    //they belong to the variable/literal but if placed on either the stack\n                    //or output there's no way of knowing this. I might be wrong so I welcome \n                    //any discussion about this.\n\n                    if (operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\n                        prefixes.push(operator);\n                    else\n                        stack.push(operator);\n                    //move the prefixes to the stack\n                    while (prefixes.length) {\n                        if (operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\n                            stack.push(prefixes.pop());\n                        else\n                            break;\n                    }\n                }\n                else if (e.type === Token.VARIABLE_OR_LITERAL) {\n                    //move prefixes to stack at beginning of scope\n                    if (output.length === 0)\n                        collapse(prefixes, stack);\n                    //done with token\n                    output.push(e);\n                    var last_on_stack = stack[stack.length - 1];\n                    //then move all the prefixes to the output\n                    if (!last_on_stack || !last_on_stack.leftAssoc)\n                        collapse(prefixes, output);\n                }\n                else if (e.type === Token.FUNCTION) {\n                    stack.push(e);\n                }\n                else if (e.type === Token.UNIT) {\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\n                    output.push(e);\n                }\n                //if it's an additonal scope then put that into RPN form\n                if (Array.isArray(e)) {\n                    output.push(this.toRPN(e));\n                    if (e.type)\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\n\n                }\n            }\n            //collapse the remainder of the stack and prefixes to output\n            collapse(stack, output);\n            collapse(prefixes, output);\n\n            return output;\n        };\n        /*\n         * Parses the tokens  \n         * @param {Tokens[]} rpn\n         * @param {object} substitutions\n         * @returns {Symbol}\n         */\n        this.parseRPN = function (rpn, substitutions) {\n            try {\n                //default substitutions\n                substitutions = substitutions || {};\n                //prepare the substitutions.\n                //we first parse them out as-is\n                for (var x in substitutions)\n                    substitutions[x] = _.parse(substitutions[x], {});\n                //Although technically constants,\n                //pi and e are only available when evaluating the expression so add to the subs.\n                //Doing this avoids rounding errors \n                //link e and pi\n                if (Settings.PARSE2NUMBER) {\n                    //use the value provided if the individual for some strange reason prefers this.\n                    //one reason could be to sub e but not pi or vice versa\n                    if (!('e' in substitutions))\n                        substitutions.e = new Symbol(Settings.E);\n                    if ((!('pi' in substitutions)))\n                        substitutions.pi = new Symbol(Settings.PI);\n                }\n\n                var Q = [];\n                for (var i = 0, l = rpn.length; i < l; i++) {\n                    var e = rpn[i]; \n\n                    //Arrays indicate a new scope so parse that out\n                    if (Array.isArray(e)) {\n                        e = this.parseRPN(e, substitutions);\n                    }\n\n                    if(e) {\n                        if (e.type === Token.OPERATOR) {\n                            if (e.is_prefix || e.postfix)\n                                //resolve the operation assocated with the prefix\n                                Q.push(e.operation(Q.pop()));\n                            else {\n                                var b = Q.pop();\n                                var a = Q.pop();\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\n                                if (typeof a === 'undefined')\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\n\n                                var is_comma = e.action === 'comma';\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\n                                if(a instanceof Set && !is_comma)\n                                    a = Vector.fromSet(a);\n\n                                if(b instanceof Set && !is_comma)\n                                    b = Vector.fromSet(b);\n\n                                //call all the pre-operators \n                                this.callPeekers('pre_operator', a, b, e);\n                                \n                                var ans = _[e.action](a, b);\n                                \n                                //call all the pre-operators\n                                this.callPeekers('post_operator', ans, a, b, e);\n                                \n                                Q.push(ans);\n                            }\n                        }\n                        else if (e.type === Token.FUNCTION) {\n                            var args = Q.pop();\n                            var parent = args.parent; //make a note of the parent\n                            if (!(args instanceof Collection))\n                                args = Collection.create(args);\n                            //the return value may be a vector. If it is then we check\n                            //Q to see if there's another vector on the stack. If it is then\n                            //we check if has elements. If it does then we know that we're dealing\n                            //with an \"getter\" object and return the requested values\n\n                            //call the function. This is the _.callfunction method in nerdamer\n                            //call the function. This is the _.callfunction method in nerdamer\n                            var fn_name = e.value;\n                            var fn_args = args.getItems();\n                            \n                            //call the pre-function peekers\n                            this.callPeekers('pre_function', fn_name, fn_args);\n                            \n                            var ret = _.callfunction(fn_name, fn_args);                             \n                            \n                            //call the post-function peekers\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\n                            \n                            var last = Q[Q.length - 1];\n                            var next = rpn[i + 1];\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\n\n                            if (!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\n                                //remove the item from the queue\n                                var item = Q.pop();\n\n                                var getter = ret.elements[0];\n                                //check if it's symbolic. If so put it back and add the item to the stack\n                                if (!getter.isConstant()) {\n                                    item.getter = getter;\n                                    Q.push(item);\n                                    Q.push(ret);\n                                }\n                                else if (getter instanceof Slice) {\n                                    //if it's a Slice return the slice\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\n                                }\n                                else {\n                                    var index = Number(getter);\n                                    var il = item.elements.length;\n                                    //support for negative indices\n                                    if (index < 0)\n                                        index = il + index;\n                                    //it it's still out of bounds\n                                    if (index < 0 || index >= il) //index should no longer be negative since it's been reset above\n                                        //range error\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\n                                    \n                                    var element = item.elements[index];\n                                    //cyclic but we need to mark this for future reference\n                                    item.getter = index;\n                                    element.parent = item; \n                                    \n                                    Q.push(element);\n                                }\n                            }\n                            else {\n                                //extend the parent reference\n                                if(parent)\n                                    ret.parent = parent;\n                                Q.push(ret);\n                            }\n\n                        }\n                        else {\n                            var subbed;\n                            var v = e.value;\n\n                            if (v in Settings.ALIASES)\n                                e = _.parse(Settings.ALIASES[e]);\n                            //wrap it in a symbol if need be\n                            else if (e.type === Token.VARIABLE_OR_LITERAL)\n                                e = new Symbol(v);\n                            else if (e.type === Token.UNIT) {\n                                e = new Symbol(v);\n                                e.isUnit = true;\n                            }\n\n                            //make substitutions\n                            //Always constants first. This avoids the being overridden\n                            if (v in _.CONSTANTS) {\n                                subbed = e;\n                                e = new Symbol(_.CONSTANTS[v]);\n                            }\n                            //next substitutions. This allows declared variable to be overridden\n                            //check if the values match to avoid erasing the multiplier. \n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\n                            else if (v in substitutions && v !== substitutions[v].value) {\n                                subbed = e;\n                                e = substitutions[v].clone();\n                            }\n                            //next declare variables\n                            else if (v in VARS) {\n                                subbed = e;\n                                e = VARS[v].clone();\n                            }\n                            //make notation of what it was before\n                            if (subbed)\n                                e.subbed = subbed;\n\n                            Q.push(e);\n                        }\n                    }\n                }\n\n                return Q[0];\n            }\n            catch(error) {\n                throw new ParseError(error.message+': '+e.column);\n            }\n        };\n        /**\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes \n         * it right away. The operator functions are called when their respective operators are reached. For instance\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each \n         * character of the string and placing the operators on the stack and values on the output. When an operator\n         * having a lower order than the last is reached then the stack is processed from the last operator on the \n         * stack.\n         * @param {String} token\n         */\n\n        function Node(token) {\n            this.type = token.type;\n            this.value = token.value;\n            //the incoming token may already be a Node type\n            this.left = token.left;\n            this.right = token.right;\n        }\n\n        Node.prototype.toString = function () {\n            var left = this.left ? this.left.toString() + '---' : '';\n            var right = this.right ? '---' + this.right.toString() : '';\n            return left + '(' + this.value + ')' + right;\n        };\n\n        Node.prototype.toHTML = function (depth, indent) {\n            depth = depth || 0;\n            indent = typeof indent === 'undefined' ? 4 : indent;\n            var tab = function (n) {\n                return ' '.repeat(indent * n);\n            };\n            var html = '';\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\n            if (left || right) {\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\n            }\n            html += '';\n            return html;\n        };\n\n        this.tree = function (tokens) {\n            var Q = [];\n            for (var i = 0; i < tokens.length; i++) {\n                var e = tokens[i];\n                //Arrays indicate a new scope so parse that out\n                if (Array.isArray(e)) {\n                    e = this.tree(e);\n                    //if it's a comma then it's just arguments\n                    Q.push(e);\n                    continue;\n                }\n                if (e.type === Token.OPERATOR) {\n                    if (e.is_prefix || e.postfix) {\n                        //prefixes go to the left, postfix to the right\n                        var location = e.is_prefix ? 'left' : 'right';\n                        var last = Q.pop();\n                        e = new Node(e);\n                        e[location] = last;\n                        Q.push(e);\n                    }\n                    else {\n                        e = new Node(e);\n                        e.right = Q.pop();\n                        e.left = Q.pop();\n                        Q.push(e);\n                    }\n                }\n                else if (e.type === Token.FUNCTION) {\n                    e = new Node(e);\n                    var args = Q.pop();\n                    e.right = args;\n                    if (e.value === 'object') {\n                        //check if Q has a value\n                        var last = Q[Q.length - 1];\n                        if (last) {\n                            while (last.right) {\n                                last = last.right;\n                            }\n                            last.right = e;\n                            continue;\n                        }\n                    }\n\n                    Q.push(e);\n                }\n                else {\n                    Q.push(new Node(e));\n                }\n            }\n\n            return Q[0];\n        };\n        this.parse = function (e, substitutions) {\n            e = prepare_expression(e);\n            substitutions = substitutions || {};\n            //three passes but easier to debug\n            var tokens = this.tokenize(e);\n            var rpn = this.toRPN(tokens);\n            return this.parseRPN(rpn, substitutions);\n        };\n        /**\n         * TODO: Switch to Parser.tokenize for this method\n         * Reads a string into an array of Symbols and operators\n         * @param {String} expression_string\n         * @returns {Array}\n         */\n        this.toObject = function (expression_string) {\n            var objectify = function (tokens) {\n                var output = [];\n                for (var i = 0, l = tokens.length; i < l; i++) {\n                    var token = tokens[i];\n                    var v = token.value;\n                    if (token.type === Token.VARIABLE_OR_LITERAL) {\n                        output.push(new Symbol(v));\n                    }\n                    else if (token.type === Token.FUNCTION) {\n                        //jump ahead since the next object are the arguments\n                        i++;\n                        //create a symbolic function and stick it on output\n                        var f = _.symfunction(v, objectify(tokens[i]));\n                        f.isConversion = true;\n                        output.push(f);\n                    }\n                    else if (token.type === Token.OPERATOR) {\n                        output.push(v);\n                    }\n                    else {\n                        output.push(objectify(token));\n                    }\n                }\n\n                return output;\n            };\n            return objectify(_.tokenize(expression_string));\n        };\n        //helper method for toTeX\n        var chunkAtCommas = function (arr) {\n            var j, k = 0, chunks = [[]];\n            for (var j = 0, l = arr.length; j < l; j++) {\n                if (arr[j] === ',') {\n                    k++;\n                    chunks[k] = [];\n                }\n                else {\n                    chunks[k].push(arr[j]);\n                }\n            }\n            return chunks;\n        };\n        //helper method for toTeX\n        var rem_brackets = function (str) {\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n                if (a)\n                    return a;\n                return str;\n            });\n        };\n        /*\n         * Convert expression or object to LaTeX\n         * @param {String} expression_or_obj\n         * @param {object} opt\n         * @returns {String}\n         */\n        this.toTeX = function (expression_or_obj, opt) {\n            opt = opt || {};\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n                    TeX = [],\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n\n            if (isArray(obj)) {\n                var nobj = [], a, b;\n                //first handle ^\n                for (var i = 0; i < obj.length; i++) {\n                    a = obj[i];\n\n                    if (obj[i + 1] === '^') {\n                        b = obj[i + 2];\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\n                        i += 2;\n                    }\n                    else\n                        nobj.push(a);\n                }\n                obj = nobj;\n            }\n\n            for (var i = 0, l = obj.length; i < l; i++) {\n                var e = obj[i];\n                //convert * to cdot\n                if (e === '*') {\n                    e = cdot;\n                }\n\n                if (isSymbol(e)) {\n                    if (e.group === FN) {\n                        var fname = e.fname, f;\n\n                        if (fname === SQRT)\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\n                        else if (fname === ABS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\n                        else if (fname === PARENTHESIS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        else if (fname === Settings.LOG10) {\n                            f = '\\\\'+Settings.LOG10_LATEX+'\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n                        }\n                        else if (fname === 'integrate') {\n                            /* Retrive [Expression, x] */\n                            var chunks = chunkAtCommas(e.args);\n                            /* Build TeX */\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[1]);\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\n                        }\n                        else if (fname === 'defint') {\n                            var chunks = chunkAtCommas(e.args),\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[3]),\n                                    lb = this.toTeX(chunks[1]),\n                                    ub = this.toTeX(chunks[2]);\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\n\n                        }\n                        else if (fname === 'diff') {\n                            var chunks = chunkAtCommas(e.args);\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n                            if (chunks.length === 1) {\n                                var vars = [];\n                                for (j = 0; j < chunks[0].length; j++) {\n                                    if (chunks[0][j].group === 3) {\n                                        vars.push(chunks[0][j].value);\n                                    }\n                                }\n                                vars.sort();\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\n                            }\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\n                            else if (chunks.length === 2) {\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\n                            }\n                            /* If we have more than 2 arguments, we assume we've got everything */\n                            else {\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\n                            }\n\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\n\n                        }\n                        else if (fname === 'sum' || fname === 'product') {\n                            // Split e.args into 4 parts based on locations of , symbols.\n                            var argSplit = [[], [], [], []], j = 0, i;\n                            for (i = 0; i < e.args.length; i++) {\n                                if (e.args[i] === ',') {\n                                    j++;\n                                    continue;\n                                }\n                                argSplit[j].push(e.args[i]);\n                            }\n                            // Then build TeX string.\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\n                        }\n                        else if (fname === 'limit') {\n                            var args = chunkAtCommas(e.args).map(function (x) {\n                                if (Array.isArray(x))\n                                    return _.toTeX(x.join(''));\n                                return _.toTeX(String(x));\n                            });\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\n                        }\n                        else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL)\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\n                        else {\n                            f = LaTeX.latex(e);\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        }\n\n                        TeX.push(f);\n                    }\n                    else\n                        TeX.push(LaTeX.latex(e));\n                }\n                else if (isArray(e)) {\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\n                }\n                else {\n                    if (e === '/')\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\n                    else\n                        TeX.push(e);\n                }\n            }\n\n            return TeX.join(' ');\n        };\n\n//Parser.functions ==============================================================\n        /* Although parens is not a \"real\" function it is important in some cases when the \n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\n         * as the parser will get rid of it at the first opportunity\n         */\n        function parens(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                return symbol;\n            }\n            return _.symfunction('parens', [symbol]);\n        }\n\n        function abs(symbol) {\n            if (symbol.multiplier.lessThan(0))\n                symbol.multiplier.negate();\n            if (symbol.isImaginary()) {\n                var re = symbol.realpart();\n                var im = symbol.imagpart();\n                if (re.isConstant() && im.isConstant())\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\n            }\n            else if (isNumericSymbol(symbol) || even(symbol.power)) {\n                return symbol;\n            }\n            if (symbol.isComposite()) {\n                var ms = [];\n                symbol.each(function (x) {\n                    ms.push(x.multiplier);\n                });\n                var gcd = Math2.QGCD.apply(null, ms);\n                if (gcd.lessThan(0)) {\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\n                    symbol.distributeMultiplier();\n                }\n            }\n            return _.symfunction(ABS, [symbol]);\n        }\n        /**\n         * The factorial function\n         * @param {Symbol} symbol\n         * @return {Symbol}\n         */\n        function factorial(symbol) {\n            var retval;\n            if (isVector(symbol)) {\n                var V = new Vector();\n                symbol.each(function (x, i) {\n                    //i start at one.\n                    V.set(i - 1, factorial(x));\n                });\n                return V;\n            }\n            if (isMatrix(symbol)) {\n                var M = new Matrix();\n                symbol.each(function (x, i, j) {\n                    //i start at one.\n                    M.set(i, j, factorial(x));\n                });\n                return M;\n            }\n            if (Settings.PARSE2NUMBER && symbol.isConstant()) {\n                if (isInt(symbol)) {\n                    retval = Math2.bigfactorial(symbol);\n                }\n                else {\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\n                }\n\n                retval = bigConvert(retval);\n                return retval;\n            }\n            else if (symbol.isConstant()) {\n                var den = symbol.getDenom();\n                if (den.equals(2)) {\n                    var num = symbol.getNum();\n                    var a, b, c, n;\n\n                    if (!symbol.multiplier.isNegative()) {\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                    }\n                    else {\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\n                    }\n                    c = a.divide(b);\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\n                }\n            }\n            return _.symfunction(FACTORIAL, [symbol]);\n        }\n        ;\n        /**\n         * Returns the continued fraction of a number\n         * @param {Symbol} symbol\n         * @param {Symbol} n\n         * @returns {Symbol}\n         */\n        function continued_fraction(symbol, n) {\n            var _symbol = evaluate(symbol);\n            if (_symbol.isConstant()) {\n                var cf = Math2.continuedFraction(_symbol, n);\n                //convert the fractions array to a new Vector\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\n                    return new Symbol(x);\n                }));\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\n            }\n            return _.symfunction('continued_fraction', arguments);\n        }\n        ;\n        /**\n         * The mod function\n         * @param {Symbol} symbol1\n         * @param {Symbol} symbol2\n         * @returns {Symbol}\n         */\n        function mod(symbol1, symbol2) {\n            if (symbol1.isConstant() && symbol2.isConstant()) {\n                var retval = new Symbol(1);\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\n                return retval;\n            }\n            //try to see if division has remainder of zero\n            var r = _.divide(symbol1.clone(), symbol2.clone());\n            if (isInt(r))\n                return new Symbol(0);\n            return _.symfunction('mod', [symbol1, symbol2]);\n        }\n        /**\n         * A branghing function\n         * @param {Boolean} condition\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        function IF(condition, a, b) {\n            if (typeof condition !== 'boolean')\n                if (isNumericSymbol(condition))\n                    condition = !!Number(condition);\n            if (condition)\n                return a;\n            return b;\n        }\n        /**\n         * \n         * @param {Matrix|Vector|Set|Collection} obj\n         * @param {Symbol} item\n         * @returns {Boolean}\n         */\n        function is_in(obj, item) {\n            if(isMatrix(obj)) {\n                for(var i=0, l=obj.rows(); i<l; i++) {\n                    for(var j=0, l2=obj.cols(); j<l2; j++) {\n                        var element = obj.elements[i][j];\n                        if(element.equals(item))\n                            return new Symbol(1);\n                    }\n                }\n            }\n            else if(obj.elements) {\n                for(var i=0, l=obj.elements.length; i<l; i++) {\n                    if(obj.elements[i].equals(item))\n                        return new Symbol(1);\n                }\n            }\n            \n            return new Symbol(0);\n        }\n        \n        /**\n         * A symbolic extension for sinc\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sinc(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant()) {\n                    return new Symbol(Math2.sinc(symbol));\n                }\n                return _.parse(format('sin({0})/({0})', symbol));\n            }\n            return _.symfunction('sinc', [symbol]);\n        }\n\n        /**\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\n         * Thanks @ Happypig375\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function exp(symbol) {\n            return _.parse(format('e^({0})', symbol));\n        }\n        \n        /**\n         * Converts value degrees to radians\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function radians(symbol) {\n            return _.parse(format('({0})*pi/180', symbol));\n        }\n        \n        /**\n         * Converts value from radians to degrees\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function degrees(symbol) {\n            return _.parse(format('({0})*180/pi', symbol));\n        }\n        \n        function nroots(symbol) {\n            var a, b;\n            if(symbol.group === FN && symbol.fname === '') {\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n                b = _.parse(symbol.power);\n            }\n            else if(symbol.group === P) {\n                a = _.parse(symbol.value);\n                b = _.parse(symbol.power);\n            }\n            \n            if(a && b && a.group === N && b.group === N) {\n                var _roots = [];\n                var parts = Symbol.toPolarFormArray(symbol);\n                var r = _.parse(a).abs().toString();\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n                var x = arg(a).toString();\n                var n = b.multiplier.den.toString();\n                var p = b.multiplier.num.toString();\n                \n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\n                for(var i=0; i<n; i++) {\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n                }\n                return Vector.fromArray(_roots);\n            }\n            else if(symbol.isConstant(true)) {\n                var sign = symbol.sign();\n                var x = evaluate(symbol.abs());\n                var root = _.sqrt(x);\n                \n                var _roots = [root.clone(), root.negate()];\n                \n                if(sign < 0)\n                    _roots = _roots.map(function(x) {\n                        return _.multiply(x, Symbol.imaginary());\n                    });\n            }\n            else {\n                _roots = [_.parse(symbol)];\n            }\n            \n            return Vector.fromArray(_roots);\n        }\n        \n        /**\n         * The square root function\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sqrt(symbol) {\n            if (symbol.fname === '' && symbol.power.equals(1))\n                symbol = symbol.args[0];\n\n            var is_negative = symbol.multiplier.sign() < 0;\n\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant() && !is_negative) {\n                    return new Symbol(Math.sqrt(symbol.multiplier.toDecimal()));\n                }\n                else if (symbol.isImaginary()) {\n                    return complex.sqrt(symbol);\n                }\n            }\n\n            var img, retval,\n                    isConstant = symbol.isConstant();\n\n            if (symbol.group === CB && symbol.isLinear()) {\n                var m = sqrt(Symbol(symbol.multiplier));\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    m = _.multiply(m, sqrt(x));\n                }\n\n                retval = m;\n            }\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\n            else if (symbol.fname === SQRT) {\n                var s = symbol.args[0];\n                var ms = symbol.multiplier;\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\n                retval = s;\n                //grab the multiplier\n                if (!ms.equals(1))\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\n            }\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\n            //no need to keep sqrt(x^(1/3))\n            else if (!symbol.power.isInteger()) {\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\n                retval = symbol;\n            }\n            else {\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\n                //to sqrt(a)*sqrt(b)^1 for better simplification\n                //the sign of the power\n                var sign = symbol.power.sign();\n                //remove the sign\n                symbol.power = symbol.power.abs();\n\n                //if the symbols is imagary then we place in the imaginary part. We'll return it \n                //as a product\n                if (isConstant && symbol.multiplier.lessThan(0)) {\n                    img = Symbol.imaginary();\n                    symbol.multiplier = symbol.multiplier.abs();\n                }\n\n                var q = symbol.multiplier.toDecimal(),\n                        qa = Math.abs(q),\n                        t = Math.sqrt(qa);\n\n                var m;\n                //it's a perfect square so take the square\n                if (isInt(t)) {\n                    m = new Symbol(t);\n                }\n                else if (isInt(q)) {\n                    var factors = Math2.ifactor(q);\n                    var tw = 1;\n                    for (var x in factors) {\n                        var n = factors[x],\n                                nn = (n - (n % 2)); //get out the whole numbers\n                        if (nn) { //if there is a whole number ...\n                            var w = Math.pow(x, nn);\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\n                            q /= w; //reduce the number by the wholes\n                        }\n                    }\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\n                }\n                else {\n                    //reduce the numerator and denominator using prime factorization\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\n                    var r = [new Symbol(1), new Symbol(1)];\n                    var sq = [new Symbol(1), new Symbol(1)];\n                    for (var i = 0; i < 2; i++) {\n                        var n = c[i];\n                        //get the prime factors and loop through each. \n                        pfactor(n).each(function (x) {\n                            x = Symbol.unwrapPARENS(x);\n                            var b = x.clone().toLinear();\n                            var p = Number(x.power);\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\n                        });\n                    }\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\n                }\n\n\n                //strip the multiplier since we already took the sqrt\n                symbol = symbol.toUnitMultiplier(true);\n                //if the symbol is one just return one and not the sqrt function\n                if (symbol.isOne()) {\n                    retval = symbol;\n                }\n                else if (even(symbol.power.toString())) {\n                    //just raise it to the 1/2\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\n                }\n                else {\n                    retval = _.symfunction(SQRT, [symbol]);\n                }\n\n                //put back the sign that was removed earlier\n                if (sign < 0)\n                    retval.power.negate();\n\n                if (m)\n                    retval = _.multiply(m, retval);\n\n                if (img)\n                    retval = _.multiply(img, retval);\n            }\n\n            if (is_negative && Settings.PARSE2NUMBER)\n                return _.parse(retval);\n            return retval;\n        }\n        \n        function scientific(symbol, sigfigs) {\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to \n            //display this\n            symbol.scientific = sigfigs || 10;\n            return symbol;\n        }\n\n        /**\n         * \n         * @param {Symbol} num - the number being raised\n         * @param {Symbol} p - the exponent\n         * @param {type} prec - the precision wanted\n         * @param {bool} asbig - true if a bigDecimal is wanted\n         * @returns {Symbol}\n         */\n        //TODO: this method needs serious optimization\n        function nthroot(num, p, prec, asbig) {\n            if (typeof asbig === 'undefined')\n                asbig = true;\n            prec = prec || 25;\n            if (!isSymbol(p))\n                p = _.parse(p);\n            if (isInt(num) && p.isConstant()) {\n                var sign = num.sign(),\n                        x;\n                num = abs(num); //remove the sign\n                var idx = num + '-' + p;\n                if (idx in Settings.CACHE.roots) {\n                    x = new bigInt(Settings.CACHE.roots[idx]);\n                    if (!even(p))\n                        x = x.multiply(sign);\n                }\n                else {\n                    if (num < 18446744073709551616) //2^64\n                        x = Frac.create(Math.pow(num, 1 / p));\n                    else\n                        x = Math2.nthroot(num, p);\n                }\n                if (isInt(x) || Settings.PARSE2NUMBER) {\n                    if (asbig)\n                        return new Symbol(x);\n                    return new Symbol(x.toDecimal(prec));\n                }\n            }\n\n            if (Number(p) === 2)\n                return _.sqrt(num);\n\n            return _.symfunction('nthroot', arguments);\n        }\n\n        function pfactor(symbol) {\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n            //More Big Number issues >:(\n            if (symbol.greaterThan(9.999999999998891e+41))\n                return symbol;\n            //Fix issue #298\n            if (symbol.equals(Math.PI))\n                return new Symbol(Math.PI);\n            //evaluate the symbol to merge constants\n            symbol = evaluate(symbol.clone());\n\n\n            if (symbol.isConstant()) {\n                var retval = new Symbol(1);\n                var m = symbol.toString();\n                if (isInt(m)) {\n                    var factors = Math2.ifactor(m);\n                    for (var factor in factors) {\n                        var p = factors[factor];\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\n                    }\n                }\n                else {\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\n                }\n            }\n            else\n                retval = _.symfunction('pfactor', arguments);\n            return retval;\n        }\n\n        /**\n         * Get's the real part of a complex number. Return number if real\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function realpart(symbol) {\n            return symbol.realpart();\n        }\n\n        /**\n         * Get's the imaginary part of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function imagpart(symbol) {\n            return symbol.imagpart();\n        }\n\n        /**\n         * Computes the conjugate of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function conjugate(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant())\n                return new Symbol(Math.atan2(im, re));\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant()) {\n                if(im.equals(0) && re.equals(-1)) {\n                    return _.parse('pi');\n                }\n                else if(im.equals(1) && re.equals(0)) {\n                    return _.parse('pi/2');\n                }\n                else if(im.equals(1) && re.equals(1)) {\n                    return _.parse('pi/4');\n                }\n                return new Symbol(Math.atan2(im, re));\n            }\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the polarform of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function polarform(symbol) {\n            var p, r, e, theta;\n            p = Symbol.toPolarFormArray(symbol);\n            theta = p[1];\n            r = p[0];\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\n            return _.multiply(r, e);\n        }\n\n        /**\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function rectform(symbol) {\n            //TODO: e^((i*pi)/4)\n            var original = symbol.clone();\n            try {\n                var f, p, q, s, h, d, n;\n                f = decompose_fn(symbol, 'e', true);\n                p = _.divide(f.x.power, Symbol.imaginary());\n                q = evaluate(trig.tan(p));\n                s = _.pow(f.a, new Symbol(2));\n                d = q.getDenom(true);\n                n = q.getNum();\n                h = Symbol.hyp(n, d);\n                //check \n                if (h.equals(f.a)) {\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\n                }\n                else {\n                    return original;\n                }\n            }\n            catch (e) {\n                return original;\n            }\n        }\n\n        function symMinMax(f, args) {\n            args.map(function (x) {\n                x.numVal = evaluate(x).multiplier;\n            });\n            var l, a, b, a_val, b_val;\n            while (true) {\n                l = args.length;\n                if (l < 2)\n                    return args[0];\n                a = args.pop();\n                b = args[l - 2];\n                if (f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\n                    args.pop();\n                    args.push(a);\n                }\n            }\n        }\n\n        /**\n         * Returns maximum of a set of numbers\n         * @returns {Symbol}\n         */\n        function max() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.max.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('max', args);\n            return _.symfunction('max', args);\n        }\n\n        /**\n         * Returns minimum of a set of numbers\n         * @returns {Symbol}\n         */\n        function min() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.min.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('min', args);\n            return _.symfunction('min', args);\n        }\n\n        /**\n         * Returns the sign of a number\n         * @param {Symbol} x\n         * @returns {Symbol}\n         */\n        function sign(x) {\n            if (x.isConstant(true))\n                return new Symbol(Math.sign(evaluate(x)));\n            return _.symfunction('sign', arguments);\n        }\n\n        function sort(symbol, opt) {\n            opt = opt ? opt.toString() : 'asc';\n            var getval = function (e) {\n                if (e.group === N)\n                    return e.multiplier;\n                if (e.group === FN) {\n                    if (e.fname === '')\n                        return getval(e.args[0]);\n                    return e.fname;\n                }\n                if (e.group === S)\n                    return e.power;\n\n                return e.value;\n            };\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\n            return new Vector(symbols.sort(function (a, b) {\n                var aval = getval(a),\n                        bval = getval(b);\n                if (opt === 'desc')\n                    return bval - aval;\n                return aval - bval;\n            }));\n        }\n\n        /**\n         * The log function\n         * @param {Symbol} symbol\n         * @param {Symbol} base\n         * @returns {Symbol}\n         */\n        function log(symbol, base) {\n            if(symbol.equals(1)) {\n                return new Symbol(0);\n            }\n            \n            var retval;\n            if (symbol.fname === SQRT && symbol.multiplier.equals(1)) {\n                return _.divide(log(symbol.args[0]), new Symbol(2));\n            }\n\n            //log(0) is undefined so complain\n            if (symbol.equals(0)) {\n                throw new UndefinedError(Settings.LOG+'(0) is undefined!');\n            }\n\n            //deal with imaginary values\n            if (symbol.isImaginary()) {\n                return complex.evaluate(symbol, Settings.LOG);\n                /*\n                 var a = format('log(sqrt(({0})^2+({1})^2))-({2})*atan2(({1}),({0}))', symbol.imagpart(), symbol.realpart(), Settings.IMAGINARY),\n                 b = format('({0})*PI/2', Settings.IMAGINARY);\n                 \n                 return _.add(_.parse(a), _.parse(b));\n                 */\n            }\n\n            if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n                /*\n                 var log_sym = Math2.bigLog(symbol.multiplier);\n                 var log_base = Math2.bigLog(base.multiplier);\n                 retval = new Symbol(log_sym.divide());\n                 */\n                var log_sym = Math.log(symbol);\n                var log_base = Math.log(base);\n                retval = new Symbol(log_sym / log_base);\n            }\n            else if (symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n                symbol.power.negate();\n                //move the negative outside but keep the positive inside :)\n                retval = log(symbol).negate();\n            }\n            else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n                var p = symbol.power;\n                retval = isSymbol(p) ? p : new Symbol(p);\n            }\n            else if (symbol.group === FN && symbol.fname === 'exp') {\n                var s = symbol.args[0];\n                if (symbol.multiplier.equals(1))\n                    retval = _.multiply(s, new Symbol(symbol.power));\n                else\n                    retval = _.symfunction(Settings.LOG, [symbol]);\n            }\n            else if (Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\n                var img_part;\n                if (symbol.multiplier.lessThan(0)) {\n                    symbol.negate();\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\n                }\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\n                if (img_part)\n                    retval = _.add(retval, img_part);\n            }\n            else {\n                var s;\n                if (!symbol.power.equals(1)) {\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\n                    symbol.toLinear();\n                }\n                //log(a,a) = 1 since the base is allowed to be changed. \n                //This was pointed out by Happypig375 in issue #280\n                if (arguments.length > 1 && allSame(arguments))\n                    retval = new Symbol(1);\n                else\n                    retval = _.symfunction(Settings.LOG, arguments);\n\n                if (s)\n                    retval = _.multiply(s, retval);\n            }\n            return retval;\n        }\n\n        /**\n         * Round a number up to s decimal places\n         * @param {Number} x\n         * @param {int} s - the number of decimal places\n         * @returns {undefined}\n         */\n        function round(x, s) {\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n            if (x.isConstant() && sIsConstant) {\n                var v, e, exp, retval;\n                v = x;\n                //round the coefficient of then number but not the actual decimal value\n                //we know this because a negative number was passed\n                if (s && s.lessThan(0)) {\n                    s = abs(s);\n                    //convert the number to exponential form\n                    e = Number(x).toExponential().toString().split('e');\n                    //point v to the coefficient of then number\n                    v = e[0];\n                    //set the expontent\n                    exp = e[1];\n                }\n                //round the number to the requested precision\n                retval = new Symbol(nround(v, Number(s || 0)));\n                //if there's a exponent then put it back\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\n            }\n\n\n            return _.symfunction('round', arguments);\n        }\n\n        /**\n         * Gets the quadrant of the trig function\n         * @param {Frac} m\n         * @returns {Int}\n         */\n        function getQuadrant(m) {\n            var v = m % 2, quadrant;\n\n            if (v < 0)\n                v = 2 + v; //put it in terms of pi\n\n            if (v >= 0 && v <= 0.5)\n                quadrant = 1;\n            else if (v > 0.5 && v <= 1)\n                quadrant = 2;\n            else if (v > 1 && v <= 1.5)\n                quadrant = 3;\n            else\n                quadrant = 4;\n            return quadrant;\n        }\n\n        /*\n         * Serves as a bridge between numbers and bigNumbers\n         * @param {Frac|Number} n\n         * @returns {Symbol} \n         */\n        function bigConvert(n) {\n            if (!isFinite(n)) {\n                var sign = Math.sign(n);\n                var r = new Symbol(String(Math.abs(n)));\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\n                return r;\n            }\n            if (isSymbol(n))\n                return n;\n            if (typeof n === 'number') {\n                try {\n                    n = Frac.simple(n);\n                }\n                catch (e) {\n                    n = new Frac(n);\n                }\n            }\n\n            var symbol = new Symbol(0);\n            symbol.multiplier = n;\n            return symbol;\n        }\n        ;\n\n        function clean(symbol) {\n            // handle functions with numeric values\n            // handle denominator within denominator\n            // handle trig simplifications\n            var g = symbol.group, retval;\n            //Now let's get to work\n            if (g === CP) {\n                var num = symbol.getNum(),\n                        den = symbol.getDenom() || new Symbol(1),\n                        p = Number(symbol.power),\n                        factor = new Symbol(1);\n                if (Math.abs(p) === 1) {\n                    den.each(function (x) {\n                        if (x.group === CB) {\n                            factor = _.multiply(factor, clean(x.getDenom()));\n                        }\n                        else if (x.power.lessThan(0)) {\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\n                        }\n                    });\n\n                    var new_den = new Symbol(0);\n                    //now divide out the factor and add to new den\n                    den.each(function (x) {\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\n                    });\n\n                    factor.invert(); //invert so it can be added to the top\n                    var new_num;\n                    if (num.isComposite()) {\n                        new_num = new Symbol(0);\n                        num.each(function (x) {\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\n                        });\n                    }\n                    else\n                        new_num = _.multiply(factor, num);\n\n                    retval = _.divide(new_num, new_den);\n                }\n            }\n            else if (g === CB) {\n                retval = new Symbol(1);\n                symbol.each(function (x) {\n                    retval = _.multiply(retval, _.clean(x));\n                });\n            }\n            else if (g === FN) {\n                if (symbol.args.length === 1 && symbol.args[0].isConstant())\n                    retval = block('PARSE2NUMBER', function () {\n                        return _.parse(symbol);\n                    }, true);\n            }\n\n            if (!retval)\n                retval = symbol;\n\n            return retval;\n        }\n\n        /**\n         * Expands a symbol\n         * @param symbol\n         */\n        function expand(symbol) {\n            //deal with parenthesis\n            if (symbol.group === FN && symbol.fname === '') {\n                return _.expand(symbol.args[0]);\n            }\n\n            //TODO - some test need to be verified in order to implement this\n            /*\n             if(symbol.group === FN) {\n             symbol.args[0] = _.expand(symbol.args[0]);\n             symbol.updateHash();\n             return symbol;\n             }\n             */\n\n            if (!symbol.symbols)\n                return symbol; //nothing to do\n\n            var original = symbol.clone();\n            try {\n\n                if (!symbol.symbols)\n                    return symbol;\n\n                //expand all the symbols\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    symbol.symbols[s] = expand(x);\n                }\n\n                symbol = _.parse(symbol);\n\n                var p = symbol.power,\n                        m = symbol.multiplier.clone(),\n                        pn = Number(p);\n                if (isInt(pn) && pn > 0 && symbol.isComposite()) {\n                    var f = new Symbol(0);\n                    //we loop through the f and make sure that it's fully expanded\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x];\n                        if (sym.power.greaterThan(1))\n                            sym = _.expand(sym);\n                        f = _.add(f, sym);\n                    }\n\n                    //assume (a+b)^3 = (a+b)(a+b)(a+b) = (b^2+2*a*b+a^2)(a+b)\n                    //we have n=p-1=2 iterations where p=3 in this case\n                    var n = pn - 1;\n                    //Initiate with the first term. Remember that we have p-1 iterations because\n                    //the first iteration is equal to P where p is the polynomial\n                    var result = f.clone(); //initiate this as the first term\n                    //the first loop is the top iterator and remains untouched. No sub-symbols\n                    //from this symbol are allowed to be touched\n                    for (var i = 0; i < n; i++) {\n                        var t = new Symbol(0);\n                        for (var x in f.symbols) {\n                            var a = f.symbols[x];\n                            //we now loop through the \n                            for (var y in result.symbols) {\n                                var b = _.multiply(a.clone(), result.symbols[y]);\n                                //the result must always be a composite. If not expand\n                                if (b.group === CB)\n                                    b = _.expand(b);\n                                t = _.add(t, b);\n                            }\n                        }\n                        ;\n                        result = t;\n                    }\n\n                    //put back the multiplier\n                    if (!m.equals(1)) {\n                        for (var s in result.symbols) {\n                            var x = result.symbols[s];\n                            x.multiplier = x.multiplier.multiply(m);\n                            if (x.isComposite())\n                                x.distributeMultiplier();\n                            symbol.symbols[s] = x;\n                        }\n                    }\n\n                    return result;\n                }\n                else if (symbol.group === CB) {\n                    //check if the symbol has composites\n                    var hascomposites = false,\n                            sp = symbol.power.clone(),\n                            sign = symbol.power.sign();\n\n                    for (var x in symbol.symbols) {\n                        var sub = symbol.symbols[x];\n                        if (sub.isComposite()) {\n                            hascomposites = true;\n                            break;\n                        }\n\n                        if (isSymbol(sub.power) || isSymbol(sp)) {\n                            sub.power = _.multiply(sub.power, Symbol(sp));\n                            sub.group = EX;\n                        }\n                        else\n                            sub.power = sub.power.multiply(sp);\n                    }\n\n                    symbol.toLinear();\n\n                    //I'm going to be super lazy here and take the easy way out. TODO: do this without re-parsing\n                    symbol = _.parse(symbol.text());\n\n                    if (!hascomposites)\n                        return symbol; //nothing to do here\n\n                    var result = new Symbol(0);\n                    var composites = [],\n                            non_composites = new Symbol(symbol.multiplier);\n\n                    //sort them out\n                    for (var s in symbol.symbols) {\n                        var x = symbol.symbols[s];\n\n                        if (x.group === EX)\n                            continue;\n                        if (x.isComposite()) {\n                            var p = x.power, isDenom = false;\n                            ;\n                            if (isInt(p)) {\n                                if (p < 0) {\n                                    x.power.negate();\n                                    isDenom = true;\n                                }\n                            }\n\n                            if (isDenom) {\n                                x.power.negate();\n                                non_composites = _.multiply(non_composites, x);\n                            }\n                            else\n                                composites.push(x);\n                        }\n                        else\n                            non_composites = _.multiply(non_composites, x);\n                    }\n\n                    //grab the first symbol since we'll loop over that one to begin\n                    result = composites.pop();\n\n                    while (composites.length) {\n                        var s = composites.pop();\n                        var t = new Symbol(0);\n                        result.each(function (x) {\n                            s.each(function (y) {\n                                var prod = _.multiply(x.clone(), y.clone());\n                                t = _.add(t, prod);\n                            });\n                        });\n\n                        result = t;\n                    }\n\n                    var finalResult = new Symbol(0);\n                    //put back the multiplier\n                    result.each(function (x) {\n                        finalResult = _.add(finalResult, expand(_.multiply(non_composites, x)));\n                    });\n                    //expand the power\n                    finalResult.power = finalResult.power.multiply(sp.abs());\n\n                    symbol = _.expand(finalResult);\n\n                    if (sign < 0)\n                        symbol.invert();\n                }\n            }\n            catch (e) {\n                return original;\n            }\n\n            return symbol;\n        }\n        \n        /**\n         * Returns an identity matrix of nxn\n         * @param {Number} n\n         * @returns {Matrix}\n         */\n        function imatrix(n) {\n            return Matrix.identity(n);\n        }\n        \n        /**\n         * Retrieves and item from a vector\n         * @param {Vector} vector\n         * @param {Number} index\n         * @returns {Vector|Symbol}\n         */\n        function vecget(vector, index) {\n            if (index.isConstant() && isInt(index))\n                return vector.elements[index];\n            return _.symfunction('vecget', arguments);\n        }\n        \n        /**\n         * Removes duplicates from a vector\n         * @param {Vector} vector\n         * @param {Number} tolerance\n         * @returns {Vector}\n         */\n        function vectrim(vector, tolerance) {\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\n            \n            vector = vector.clone();\n            \n            tolerance = Number(tolerance);\n            //place algebraic solutions first\n            vector.elements.sort(function(a, b) {\n                return b.group - a.group;\n            });\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\n            vector.elements = removeDuplicates(vector.elements, function(a, b) {\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\n                return diff <= tolerance;\n            });\n            \n            return vector;\n        }\n        \n        /**\n         * Set a value for a vector at a given index\n         * @param {Vector} vector\n         * @param {Number} index\n         * @param {Symbol} value\n         * @returns {Vector}\n         */\n        function vecset(vector, index, value) {\n            if (!index.isConstant)\n                return _.symfunction('vecset', arguments);\n            vector.elements[index] = value;\n            return vector;\n        }\n\n        function matget(matrix, i, j) {\n            if (i.isConstant() && j.isConstant())\n                return matrix.elements[i][j];\n            return _.symfunction('matget', arguments);\n        }\n\n        function matgetrow(matrix, i) {\n            if (i.isConstant())\n                return new Matrix(matrix.elements[i]);\n            return _.symfunction('matgetrow', arguments);\n        }\n\n        function matsetrow(matrix, i, x) {\n            //handle symbolics\n            if (!i.isConstant())\n                return _.symfunction('matsetrow', arguments);\n            if (matrix.elements[i].length !== x.elements.length)\n                throw new DimensionError('Matrix row must match row dimensions!');\n            var M = matrix.clone();\n            M.elements[i] = x.clone().elements;\n            return M;\n        }\n\n        function matgetcol(matrix, col_index) {\n            //handle symbolics\n            if (!col_index.isConstant())\n                return _.symfunction('matgetcol', arguments);\n            col_index = Number(col_index);\n            var M = Matrix.fromArray([]);\n            matrix.each(function (x, i, j) {\n                if (j === col_index) {\n                    M.elements.push([x.clone()]);\n                }\n            });\n            return M;\n        }\n\n        function matsetcol(matrix, j, col) {\n            //handle symbolics\n            if (!j.isConstant())\n                return _.symfunction('matsetcol', arguments);\n            j = Number(j);\n            if (matrix.rows() !== col.elements.length)\n                throw new DimensionError('Matrix columns must match number of columns!');\n            col.each(function (x, i) {\n                matrix.set(i - 1, j, x.elements[0].clone());\n            });\n            return matrix;\n        }\n\n\n        function matset(matrix, i, j, value) {\n            matrix.elements[i][j] = value;\n            return matrix;\n        }\n\n        //the constructor for vectors\n        function vector() {\n            return new Vector([].slice.call(arguments));\n        }\n\n        //the constructor for matrices\n        function matrix() {\n            return Matrix.fromArray(arguments);\n        }\n        \n        //the constructor for sets\n        function set() {\n            return Set.fromArray(arguments);\n        }\n\n        function determinant(symbol) {\n            if (isMatrix(symbol)) {\n                return symbol.determinant();\n            }\n            return symbol;\n        }\n\n        function size(symbol) {\n            var retval;\n            if (isMatrix(symbol))\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\n            else if(isVector(symbol) || isSet(symbol)) \n                retval = new Symbol(symbol.elements.length);\n            else\n                err('size expects a matrix or a vector');\n            return retval;\n        }\n\n        function dot(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.dot(vec2);\n            err('function dot expects 2 vectors');\n        }\n\n        function cross(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.cross(vec2);\n            err('function cross expects 2 vectors');\n        }\n\n        function transpose(mat) {\n            if (isMatrix(mat))\n                return mat.transpose();\n            err('function transpose expects a matrix');\n        }\n\n        function invert(mat) {\n            if (isMatrix(mat))\n                return mat.invert();\n            err('invert expects a matrix');\n        }\n        \n        //basic set functions\n        function union(set1, set2) {\n            return set1.union(set2);\n        }\n        \n        function intersection(set1, set2) {\n            return set1.intersection(set2);\n        }\n        \n        function contains(set1, e) {\n            return set1.contains(e);\n        }\n        \n        function difference(set1, set2) {\n            return set1.difference(set2);\n        }\n        \n        function intersects(set1, set2) {\n            return new Symbol(Number(set1.intersects(set2)));\n        }\n        \n        function is_subset(set1, set2) {\n            return new Symbol(Number(set1.is_subset(set2)));\n        }\n        \n        function print() {\n            arguments2Array(arguments).map(function(x) {\n                console.log(x.toString());\n            });\n        }\n        \n        function testSQRT(symbol) {\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\n            if (!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\n                var sign = symbol.power.sign();\n                //don't devide the power directly. Notice the use of toString. This makes it possible\n                //to use a bigNumber library in the future\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\n                //place back the sign of the power\n                if (sign < 0)\n                    retval.invert();\n                return retval;\n            }\n            return symbol;\n        }\n\n        //try to reduce a symbol by pulling its power\n        function testPow(symbol) {\n            if (symbol.group === P) {\n                var v = symbol.value;\n                \n                var fct = primeFactors(v)[0];\n                \n                //safety\n                if(!fct) {\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\n                    return symbol;\n                }\n                \n                var n = new Frac(Math.log(v) / Math.log(fct)),\n                    p = n.multiply(symbol.power);\n                \n                //we don't want a more complex number than before \n                if (p.den > symbol.power.den)\n                    return symbol;\n\n                if (isInt(p))\n                    symbol = Symbol(Math.pow(fct, p));\n                else\n                    symbol = new Symbol(fct).setPower(p);\n            }\n\n            return symbol;\n        }\n\n        //Linke the functions to the parse so they're available outside of the library\n        //This is strictly for convenience and may be deprecated.\n        this.expand = expand;\n        this.clean = clean;\n        this.sqrt = sqrt;\n        this.log = log;\n        this.nthroot = nthroot;\n        this.arg = arg;\n        this.conjugate = conjugate;\n        this.imagpart = imagpart;\n        this.realpart = realpart;\n\n//Parser.methods ===============================================================\n        this.addPreprocessor = function (name, action, order, shift_cells) {\n            var names = preprocessors.names;\n            var actions = preprocessors.actions;\n            if ((typeof action !== 'function')) //the person probably forgot to specify a name\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\n            if (!order) {\n                names.push(name);\n                actions.push(action);\n            }\n            else {\n                if (shift_cells) {\n                    names.splice(order, 0, name);\n                    actions.splice(order, 0, action);\n                }\n                else {\n                    names[order] = name;\n                    actions[order] = action;\n                }\n            }\n        };\n\n        this.getPreprocessors = function () {\n            var preprocessors = {};\n            for (var i = 0, l = preprocessors.names.length; i < l; i++) {\n                var name = preprocessors.names[i];\n                preprocessors[name] = {\n                    order: i,\n                    action: preprocessors.actions[i]\n                };\n            }\n            return preprocessors;\n        };\n\n        this.removePreprocessor = function (name, shift_cells) {\n            var i = preprocessors.names.indexOf(name);\n            if (shift_cells) {\n                remove(preprocessors.names, i);\n                remove(preprocessors.actions, i);\n            }\n            else {\n                preprocessors.names[i] = undefined;\n                preprocessors.actions[i] = undefined;\n            }\n        };\n\n        //The loader for functions which are not part of Math2\n        this.mapped_function = function () {\n            var subs = {},\n                    params = this.params;\n            for (var i = 0; i < params.length; i++)\n                subs[params[i]] = arguments[i];\n\n            return _.parse(this.body, subs);\n        };\n        /**\n         * Adds two symbols\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.add = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with two symbols\n            if (aIsSymbol && bIsSymbol) {\n                //forward the adding of symbols with units to the Unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.add(a, b);\n                }\n                //handle Infinity\n                //https://www.encyclopediaofmath.org/index.php/Infinity\n                if (a.isInfinity || b.isInfinity) {\n                    var aneg = a.multiplier.lessThan(0),\n                            bneg = b.multiplier.lessThan(0);\n\n                    if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n                    }\n\n                    var inf = Symbol.infinity();\n                    if (bneg)\n                        inf.negate();\n                    return inf;\n                }\n\n                if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n                    a.distributeMultiplier();\n                    b.distributeMultiplier();\n                }\n                //no need to waste time on zeroes\n                if (a.multiplier.equals(0))\n                    return b;\n                if (b.multiplier.equals(0))\n                    return a;\n\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\n                    return result;\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        ap = a.power.toString(),\n                        bp = b.power.toString();\n\n                //always keep the greater group on the left. \n                if (g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\n                    return this.add(b, a);\n                }\n\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\n                 * because it doesn't know which one to prioritize. */\n                //correction to PL dilemma\n                if (g1 === CB && g2 === PL && a.value === b.value) {\n                    //swap\n                    var t = a;\n                    a = b;\n                    b = t;\n                    g1 = a.group;\n                    g2 = b.group;\n                    ap = a.power.toString();\n                    bp = b.power.toString();\n                }\n\n                var powEQ = ap === bp,\n                        v1 = a.value,\n                        v2 = b.value,\n                        aIsComposite = a.isComposite(),\n                        bIsComposite = b.isComposite(),\n                        h1, h2, result;\n\n                if (aIsComposite)\n                    h1 = text(a, 'hash');\n                if (bIsComposite)\n                    h2 = text(b, 'hash');\n\n                if (g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n                    return this.add(b, a);\n                }\n\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n                if (g1 === PL && g2 === PL) {\n                    v1 = h1;\n                    v2 = h2;\n                }\n\n                var PN = g1 === P && g2 === N,\n                        PNEQ = a.value === b.multiplier.toString(),\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\n\n                //equal values, equal powers\n                if (valEQ && powEQ && g1 === g2) {\n                    //make sure to convert N to something P can work with\n                    if (PN)\n                        b = b.convert(P);//CL\n\n                    //handle PL\n                    if (g1 === PL && (g2 === S || g2 === P)) {\n                        a.distributeMultiplier();\n                        result = a.attach(b);\n                    }\n                    else {\n                        result = a;//CL\n                        if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\n                            for (var s in b.symbols) {\n                                var x = b.symbols[s];\n                                result.attach(x);\n                            }\n                        }\n                        else\n                            result.multiplier = result.multiplier.add(b.multiplier);\n                    }\n                }\n                //equal values uneven powers\n                else if (valEQ && g1 !== PL) {\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n                    if (g1 === CP && g2 === PL) {\n                        b.insert(a);\n                        result = b;\n                    }\n                    else {\n                        result = Symbol.shell(PL).attach([a, b]);\n                        //update the hash\n                        result.value = g1 === PL ? h1 : v1;\n                    }\n                }\n                else if (aIsComposite && a.isLinear()) {\n                    var canIterate = g1 === g2,\n                            bothPL = g1 === PL && g2 === PL;\n\n                    //we can only iterate group PL if they values match\n                    if (bothPL)\n                        canIterate = a.value === b.value;\n                    //distribute the multiplier over the entire symbol\n                    a.distributeMultiplier();\n\n                    if (b.isComposite() && b.isLinear() && canIterate) {\n                        b.distributeMultiplier();\n                        //CL\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            a.attach(x);\n                        }\n                        result = a;\n                    }\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n                    else if (bothPL && a.value !== h2 || g1 === PL && !valEQ) {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n\n                    }\n                    else {\n                        result = a.attach(b);\n                    }\n                }\n                else {\n                    if (g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\n                        var m = b.multiplier.clone();\n                        b = sqrt(b.toUnitMultiplier().toLinear());\n                        b.multiplier = m;\n                    }\n                    //fix for issue #3 and #159\n                    if (a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\n                        result = _.add(expand(a), expand(b));\n                    }\n                    else {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n                    }\n                }\n\n                if (result.multiplier.equals(0))\n                    result = new Symbol(0);\n\n                //make sure to remove unnecessary wraps\n                if (result.length === 1) {\n                    var m = result.multiplier;\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(m);\n                }\n\n                return result;\n            }\n            else {\n                //keep symbols to the right \n                if (bIsSymbol && !aIsSymbol) {\n                    var t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var bIsMatrix = isMatrix(b);\n\n                if (aIsSymbol && bIsMatrix) {\n                    b.eachElement(function (e) {\n                        return _.add(a.clone(), e);\n                    });\n                }\n                else {\n                    if (isMatrix(a) && bIsMatrix) {\n                        b = a.add(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return _.add(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n                return b;\n            }\n\n        };\n        /**\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.subtract = function (a, b) {\n            var aIsSymbol = aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b), t;\n\n            if (aIsSymbol && bIsSymbol) {\n                if (a.unit || b.unit) {\n                    return _.Unit.subtract(a, b);\n                }\n                return this.add(a, b.negate());\n            }\n            else {\n                if (bIsSymbol && isVector(a)) {\n                    b = a.map(function (x) {\n                        return _.subtract(x, b.clone());\n                    });\n                }\n                else if (aIsSymbol && isVector(b)) {\n                    b = b.map(function (x) {\n                        return _.subtract(a.clone(), x);\n                    });\n                }\n                else if (isVector(a) && isVector(b)) {\n                    if (a.dimensions() === b.dimensions())\n                        b = a.subtract(b);\n                    else\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\n                }\n                else if (isMatrix(a) && isVector(b)) {\n                    if (b.elements.length === a.rows()) {\n                        var M = new Matrix(), l = a.cols();\n                        b.each(function (e, i) {\n                            var row = [];\n                            for (var j = 0; j < l; j++) {\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\n                            }\n                            M.elements.push(row);\n                        });\n                        return M;\n                    }\n                    else\n                        err('Dimensions must match!');\n                }\n                else if (isVector(a) && isMatrix(b)) {\n                    var M = b.clone().negate();\n                    return _.add(M, a);\n                }\n                else if (isMatrix(a) && isMatrix(b)) {\n                    b = a.subtract(b);\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the * operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.multiply = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with function assignment here\n            if (aIsSymbol && b instanceof Collection) {\n                b.elements.push(a);\n                return b;\n            }\n            if (aIsSymbol && bIsSymbol) {\n                //if it has a unit then add it and return it right away.\n                if (b.isUnit) {\n                    var result = a.clone();\n                    a.unit = b;\n                    return result;\n                }\n                //if it has units then just forward that problem to the unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.multiply(a, b);\n                }\n\n                //handle Infinty\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.equals(0) || b.equals(0))\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\n                    //x/infinity\n                    if (b.power.lessThan(0)) {\n                        if (!a.isInfinity) {\n                            return new Symbol(0);\n                        }\n                        else {\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\n                        }\n                    }\n\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\n                            inf = Symbol.infinity();\n                    if (a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\n                        if (sign < 0)\n                            inf.negate();\n\n                        return inf;\n                    }\n                }\n                //the quickies\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\n                    var retval = new Symbol(t);\n                    return retval;\n                }\n\n                //don't waste time\n                if (a.isOne()) {\n                    return b.clone();\n                }\n                if (b.isOne()) {\n                    return a.clone();\n                }\n\n                if (a.multiplier.equals(0) || b.multiplier.equals(0))\n                    return new Symbol(0);\n\n                if (b.group > a.group && !(b.group === CP))\n                    return this.multiply(b, a);\n                //correction for PL/CB dilemma\n                if (a.group === CB && b.group === PL && a.value === b.value) {\n                    var t = a;\n                    a = b;\n                    b = t;//swap\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        bnum = b.multiplier.num,\n                        bden = b.multiplier.den;\n\n                if (g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\n                    //unwrap sqrt\n                    var a_pow = a.power;\n                    a = a.args[0].clone();\n                    a.setPower(new Frac(0.5).multiply(a_pow));\n                    g1 = a.group;\n                }\n                //simplify n/sqrt(n). Being very specific\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\n                    a = _.symfunction(SQRT,[b.clone()]);\n                    b = new Symbol(1);\n                };\n\n                var v1 = a.value,\n                        v2 = b.value,\n                        sign = new Frac(a.sign()),\n                        //since P is just a morphed version of N we need to see if they relate\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\n                        //don't multiply the multiplier of b since that's equal to the value of a\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\n                        result = a.clone().toUnitMultiplier();\n                b = b.clone().toUnitMultiplier(true);\n\n                //further simplification of sqrt\n                if (g1 === FN && g2 === FN) {\n                    var u = a.args[0].clone();\n                    var v = b.args[0].clone();\n                    if (a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\n\n                        var q = _.divide(u, v).invert();\n                        if (q.gt(1) && isInt(q)) {\n                            //b contains a factor a which can be moved to a\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\n                            b = new Symbol(1);\n                        }\n                    }\n                    if (a.fname === FACTORIAL && b.fname === FACTORIAL) {\n                        if (a.power.equals(1) && b.power.equals(-1) && _.subtract(v.clone(), u.clone()).equals(1)) {\n                            result = _.divide(u, v);\n                            b = new Symbol(1);\n                        }\n                    }\n                }\n\n\n                //if both are PL then their hashes have to match\n                if (v1 === v2 && g1 === PL && g1 === g2) {\n                    v1 = a.text('hash');\n                    v2 = b.text('hash');\n                }\n\n                //same issue with (x^2+1)^x*(x^2+1)\n                //EX needs an exception when multiplying because it needs to recognize\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\n                if (g2 === EX && b.previousGroup === PL && g1 === PL) {\n                    v1 = text(a, 'hash', EX);\n                }\n\n                if ((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\n                    var p1 = a.power,\n                            p2 = b.power,\n                            isSymbolP1 = isSymbol(p1),\n                            isSymbolP2 = isSymbol(p2),\n                            toEX = (isSymbolP1 || isSymbolP2);\n                    //TODO: this needs cleaning up\n                    if (g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\n                        result = new Symbol(0);\n                        a.each(function (x) {\n                            result = _.add(result, _.multiply(x, b.clone()));\n                        }, true);\n                    }\n                    else {\n                        //add the powers\n                        result.power = toEX ? _.add(\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\n\n                        //eliminate zero power values and convert them to numbers\n                        if (result.power.equals(0))\n                            result = result.convert(N);\n\n                        //properly convert to EX\n                        if (toEX)\n                            result.convert(EX);\n\n                        //take care of imaginaries\n                        if (a.imaginary && b.imaginary) {\n                            var isEven = even(result.power % 2);\n                            if (isEven) {\n                                result = new Symbol(1);\n                                m.negate();\n                            }\n                        }\n\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\n                        if (result.group !== EX && result.previousGroup)\n                            result.previousGroup = undefined;\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\n                        //the sign but this isn't true if they're equals symbols\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                }\n                else if (g1 === CB && a.isLinear()) {\n                    if (g2 === CB)\n                        b.distributeExponent();\n                    if (g2 === CB && b.isLinear()) {\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            result = result.combine(x);\n                        }\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                    else {\n                        result.combine(b);\n                    }\n                }\n                else {\n                    //the multiplier was already handled so nothing left to do\n                    if (g1 !== N) {\n                        if (g1 === CB) {\n                            result.distributeExponent();\n                            result.combine(b);\n                        }\n                        else if (!b.isOne()) {\n                            var bm = b.multiplier.clone();\n                            b.toUnitMultiplier();\n                            result = Symbol.shell(CB).combine([result, b]);\n                            //transfer the multiplier to the outside\n                            result.multiplier = result.multiplier.multiply(bm);\n                        }\n                    }\n                    else {\n                        result = b.clone().toUnitMultiplier();\n                    }\n                }\n\n                if (result.group === P) {\n                    var logV = Math.log(result.value),\n                            n1 = Math.log(bnum) / logV,\n                            n2 = Math.log(bden) / logV,\n                            ndiv = m.num / bnum,\n                            ddiv = m.den / bden;\n                    //we don't want to divide by zero no do we? Strange things happen.\n                    if (n1 !== 0 && isInt(n1) && isInt(ndiv)) {\n                        result.power = result.power.add(new Frac(n1));\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\n                    }\n                    if (n2 !== 0 && isInt(n2) && isInt(ddiv)) {\n                        result.power = result.power.subtract(new Frac(n2));\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\n                    }\n                }\n\n                //unpack CB if length is only one\n                if (result.length === 1) {\n                    var t = result.multiplier;\n                    //transfer the multiplier\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(t);\n                }\n\n                //reduce square root\n                var ps = result.power.toString();\n                if (even(ps) && result.fname === SQRT) {\n                    //grab the sign of the symbol\n                    sign = sign * result.sign();\n                    var p = result.power;\n                    result = result.args[0];\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\n                    //flip it back to the correct sign\n                    if (sign < 0)\n                        result.negate()\n                }\n                else {\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\n                    if (result.group === CP && result.isImaginary())\n                        result.distributeMultiplier();\n                }\n\n                //back convert group P to a simpler group N if possible\n                if (result.group === P && isInt(result.power.toDecimal()))\n                    result = result.convert(N);\n\n                return result;\n            }\n            else {\n                //****** Matrices & Vector *****//\n                if (bIsSymbol && !aIsSymbol) { //keep symbols to the right \n                    t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\n                if (aIsSymbol && isMatrixB) {\n                    b.eachElement(function (e) {\n                        return _.multiply(a.clone(), e);\n                    });\n                }\n                else {\n                    if (isMatrixA && isMatrixB) {\n                        b = a.multiply(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return this.multiply(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the / operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.divide = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n\n            if (aIsSymbol && bIsSymbol) {\n                //forward to Unit division\n                if (a.unit || b.unit) {\n                    return _.Unit.divide(a, b);\n                }\n                var result;\n                if (b.equals(0))\n                    throw new DivisionByZero('Division by zero not allowed!');\n\n                if (a.isConstant() && b.isConstant()) {\n                    result = a.clone();\n                    result.multiplier = result.multiplier.divide(b.multiplier);\n                }\n                else {\n                    b.invert();\n                    result = _.multiply(a, b);\n                }\n                return result;\n            }\n            else {\n                //******* Vectors & Matrices *********//\n                var isVectorA = isVector(a), isVectorB = isVector(b);\n                if (aIsSymbol && isVectorB) {\n                    b = b.map(function (x) {\n                        return _.divide(a.clone(), x);\n                    });\n                }\n                else if (isVectorA && bIsSymbol) {\n                    b = a.map(function (x) {\n                        return _.divide(x, b.clone());\n                    });\n                }\n                else if (isVectorA && isVectorB) {\n                    if (a.dimensions() === b.dimensions()) {\n                        b = b.map(function (x, i) {\n                            return _.divide(a.elements[--i], x);\n                        });\n                    }\n                    else\n                        _.error('Cannot divide vectors. Dimensions do not match!');\n                }\n                else {\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\n                    if (isMatrixA && bIsSymbol) {\n                        a.eachElement(function (x) {\n                            return _.divide(x, b.clone());\n                        });\n                        b = a;\n                    }\n                    else if (isMatrixA && isMatrixB) {\n                        if (a.rows() === b.rows() && a.cols() === b.cols()) {\n                            a.eachElement(function (x, i, j) {\n                                return _.divide(x, b.elements[i][j]);\n                            });\n                        }\n                        else {\n                            _.error('Dimensions do not match!');\n                        }\n                    }\n                    else if (isMatrixA && isVectorB) {\n                        if (a.cols() === b.dimensions()) {\n                            a.eachElement(function (x, i, j) {\n                                return _.divide(x, b.elements[i].clone());\n                            });\n                            b = a;\n                        }\n                        else {\n                            _.error('Unable to divide matrix by vector.');\n                        }\n                    }\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the ^ operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.pow = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            if (aIsSymbol && bIsSymbol) {\n                //it has units then it's the Unit module's problem\n                if (a.unit || b.unit) {\n                    return _.Unit.pow(a, b);\n                }\n                //handle infinity\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.isInfinity && b.isInfinity)\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n                    if (a.isConstant() && b.isInfinity) {\n                        if (a.equals(0)) {\n                            if (b.lessThan(0))\n                                throw new UndefinedError('0^Infinity is undefined!');\n                            return new Symbol(0);\n                        }\n                        if (a.equals(1))\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\n                        //a^-oo\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        //a^oo\n                        if (!a.lessThan(0))\n                            return Symbol.infinity();\n                    }\n\n                    if (a.isInfinity && b.isConstant()) {\n                        if (b.equals(0))\n                            throw new UndefinedError(a + '^0 is undefined!');\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\n                    }\n                }\n\n                var aIsZero = a.equals(0);\n                var bIsZero = b.equals(0);\n                if (aIsZero && bIsZero)\n                    throw new UndefinedError('0^0 is undefined!');\n                //return 0 right away if possible\n                if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\n                    return new Symbol(0);\n\n                if (bIsZero)\n                    return new Symbol(1);\n\n                var bIsConstant = b.isConstant(),\n                        aIsConstant = a.isConstant(),\n                        bIsInt = b.isInteger(),\n                        m = a.multiplier,\n                        result = a.clone();\n                if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\n                    throw new UndefinedError('Division by zero is not allowed!');\n\n                //compute imaginary numbers right away\n                if (Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\n                    var k, re, im;\n                    k = Math.PI * b;\n                    re = new Symbol(Math.cos(k));\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\n                    return _.add(re, im);\n                }\n\n                //imaginary number under negative nthroot or to the n\n                if (Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\n                    var re, im, r, theta, nre, nim;\n                    re = a.realpart();\n                    im = a.imagpart();\n                    if (re.isConstant('all') && im.isConstant('all')) {\n                        theta = new Symbol(Math.atan2(im, re) * b);\n                        r = _.pow(Symbol.hyp(re, im), b);\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\n                        nim = _.multiply(r, _.trig.sin(theta));\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\n                    }\n                }\n\n                /*\n                 if(a.isImaginary() && bIsConstant && b.multiplier.num.abs().equals(1) && !b.multiplier.den.equals(1)) { \n                 var sign = b.sign();\n                 b = abs(b);\n                 var p, re, im, theta, n, ai, bi, di, ei, ii, th;\n                 p = Symbol.toPolarFormArray(a);\n                 theta = _.multiply(b.clone(), arg(a));\n                 di = _.pow(p[0], b);\n                 ai = _.trig.cos(theta.clone());\n                 bi = _.trig.sin(theta);\n                 \n                 if(sign < 0) {\n                 re = _.divide(ai, di.clone());\n                 im = _.divide(bi, di);\n                 }\n                 else {\n                 re = _.multiply(ai, di.clone());\n                 im = _.multiply(bi, di);\n                 }\n                 return _.add(re, _.multiply(im, Symbol.imaginary()));\n                 }\n                 */\n\n                //take care of the symbolic part\n                result.toUnitMultiplier();\n                //simpifly sqrt\n                if (result.group === FN && result.fname === SQRT && !bIsConstant) {\n                    var s = result.args[0];\n                    s.multiplyPower(new Symbol(0.5));\n                    s.multiplier.multiply(result.multiplier);\n                    s.multiplyPower(b);\n                    result = s;\n                }\n                else {\n                    var sign = m.sign();\n                    //handle cases such as (-a^3)^(1/4)\n                    if (evenFraction(b) && sign < 0) {\n                        //swaperoo\n                        //first put the sign back on the symbol\n                        result.negate();\n                        //wrap it in brackets\n                        result = _.symfunction(PARENTHESIS, [result]);\n                        //move the sign back the exterior and let nerdamer handle the rest\n                        result.negate();\n                    }\n                    \n                    result.multiplyPower(b);\n                }\n\n                if (aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\n                        var c;\n                        //remove the sign\n                        if (sign < 0) {\n                            a.negate();\n                            if (b.multiplier.den.equals(2))\n                                //we know that the numerator has to be odd and therefore it's i\n                                c = new Symbol(Settings.IMAGINARY);\n                            else if (isInt(b.multiplier)) {\n                                if (even(b.multiplier))\n                                    c = new Symbol(1);\n                                else\n                                    c = new Symbol(-1);\n                            }\n                            else if (!even(b.multiplier.den)) { \n                                c = new Symbol(Math.pow(sign, b.multiplier.num));\n                            }\n                            else {\n                                c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            }\n                        }\n\n                        result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\n                        \n                        //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n                        //put the back sign\n                        if (c)\n                            result = _.multiply(result, c);\n                }\n                else if (bIsInt && !m.equals(1)) {\n                    var abs_b = b.abs();     \n                    // Provide fall back to JS until big number implementation is improved\n                    if(abs_b.gt(Settings.MAX_EXP)) {\n                        if(b.sign() < 0)\n                            return new Symbol(0);\n                        return Symbol.infinity();\n                    }\n                    else {\n                        var p = b.multiplier.toDecimal();\n                        var sgn = Math.sign(p);\n                        p = Math.abs(p);\n                        var multiplier = new Frac(1);\n                        multiplier.num = m.num.pow(p);\n                        multiplier.den = m.den.pow(p);\n                        if (sgn < 0)\n                            multiplier.invert();\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\n                        result.multiplier = result.multiplier.multiply(multiplier);\n                    }\n                }\n                else { \n                    var sign = a.sign();\n                    if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\n                        if (b.multiplier.den.equals(2)) {\n                            var i = new Symbol(Settings.IMAGINARY);\n                            a.negate();//remove the sign\n                            //if the power is negative then i is negative\n                            if (b.lessThan(0)) {\n                                i.negate();\n                                b.negate();//remove the sign from the power\n                            }\n                            //pull the power normally and put back the imaginary\n                            result = _.multiply(_.pow(a, b), i);\n                        }\n                        else {\n//                            if(a.equals(-1)) {\n//                                var theta = _.multiply(b, _.parse('pi'));\n//                                result = evaluate(_.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta))));\n//                            }\n//                            else {\n                            var aa = a.clone();\n                            aa.multiplier.negate();\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\n                            var r = _.divide(_a, _b);\n                            result = _.multiply(result, r);\n//                            }  \n                        }\n                    }\n                    else if (Settings.PARSE2NUMBER && b.isImaginary()) {\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\n                        var re, im, aa, a1, b1, c1;\n                        aa = a.clone().toLinear();\n                        re = b.realpart();\n                        im = b.imagpart();\n                        a1 = _.pow(aa.clone(), re);\n                        b1 = trig.cos(_.multiply(im.clone(), log(aa.clone())));\n                        c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\n                        result = _.multiply(a1, _.add(b1, c1));\n                        result = _.expand(_.parse(result));\n                    }\n                    else {\n                        //b is a symbol\n                        var neg_num = a.group === N && sign < 0,\n                                num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n                                den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\n\n                        //eliminate imaginary if possible\n                        if (a.imaginary) {\n                            if (bIsInt) {\n                                var s, p, n;\n                                s = Math.sign(b);\n                                p = abs(b);\n                                n = p % 4;\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\n                                if (n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\n                                    result.negate();\n                                }\n                            }\n                            else {\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\n                                        tn = Math.pow(-1, nr.num);\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\n                            }\n                        }\n                        //ensure that the sign is carried by the symbol and not the multiplier\n                        //this enables us to check down the line if the multiplier can indeed be transferred\n                        if (sign < 0 && !neg_num)\n                            result.negate();\n\n                        //retain the absolute value\n                        if (bIsConstant && a.group !== EX) {\n                            var evenr = even(b.multiplier.den),\n                                    evenp = even(a.power),\n                                    n = result.power.toDecimal(),\n                                    evennp = even(n);\n                            if (evenr && evenp && !evennp) {\n                                if (n === 1)\n                                    result = _.symfunction(ABS, [result]);\n                                else if (!isInt(n)) {\n                                    var p = result.power;\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\n                                }\n                                else {\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\n                                            result.clone().setPower(new Frac(n - 1)));\n                                }\n                                //quick workaround. Revisit\n                                if (Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\n                                    result = result.args[0];\n                            }\n                        }\n                    }\n                }\n\n                result = testSQRT(result);\n\n                //don't multiply until we've tested the remaining symbol\n                if (num && den)\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\n\n                //reduce square root\n                if (result.fname === SQRT) {\n                    var isEX = result.group === EX;\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n                    if (even(t)) {\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\n                                m = result.multiplier;\n                        result = _.pow(result.args[0], pt);\n                        result.multiplier = result.multiplier.multiply(m);\n                    }\n                }\n                //detect Euler's identity\n                else if (!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\n                        && result.power.contains(Settings.IMAGINARY)) {\n                    var theta = b.stripVar(Settings.IMAGINARY);\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\n//                    //we have a match\n//                    var m1 = result.multiplier,\n//                            m2 = result.power.multiplier;\n//                    result = new Symbol(even(m2.num) ? m1 : m1.negate());\n//                    result = _.pow(result, new Symbol(m2.den).invert());\n                }\n                \n                return result;\n            }\n            else {\n                if (isVector(a) && bIsSymbol) {\n                    a = a.map(function (x) {\n                        return _.pow(x, b.clone());\n                    });\n                }\n                else if (isMatrix(a) && bIsSymbol) {\n                    a.eachElement(function (x) {\n                        return _.pow(x, b.clone());\n                    });\n                }\n                return a;\n            }\n        };\n        //gets called when the parser finds the , operator. \n        //Commas return a Collector object which roughly an array\n        this.comma = function (a, b) {\n            if (!(a instanceof Collection))\n                a = Collection.create(a);\n            a.append(b);\n            return a;\n        };\n        //link to modulus\n        this.mod = function (a, b) {\n            return mod(a, b);\n        };\n        //used to slice elements from arrays\n        this.slice = function (a, b) {\n            return new Slice(a, b);\n        };\n        //the equality setter\n        this.equals = function (a, b) {\n            //equality can only be set for group S so complain it's not\n            if (a.group !== S && !a.isLinear())\n                err('Cannot set equality for ' + a.toString());\n            VARS[a.value] = b.clone();\n            return b;\n        };\n        //percent\n        this.percent = function (a) {\n            return _.divide(a, new Symbol(100));\n        };\n        //set variable\n        this.assign = function (a, b) {\n            if (a instanceof Collection && b instanceof Collection) {\n                a.elements.map(function (x, i) {\n                    return _.assign(x, b.elements[i]);\n                });\n                return Vector.fromArray(b.elements);\n            }\n            if(a.parent) {\n                //it's referring to the parent instead. The current item can be discarded\n                var e = a.parent;\n                e.elements[e.getter] = b;\n                delete e.getter;\n                return e;\n            }\n            \n            if (a.group !== S)\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n            VARS[a.value] = b;\n            return b;\n        };\n        this.function_assign = function (a, b) {\n            var f = a.elements.pop();\n            return setFunction(f, a.elements, b);\n        };\n        //function to quickly convert bools to Symbols\n        var bool2Symbol = function (x) {\n            return new Symbol(x === true ? 1 : 0);\n        };\n        //check for equality\n        this.eq = function (a, b) {\n            return bool2Symbol(a.equals(b));\n        };\n        //checks for greater than\n        this.gt = function (a, b) {\n            return bool2Symbol(a.gt(b));\n        };\n        //checks for greater than equal\n        this.gte = function (a, b) {\n            return bool2Symbol(a.gte(b));\n        };\n        //checks for less than\n        this.lt = function (a, b) {\n            return bool2Symbol(a.lt(b));\n        };\n        //checks for less than equal\n        this.lte = function (a, b) {\n            return bool2Symbol(a.lte(b));\n        };\n        //wraps the factorial\n        this.factorial = function (a) {\n            return this.symfunction(FACTORIAL, [a]);\n        };\n        //wraps the double factorial\n        this.dfactorial = function (a) {\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\n        };\n    }\n    ;\n\n    /* \"STATIC\" */\n    //converts a number to a fraction. \n    var Fraction = {\n        /**\n         * Converts a decimal to a fraction\n         * @param {number} value\n         * @param {object} opts\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        convert: function (value, opts) {\n            var frac;\n            if (value === 0) {\n                frac = [0, 1];\n            }\n            else {\n                if (value < 1e-6 || value > 1e20) {\n                    var qc = this.quickConversion(Number(value));\n                    if (qc[1] <= 1e20) {\n                        var abs = Math.abs(value);\n                        var sign = value / abs;\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n                        frac[0] = frac[0] * sign;\n                    }\n                    else {\n                        frac = qc;\n                    }\n                }\n                else {\n                    frac = this.fullConversion(value);\n                }\n            }\n            return frac;\n        },\n        /**\n         * If the fraction is too small or too large this gets called instead of fullConversion method\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        quickConversion: function (dec) {\n            var x = (dec.toExponential() + '').split('e');\n            var d = x[0].split('.')[1];// get the number of places after the decimal\n            var l = (d ? d.length : 0)-parseInt(x[1]); // maybe the coefficient is an integer;\n            //call Math.round to avoid rounding error\n            return [Math.round(Math.pow(10, l) * x[0]), Math.pow(10, Math.abs(x[1]) + l)];\n        },\n        /**\n         * Returns a good approximation of a fraction. This method gets called by convert\n         * http://mathforum.org/library/drmath/view/61772.html\n         * Decimal To Fraction Conversion - A Simpler Version\n         * Dr Peterson\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        fullConversion: function (dec) {\n            var done = false;\n            //you can adjust the epsilon to a larger number if you don't need very high precision\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\n            while (!done) {\n                n++;\n                if (n > 10000) {\n                    done = true;\n                }\n                var a = Math.floor(q);\n                var num = n1 + a * n2;\n                var den = d1 + a * d2;\n                var e = (q - a);\n                if (e < epsilon) {\n                    done = true;\n                }\n                q = 1 / e;\n                n1 = n2;\n                d1 = d2;\n                n2 = num;\n                d2 = den;\n                if (Math.abs(num / den - dec) < epsilon || n > 30) {\n                    done = true;\n                }\n            }\n            return [num, den];\n        }\n    };\n    //Depends on Fraction\n\n    //The latex generator\n    var LaTeX = {\n        parser: (function () {\n            //create a parser and strip it from everything except the items that you need\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\n            var parser = new Parser();\n            for (var x in parser) {\n                if (keep.indexOf(x) === -1)\n                    delete parser[x];\n            }\n            //declare the operators\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\,',\n                action: 'slash_comma',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            //have braces not map to anything. We want them to be return as-is\n            var brackets = parser.getBrackets();\n            brackets['{'].maps_to = undefined;\n            return parser;\n        })(),\n        space: '~',\n        dot: ' \\\\cdot ',\n        //grab a list of supported functions but remove the excluded ones found in exclFN\n\n        latex: function (symbol, option) {\n            //it might be an array\n            if (symbol.clone) {\n                symbol = symbol.clone(); //leave original as-is\n            }\n            if (symbol instanceof _.classes.Collection)\n                symbol = symbol.elements;\n\n            if (isArray(symbol)) {\n                var LaTeXArray = [];\n                for (var i = 0; i < symbol.length; i++) {\n                    var sym = symbol[i];\n                    //This way I can generate LaTeX on an array of strings.\n                    if (!isSymbol(sym))\n                        sym = _.parse(sym);\n                    LaTeXArray.push(this.latex(sym, option));\n                }\n                return this.brackets(LaTeXArray.join(', '), 'square');\n            }\n\n            else if (isMatrix(symbol)) {\n                var TeX = '\\\\begin{pmatrix}\\n';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    var rowTeX = [],\n                            e = symbol.elements[i];\n                    for (var j = 0; j < e.length; j++) {\n                        rowTeX.push(this.latex(e[j], option));\n                    }\n                    TeX += rowTeX.join(' & ');\n                    if (i < symbol.elements.length - 1) {\n                        TeX += '\\\\\\\\\\n';\n                    }\n                }\n                TeX += '\\\\end{pmatrix}';\n                return TeX;\n            }\n\n            else if (isVector(symbol)) {\n                var TeX = '\\\\left[';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\right]';\n                return TeX;\n            }\n            \n            else if(isSet(symbol)) {\n                var TeX = '\\\\{';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\}';\n                return TeX;\n            }\n\n            symbol = symbol.clone();\n            var decimal = (option === 'decimal' || option === 'decimals'),\n                    power = symbol.power,\n                    invert = isNegative(power),\n                    negative = symbol.multiplier.lessThan(0);\n\n            if (symbol.group === P && decimal) {\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\n            }\n            else {\n                symbol.multiplier = symbol.multiplier.abs();\n\n                //if the user wants the result in decimal format then return it as such by placing it at the top part\n                var m_array;\n\n                if (decimal) {\n                    var m = String(symbol.multiplier.toDecimal());\n                    //if(String(m) === '1' && !decimal) m = '';\n                    m_array = [m, ''];\n                }\n                else {\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\n                }\n                //get the value as a two part array\n                var v_array = this.value(symbol, invert, option, negative),\n                        p;\n                //make it all positive since we know whether to push the power to the numerator or denominator already.\n                if (invert)\n                    power.negate();\n                //the power is simple since it requires no additional formatting. We can get it to a\n                //string right away. pass in true to neglect unit powers\n                if (decimal) {\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\n                    if (String(p) === '1')\n                        p = '';\n                }\n                //get the latex representation\n                else if (isSymbol(power))\n                    p = this.latex(power, option);\n                //get it as a fraction\n                else\n                    p = this.formatFrac(power, true);\n                //use this array to specify if the power is getting attached to the top or the bottom\n                var p_array = ['', ''],\n                        //stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\n                        index = invert ? 1 : 0;\n                p_array[index] = p;\n\n                //special case group P and decimal\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\n\n                return retval.replace(/\\+\\-/gi, '-');\n            }\n\n        },\n        //greek mapping\n        greek: {\n            alpha: '\\\\alpha',\n            beta: '\\\\beta',\n            gamma: '\\\\gamma',\n            delta: '\\\\delta',\n            epsilon: '\\\\epsilon',\n            zeta: '\\\\zeta',\n            eta: '\\\\eta',\n            theta: '\\\\theta',\n            iota: '\\\\iota',\n            kappa: '\\\\kappa',\n            lambda: '\\\\lambda',\n            mu: '\\\\mu',\n            nu: '\\\\nu',\n            xi: '\\\\xi',\n            omnikron: '\\\\omnikron',\n            pi: '\\\\pi',\n            rho: '\\\\rho',\n            sigma: '\\\\sigma',\n            tau: '\\\\tau',\n            upsilon: '\\\\upsilon',\n            phi: '\\\\phi',\n            chi: '\\\\chi',\n            psi: '\\\\psi',\n            omega: '\\\\omega',\n            Gamma: '\\\\Gamma',\n            Delta: '\\\\Delta',\n            Epsilon: '\\\\Epsilon',\n            Theta: '\\\\Theta',\n            Lambda: '\\\\Lambda',\n            Xi: '\\\\Xi',\n            Pi: '\\\\Pi',\n            Sigma: '\\\\Sigma',\n            Phi: '\\\\Phi',\n            Psi: '\\\\Psi',\n            Omega: '\\\\Omega'\n        },\n        symbols: {\n            arccos: '\\\\arccos',\n            cos: '\\\\cos',\n            csc: '\\\\csc',\n            exp: '\\\\exp',\n            ker: '\\\\ker',\n            limsup: '\\\\limsup',\n            min: '\\\\min',\n            sinh: '\\\\sinh',\n            arcsin: '\\\\arcsin',\n            cosh: '\\\\cosh',\n            deg: '\\\\deg',\n            gcd: '\\\\gcd',\n            lg: '\\\\lg',\n            ln: '\\\\ln',\n            Pr: '\\\\Pr',\n            sqrt: '\\\\sqrt',\n            sup: '\\\\sup',\n            arctan: '\\\\arctan',\n            cot: '\\\\cot',\n            det: '\\\\det',\n            hom: '\\\\hom',\n            lim: '\\\\lim',\n            log: '\\\\log',\n            LN:  '\\\\LN',\n            sec: '\\\\sec',\n            tan: '\\\\tan',\n            arg: '\\\\arg',\n            coth: '\\\\coth',\n            dim: '\\\\dim',\n            inf: '\\\\inf',\n            liminf: '\\\\liminf',\n            max: '\\\\max',\n            sin: '\\\\sin',\n            tanh: '\\\\tanh'\n        },\n        //get the raw value of the symbol as an array\n        value: function (symbol, inverted, option, negative) {\n            var group = symbol.group,\n                    previousGroup = symbol.previousGroup,\n                    v = ['', ''],\n                    index = inverted ? 1 : 0;\n            /*if(group === N) //do nothing since we want to return top & bottom blank; */\n            if (symbol.isInfinity) {\n                v[index] = '\\\\infty';\n            }\n            else if (group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\n                var value = symbol.value;\n                if (value.replace)\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\n                //split it so we can check for instances of alpha as well as alpha_b\n                var t_varray = String(value).split('_');\n                var greek = this.greek[t_varray[0]];\n                if (greek) {\n                    t_varray[0] = greek;\n                    value = t_varray.join('_');\n                }\n                var symbol = this.symbols[t_varray[0]];\n                if (symbol) {\n                    t_varray[0] = symbol;\n                    value = t_varray.join('_');\n                }\n                v[index] = value;\n            }\n            else if (group === FN || previousGroup === FN) {\n                var name,\n                        input = [],\n                        fname = symbol.fname;\n                //collect the arguments\n                for (var i = 0; i < symbol.args.length; i++) {\n                    var arg = symbol.args[i], item;\n                    if (typeof arg === 'string')\n                        item = arg;\n                    else {\n                        item = this.latex(arg, option);\n                    }\n                    input.push(item);\n                }\n\n                if (fname === SQRT) {\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\n                }\n                else if (fname === ABS) {\n                    v[index] = this.brackets(input.join(','), 'abs');\n                }\n                else if (fname === PARENTHESIS) {\n                    v[index] = this.brackets(input.join(','), 'parens');\n                }\n                else if (fname === 'limit') {\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\n                }\n                else if (fname === 'integrate') {\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\n                }\n                else if (fname === 'defint') {\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\n                }\n                else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n                    var arg = symbol.args[0];\n                    if (arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\n                        input[0] = this.brackets(input[0]);\n                    }\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\n                }\n                else if (fname === 'floor') {\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\n                }\n                else if (fname === 'ceil') {\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG && input.length > 1) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG10) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\n                }\n                else if (fname === 'sum') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'product') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'nthroot') {\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\n                }\n                else if (fname === 'mod') {\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\n                }\n                else if (fname === 'realpart') {\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\n                }\n                else if (fname === 'imagpart') {\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\n                }\n                else {\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\n                    if (symbol.isConversion)\n                        v[index] = name + this.brackets(input.join(''), 'parens');\n                    else\n                        v[index] = name + this.brackets(input.join(','), 'parens');\n                }\n            }\n            else if (symbol.isComposite()) {\n                var collected = symbol.collectSymbols().sort(\n                        group === CP || previousGroup === CP ?\n                        function (a, b) {\n                            return b.group - a.group;\n                        } :\n                        function (a, b) {\n                            var x = isSymbol(a.power) ? -1 : a.power;\n                            var y = isSymbol(b.power) ? -1 : b.power;\n                            return y - x;\n                        }\n                ),\n                        symbols = [],\n                        l = collected.length;\n                for (var i = 0; i < l; i++) {\n                    symbols.push(LaTeX.latex(collected[i], option));\n                }\n                var value = symbols.join('+');\n\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\n            }\n            else if (group === CB || previousGroup === EX || previousGroup === CB) {\n                if (group === CB)\n                    symbol.distributeExponent();\n                //this almost feels a little like cheating but I need to know if I should be wrapping the symbol\n                //in brackets or not. We'll do this by checking the value of the numerator and then comparing it \n                //to whether the symbol value is \"simple\" or not.\n                var denominator = [],\n                        numerator = [];\n                //generate a profile\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\n                var setBrackets = function (container, map, counter) {\n                    if (counter > 1 && map.length > 0) {\n                        var l = map.length;\n                        for (var i = 0; i < l; i++) {\n                            var idx = map[i], item = container[idx];\n                            if (!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\n                                container[idx] = LaTeX.brackets(item, 'parens');\n                            }\n                        }\n                    }\n                    return container;\n                };\n\n                //generate latex for each of them\n                symbol.each(function (x) {\n                    var isDenom = isNegative(x.power),\n                            laTex;\n\n                    if (isDenom) {\n                        laTex = LaTeX.latex(x.invert(), option);\n                        den_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            den_map.push(denominator.length); //make a note of where the composite was found \n                        }\n\n                        denominator.push(laTex);\n                    }\n                    else {\n                        laTex = LaTeX.latex(x, option);\n                        num_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            num_map.push(numerator.length);   //make a note of where the composite was found \n                        }\n                        numerator.push(laTex);\n                    }\n                });\n\n                //apply brackets\n                setBrackets(numerator, num_map, num_c);\n                v[0] = numerator.join(this.dot); //collapse the numerator into one string\n\n                setBrackets(denominator, den_map, den_c);\n                v[1] = denominator.join(this.dot);\n            }\n\n            return v;\n        },\n        set: function (m, v, p, combine_power) {\n            var isBracketed = function (v) {\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\n            };\n            //format the power if it exists\n            if (p)\n                p = this.formatP(p);\n            //group CB will have to be wrapped since the power applies to both it's numerator and denominator\n            if (combine_power) {\n                //POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\n                //the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\n                //of a case where this isn't true\n                var tp = p[0];\n                p[0] = ''; //temporarily make p blank\n            }\n\n            //merge v and p. Not that v MUST be first since the order matters\n            v = this.merge(v, p);\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\n            //filters\n            //if the top has a variable but the numerator is one drop it\n            if (vn && Number(mn) === 1)\n                mn = '';\n            //if denominator is 1 drop it always\n            if (Number(md) === 1)\n                md = '';\n            //prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\n\n            //prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\n            //format the power if it exists\n            //make it a fraction if both top and bottom exists\n            if (top && bottom) {\n                var frac = this.frac(top, bottom);\n                if (combine_power && tp)\n                    frac = this.brackets(frac) + tp;\n                return frac;\n            }\n            //otherwise only the top exists so return that\n            else\n                return top;\n        },\n        merge: function (a, b) {\n            var r = [];\n            for (var i = 0; i < 2; i++)\n                r[i] = a[i] + b[i];\n            return r;\n        },\n        //joins together two strings if both exist\n        join: function (n, d, glue) {\n            if (!n && !d)\n                return '';\n            if (n && !d)\n                return n;\n            if (d && !n)\n                return d;\n            return n + glue + d;\n        },\n        formatP: function (p_array) {\n            for (var i = 0; i < 2; i++) {\n                var p = p_array[i];\n                if (p)\n                    p_array[i] = '^' + this.braces(p);\n            }\n            return p_array;\n        },\n        /**\n         * formats the fractions accordingly.\n         * @param {Frac} f\n         * @param {bool} is_pow\n         */\n        formatFrac: function (f, is_pow) {\n            var n = f.num.toString(),\n                    d = f.den.toString();\n            //no need to have x^1\n            if (is_pow && n === '1' && d === '1')\n                return '';\n            //no need to have x/1\n            if (d === '1')\n                return n;\n            return this.frac(n, d);\n        },\n        frac: function (n, d) {\n            return '\\\\frac' + this.braces(n) + this.braces(d);\n        },\n        braces: function (e) {\n            return '{' + e + '}';\n        },\n        brackets: function (e, typ) {\n            typ = typ || 'parens';\n            var bracketTypes = {\n                parens: ['(', ')'],\n                square: ['[', ']'],\n                brace: ['{', '}'],\n                abs: ['|', '|'],\n                angle: ['\\\\langle', '\\\\rangle']\n            };\n            var bracket = bracketTypes[typ];\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\n        },\n        /**\n         * Removes extreneous tokens\n         * @param {Tokens[]} tokens\n         * @returns {Tokens[]}\n         */\n        filterTokens: function (tokens) {\n            var filtered = [];\n            //the items that need to be disposed\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\n            for (var i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                if (isArray(token))\n                    filtered.push(LaTeX.filterTokens(token));\n                else if (d.indexOf(token.value) === -1)\n                    filtered.push(token);\n            }\n            return filtered;\n        },\n        /*\n         * Parses tokens from LaTeX string. Does not do any error checking\n         * @param {Tokens[]} rpn\n         * @returns {String}\n         */\n        parse: function (raw_tokens) {\n            var i, l;\n            var retval = '';\n            var tokens = this.filterTokens(raw_tokens);\n            var replace = {\n                'cdot': '*',\n                'times': '*',\n                'infty': 'Infinity'\n            };\n            //get the next token\n            var next = function () {\n                return tokens[++i];\n            };\n            var parse_next = function () {\n                return LaTeX.parse(next());\n            };\n            var get = function (token) {\n                if (token in replace)\n                    return replace[token];\n                return token;\n            };\n\n            //start parsing the tokens\n            for (i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                //fractions\n                if (token.value === 'frac') {\n                    //parse and wrap it in brackets\n                    var n = parse_next();\n                    var d = parse_next();\n                    retval += n + '/' + d;\n                }\n                else if (token.value in LaTeX.symbols) {\n                    retval += token.value + parse_next();\n                }\n                else if (token.value === 'int') {\n                    var f = parse_next();\n                    //skip the comma\n                    i++;\n                    //get the variable of integration\n                    var dx = next().value;\n                    dx = get(dx.substring(1, dx.length));\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\n                }\n                else if (token.value === 'mathrm') {\n                    var f = tokens[++i][0].value;\n                    retval += f + parse_next();\n                }\n                //sum and product\n                else if (token.value === 'sum_' || token.value === 'prod_') {\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\n                    var nxt = next();\n                    i++; //skip the caret\n                    var end = parse_next();\n                    var f = parse_next();\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\n                }\n                else if (token.value === 'lim_') {\n                    var nxt = next();\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\n                }\n                else {\n                    if(Array.isArray(token)) {\n                        retval += get(LaTeX.parse(token));\n                    }\n                    else\n                        retval += get(token.value.toString());\n                }\n            }\n            return inBrackets(retval);\n        }\n    };\n//Vector =======================================================================    \n    function Vector(v) {\n        if (isVector(v))\n            this.elements = v.items.slice(0);\n        else if (isArray(v))\n            this.elements = v.slice(0);\n        else\n            this.elements = [].slice.call(arguments);\n    }\n    /*\n     * Generates a pre-filled array\n     * @param {type} n\n     * @param {type} val\n     * @returns {unresolved}\n     */\n    Vector.arrayPrefill = function (n, val) {\n        var a = [];\n        val = val || 0;\n        for (var i = 0; i < n; i++)\n            a[i] = val;\n        return a;\n    };\n    /**\n     * Generate a vector from and array\n     * @param {type} a\n     * @returns {unresolved}\n     */\n    Vector.fromArray = function (a) {\n        var v = new Vector();\n        v.elements = a;\n        return v;\n    };\n    \n    /**\n     * Convert a Set to a Vector\n     * @param {Set} set\n     * @returns {Vector}\n     */\n    Vector.fromSet = function(set) {\n        return Vector.fromArray(set.elements);\n    };\n    \n    //Ported from Sylvester.js\n    Vector.prototype = {\n        custom: true,\n        // Returns element i of the vector\n        e: function (i) {\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\n        },\n\n        set: function (i, val) {\n            if (!isSymbol(val))\n                val = new Symbol(val);\n            this.elements[i] = val;\n        },\n\n        // Returns the number of elements the vector has\n        dimensions: function () {\n            return this.elements.length;\n        },\n\n        // Returns the modulus ('length') of the vector\n        modulus: function () {\n            return block('SAFE', function () {\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is equal to the argument\n        eql: function (vector) {\n            var n = this.elements.length;\n            var V = vector.elements || vector;\n            if (n !== V.length) {\n                return false;\n            }\n            do {\n                if (Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\n                    return false;\n                }\n            }\n            while (--n);\n            return true;\n        },\n\n        // Returns a clone of the vector\n        clone: function () {\n            var V = new Vector(),\n                    l = this.elements.length;\n            for (var i = 0; i < l; i++) {\n                //Rule: all items within the vector must have a clone method.\n                V.elements.push(this.elements[i].clone());\n            }\n            if (this.getter) {\n                V.getter = this.getter.clone();\n            }\n            return V;\n        },\n\n        // Maps the vector to another vector according to the given function\n        map: function (fn) {\n            var elements = [];\n            this.each(function (x, i) {\n                elements.push(fn(x, i));\n            });\n\n            return new Vector(elements);\n        },\n\n        // Calls the iterator for each element of the vector in turn\n        each: function (fn) {\n            var n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                fn(this.elements[i], i + 1);\n            }\n            while (--n);\n        },\n\n        // Returns a new vector created by normalizing the receiver\n        toUnitVector: function () {\n            return block('SAFE', function () {\n                var r = this.modulus();\n                if (r.valueOf() === 0) {\n                    return this.clone();\n                }\n                return this.map(function (x) {\n                    return _.divide(x, r);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the angle between the vector and the argument (also a vector)\n        angleFrom: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\n                // Work things out in parallel to save time\n                this.each(function (x, i) {\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\n                    mod1 = _.add(mod1, _.multiply(x, x));//will not conflict in safe block\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));//will not conflict in safe block\n                });\n                mod1 = _.pow(mod1, new Symbol(0.5));\n                mod2 = _.pow(mod2, new Symbol(0.5));\n                var product = _.multiply(mod1, mod2);\n                if (product.valueOf() === 0) {\n                    return null;\n                }\n                var theta = _.divide(dot, product);\n                var theta_val = theta.valueOf();\n                if (theta_val < -1) {\n                    theta = -1;\n                }\n                if (theta_val > 1) {\n                    theta = 1;\n                }\n                return new Symbol(Math.acos(theta));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is parallel to the argument\n        isParallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (angle <= PRECISION);\n        },\n\n        // Returns true iff the vector is antiparallel to the argument\n        isAntiparallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\n        },\n\n        // Returns true iff the vector is perpendicular to the argument\n        isPerpendicularTo: function (vector) {\n            var dot = this.dot(vector);\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\n        },\n\n        // Returns the result of adding the argument to the vector\n        add: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.add(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of subtracting the argument from the vector\n        subtract: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.subtract(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of multiplying the elements of the vector by the argument\n        multiply: function (k) {\n            return this.map(function (x) {\n                return x.clone() * k.clone();\n            });\n        },\n\n        x: function (k) {\n            return this.multiply(k);\n        },\n\n        // Returns the scalar product of the vector with the argument\n        // Both vectors must have equal dimensionality\n        dot: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var product = new Symbol(0), n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                do {\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\n                }\n                while (--n);\n                return product;\n            }, undefined, this);\n        },\n\n        // Returns the vector product of the vector with the argument\n        // Both vectors must have dimensionality 3\n        cross: function (vector) {\n            var B = vector.elements || vector;\n            if (this.elements.length !== 3 || B.length !== 3) {\n                return null;\n            }\n            var A = this.elements;\n            return block('SAFE', function () {\n                return new Vector([\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\n                ]);\n            }, undefined, this);\n        },\n\n        // Returns the (absolute) largest element of the vector\n        max: function () {\n            var m = 0, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\n                    m = this.elements[i];\n                }\n            }\n            while (--n);\n            return m;\n        },\n        magnitude: function() {\n            var magnitude = new Symbol(0);\n            this.each(function(e) {\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\n            });\n            return _.sqrt(magnitude);\n        },\n        // Returns the index of the first match found\n        indexOf: function (x) {\n            var index = null, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (index === null && this.elements[i].valueOf() === x.valueOf()) {\n                    index = i + 1;\n                }\n            }\n            while (--n);\n            return index;\n        },\n        text: function (x) {\n            return text(this);\n        },\n        toString: function () {\n            return this.text();\n        },\n        latex: function (option) {\n            var tex = [];\n            for (var i = 0; i < this.elements.length; i++) {\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\n            }\n            return '[' + tex.join(', ') + ']';\n        }\n    };\n\n//Matrix =======================================================================\n    function Matrix() {\n        var m = arguments,\n                l = m.length, i, el = [];\n        if (isMatrix(m)) { //if it's a matrix then make a clone\n            for (i = 0; i < l; i++) {\n                el.push(m[i].slice(0));\n            }\n        }\n        else {\n            var row, lw, rl;\n            for (i = 0; i < l; i++) {\n                row = m[i];\n                if (isVector(row))\n                    row = row.elements;\n                if (!isArray(row))\n                    row = [row];\n                rl = row.length;\n                if (lw && lw !== rl)\n                    err('Unable to create Matrix. Row dimensions do not match!');\n                el.push(row);\n                lw = rl;\n            }\n        }\n        this.elements = el;\n    }\n    Matrix.identity = function (n) {\n        var m = new Matrix();\n        for (var i = 0; i < n; i++) {\n            m.elements.push([]);\n            for (var j = 0; j < n; j++) {\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\n            }\n        }\n        return m;\n    };\n    Matrix.fromArray = function (arr) {\n        function F(args) {\n            return Matrix.apply(this, args);\n        }\n        F.prototype = Matrix.prototype;\n\n        return new F(arr);\n    };\n    Matrix.zeroMatrix = function (rows, cols) {\n        var m = new Matrix();\n        for (var i = 0; i < rows; i++) {\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\n        }\n        return m;\n    };\n    Matrix.prototype = {\n        //needs be true to let the parser know not to try to cast it to a symbol\n        custom: true,\n        get: function (row, column) {\n            if (!this.elements[row])\n                return undefined;\n            return this.elements[row][column];\n        },\n        map: function(f, raw_values) {\n            var M = new Matrix();\n            this.each(function(e, i, j) {\n                M.set( i, j, f.call(M, e), raw_values);\n            });\n            return M;\n        },\n        set: function (row, column, value, raw) {\n            if (!this.elements[row])\n                this.elements[row] = [];\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\n        },\n        cols: function () {\n            return this.elements[0].length;\n        },\n        rows: function () {\n            return this.elements.length;\n        },\n        row: function (n) {\n            if (!n || n > this.cols())\n                return [];\n            return this.elements[n - 1];\n        },\n        col: function (n) {\n            var nr = this.rows(),\n                    col = [];\n            if (n > this.cols() || !n)\n                return col;\n            for (var i = 0; i < nr; i++) {\n                col.push(this.elements[i][n - 1]);\n            }\n            return col;\n        },\n        eachElement: function (fn) {\n            var nr = this.rows(),\n                    nc = this.cols(), i, j;\n            for (i = 0; i < nr; i++) {\n                for (j = 0; j < nc; j++) {\n                    fn.call(this, this.elements[i][j], i, j);\n                }\n            }\n        },\n        //ported from Sylvester.js\n        determinant: function () {\n            if (!this.isSquare()) {\n                return null;\n            }\n            var M = this.toRightTriangular();\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\n            do {\n                i = k - n + 1;\n                det = _.multiply(det, M.elements[i][i]);\n            }\n            while (--n);\n            return det;\n        },\n        isSquare: function () {\n            return this.elements.length === this.elements[0].length;\n        },\n        isSingular: function () {\n            return this.isSquare() && this.determinant() === 0;\n        },\n        augment: function (m) {\n            var r = this.rows(), rr = m.rows();\n            if (r !== rr)\n                err(\"Cannot augment matrix. Rows don't match.\");\n            for (var i = 0; i < r; i++) {\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\n            }\n\n            return this;\n        },\n        clone: function () {\n            var r = this.rows(), c = this.cols(),\n                    m = new Matrix();\n            for (var i = 0; i < r; i++) {\n                m.elements[i] = [];\n                for (var j = 0; j < c; j++) {\n                    var symbol = this.elements[i][j];\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\n                }\n            }\n            return m;\n        },\n        //ported from Sylvester.js\n        invert: function () {\n            if (!this.isSquare())\n                err('Matrix is not square!');\n            return block('SAFE', function () {\n                var ni = this.elements.length, ki = ni, i, j;\n                var imatrix = Matrix.identity(ni);\n                var M = this.augment(imatrix).toRightTriangular();\n                var np, kp = M.elements[0].length, p, els, divisor;\n                var inverse_elements = [], new_element;\n                // Matrix is non-singular so there will be no zeros on the diagonal\n                // Cycle through rows from last to first\n                do {\n                    i = ni - 1;\n                    // First, normalise diagonal elements to 1\n                    els = [];\n                    np = kp;\n                    inverse_elements[i] = [];\n                    divisor = M.elements[i][i];\n                    do {\n                        p = kp - np;\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\n                        els.push(new_element);\n                        // Shuffle of the current row of the right hand side into the results\n                        // array as it will not be modified by later runs through this loop\n                        if (p >= ki) {\n                            inverse_elements[i].push(new_element);\n                        }\n                    }\n                    while (--np);\n                    M.elements[i] = els;\n                    // Then, subtract this row from those above it to\n                    // give the identity matrix on the left hand side\n                    for (j = 0; j < i; j++) {\n                        els = [];\n                        np = kp;\n                        do {\n                            p = kp - np;\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\n                        }\n                        while (--np);\n                        M.elements[j] = els;\n                    }\n                }\n                while (--ni);\n                return Matrix.fromArray(inverse_elements);\n            }, undefined, this);\n        },\n        //ported from Sylvester.js\n        toRightTriangular: function () {\n            return block('SAFE', function () {\n                var M = this.clone(), els, fel, nel,\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\n                do {\n                    i = k - n;\n                    fel = M.elements[i][i];\n                    if (fel.valueOf() === 0) {\n                        for (var j = i + 1; j < k; j++) {\n                            nel = M.elements[j][i];\n                            if (nel && nel.valueOf() !== 0) {\n                                els = [];\n                                np = kp;\n                                do {\n                                    p = kp - np;\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\n                                }\n                                while (--np);\n                                M.elements[i] = els;\n                                break;\n                            }\n                        }\n                    }\n                    var fel = M.elements[i][i];\n                    if (fel.valueOf() !== 0) {\n                        for (j = i + 1; j < k; j++) {\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\n                            els = [];\n                            np = kp;\n                            do {\n                                p = kp - np;\n                                // Elements with column numbers up to an including the number\n                                // of the row that we're subtracting can safely be set straight to\n                                // zero, since that's the point of this routine and it avoids having\n                                // to loop over and correct rounding errors later\n                                els.push(p <= i ? new Symbol(0) :\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\n                            }\n                            while (--np);\n                            M.elements[j] = els;\n                        }\n                    }\n                }\n                while (--n);\n\n                return M;\n            }, undefined, this);\n        },\n        transpose: function () {\n            var rows = this.elements.length, cols = this.elements[0].length;\n            var M = new Matrix(), ni = cols, i, nj, j;\n\n            do {\n                i = cols - ni;\n                M.elements[i] = [];\n                nj = rows;\n                do {\n                    j = rows - nj;\n                    M.elements[i][j] = this.elements[j][i].clone();\n                }\n                while (--nj);\n            }\n            while (--ni);\n            return M;\n        },\n        // Returns true if the matrix can multiply the argument from the left\n        canMultiplyFromLeft: function (matrix) {\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\n            // this.columns should equal matrix.rows\n            return (this.elements[0].length === l);\n        },\n        sameSize: function (matrix) {\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\n        },\n        multiply: function (matrix) {\n            return block('SAFE', function () {\n                var M = matrix.elements || matrix;\n                if (!this.canMultiplyFromLeft(M)) {\n                    if (this.sameSize(matrix)) {\n                        var MM = new Matrix();\n                        var rows = this.rows();\n                        for (var i = 0; i < rows; i++) {\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\n                            MM.elements[i] = e.elements;\n                        }\n                        return MM;\n                    }\n                    return null;\n                }\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\n                do {\n                    i = ki - ni;\n                    elements[i] = [];\n                    nj = kj;\n                    do {\n                        j = kj - nj;\n                        sum = new Symbol(0);\n                        nc = cols;\n                        do {\n                            c = cols - nc;\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\n                        }\n                        while (--nc);\n                        elements[i][j] = sum;\n                    }\n                    while (--nj);\n                }\n                while (--ni);\n                return Matrix.fromArray(elements);\n            }, undefined, this);\n        },\n        add: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        subtract: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        negate: function () {\n            this.each(function (e) {\n                return e.negate();\n            });\n            return this;\n        },\n        toVector: function () {\n            if (this.rows() === 1 || this.cols() === 1) {\n                var v = new Vector();\n                v.elements = this.elements;\n                return v;\n            }\n            return this;\n        },\n        toString: function (newline, to_decimal) {\n            var l = this.rows(),\n                    s = [];\n            newline = newline === undefined ? '\\n' : newline;\n            for (var i = 0; i < l; i++) {\n                s.push('[' + this.elements[i].map(function (x) {\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\n                    return x !== undefined ? v : '';\n                }).join(',') + ']');\n            }\n            return 'matrix' + inBrackets(s.join(','));\n        },\n        text: function () {\n            return 'matrix(' + this.elements.toString('') + ')';\n        },\n        latex: function (option) {\n            var cols = this.cols(), elements = this.elements;\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\n                var tex = [];\n                for (var row in elements) {\n                    var row_tex = [];\n                    for (var i = 0; i < cols; i++) {\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\n                    }\n                    tex.push(row_tex.join(' & '));\n                }\n                return tex.join(' \\\\cr ');\n            });\n        }\n    };\n    //aliases\n    Matrix.prototype.each = Matrix.prototype.eachElement;\n\n\n    function Set(set) {\n        this.elements = [];\n        //if the first object isn't an array, convert it to one.\n        if(!isVector(set))\n            set = Vector.fromArray(arguments);\n        \n        if(set) { \n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                this.add(elements[i]);\n            }\n        }\n    }\n    \n    Set.fromArray = function (arr) {\n        function F(args) {\n            return Set.apply(this, args);\n        }\n        F.prototype = Set.prototype;\n\n        return new F(arr);\n    };\n    \n    Set.prototype = {\n        add: function(x) {\n            if(!this.contains(x))\n                this.elements.push(x.clone());\n        },\n        contains: function(x) {\n            for(var i=0; i<this.elements.length; i++) {\n                var e = this.elements[i];\n                if(x.equals(e))\n                    return true;\n            }\n            return false;\n        },\n        each: function(f) {\n            var elements = this.elements;\n            var set = new Set();\n            for(var i=0, l=elements.length; i<l; i++) {\n                var e = elements[i];\n                f.call(this, e, set, i);\n            }\n            return set;\n        },\n        clone: function() {\n            var set = new Set();\n            this.each(function(e) {\n                set.add(e.clone());\n            });\n            return set;\n        },\n        union: function(set) {\n            var _union = this.clone();\n            set.each(function(e) {\n                _union.add(e);\n            });\n            \n            return _union;\n        },\n        difference: function(set) {\n            var diff = this.clone();\n            set.each(function(e) {\n                diff.remove(e);\n            });\n            return diff;\n        },\n        remove: function(element) {\n            for(var i=0, l=this.elements.length; i<l; i++) {\n                var e = this.elements[i];\n                if(e.equals(element)) {\n                    remove(this.elements, i);\n                    return true;\n                }\n            }\n            return false;\n        },\n        intersection: function(set) { \n            var _intersection = new Set();\n            var A = this;\n            set.each(function(e) {\n                if(A.contains(e)) {\n                    _intersection.add(e);\n                };\n            });\n            \n            return _intersection;\n        },\n        intersects: function(set) {\n            return this.intersection(set).elements.length > 0;\n        },\n        is_subset: function(set) {\n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                if(!this.contains(elements[i])) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        toString: function() {\n            return '{'+this.elements.join(',')+'}';\n        }\n    };\n\n//build ========================================================================\n    var Build = {\n        dependencies: {\n            _rename: {\n                'Math2.factorial': 'factorial'\n            },\n            factorial: {\n                'Math2.gamma': Math2.gamma\n            },\n            gamma_incomplete: {\n                'Math2.factorial': Math2.factorial\n            },\n            Li: {\n                'Math2.Ei': Math2.Ei,\n                'Math2.bigLog': Math2.bigLog,\n                'Frac': Frac\n            },\n            Ci: {\n                'Math2.factorial': Math2.factorial\n            },\n            Ei: {\n                'Math2.factorial': Math2.factorial\n            },\n            Si: {\n                'Math2.factorial': Math2.factorial\n            },\n            Shi: {\n                'Math2.factorial': Math2.factorial\n            },\n            Chi: {\n                'isInt': isInt,\n                'nround': nround,\n                'Math2.num_integrate': Math2.num_integrate\n            },\n            factor: {\n                'Math2.ifactor': Math2.ifactor,\n                'Symbol': Symbol\n            },\n            num_integrate: {\n                'Math2.simpson': Math2.simpson,\n                'nround': nround\n            },\n            fib: {\n                'even': even\n            }\n        },\n        /* Some functions need to be made numeric safe. Build checks if there's a \n         * reformat option and calls that instead when compiling the function string.\n         */\n        reformat: {\n            //this simply extends the build function\n            diff: function(symbol, deps) {\n                var f = 'var f = '+Build.build(symbol.args[0].toString())+';';\n                deps[1] += 'var diff = '+Math2.diff.toString()+';';\n                deps[1] += f;\n\n                return ['diff(f)('+symbol.args[1].toString()+')', deps];\n            }\n        },\n        getProperName: function(f) {\n            var map = {\n                continued_fraction: 'continuedFraction'\n            };\n            return map[f] || f;\n        },\n        //assumes that dependences are at max 2 levels\n        compileDependencies: function(f, deps) {\n            //grab the predefined dependiences\n            var dependencies = Build.dependencies[f];\n\n            //the dependency string\n            var dep_string = deps && deps[1] ? deps[1] : '';\n            \n            //the functions to be replaced\n            var replacements = deps && deps[0] ? deps[0] : {};\n            \n            //loop through them and add them to the list\n            for(var x in dependencies) {\n                if(typeof dependencies[x] === 'object')\n                    continue; //skip object\n                var components = x.split('.'); //Math.f becomes f\n                //if the function isn't part of an object then reference the function itself\n                dep_string += 'var '+(components.length > 1 ? components[1] : components[0])+'='+dependencies[x]+';';\n                replacements[x] = components.pop();\n            }\n            \n            return [replacements, dep_string];\n        },\n        getArgsDeps: function(symbol, dependencies) {\n            var args = symbol.args;\n            for(var i=0; i<args.length; i++) {\n                symbol.args[i].each(function(x) {\n                    if(x.group === FN)\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\n                });\n            }\n            return dependencies;\n        },\n        build: function (symbol, arg_array) {\n            symbol = block('PARSE2NUMBER', function () {\n                return _.parse(symbol);\n            }, true);\n            var args = variables(symbol);\n            var supplements = [];\n            var dependencies = [];\n            var ftext = function (symbol, xports) {\n                xports = xports || [];\n                var c = [],\n                        group = symbol.group,\n                        prefix = '';\n\n                var ftext_complex = function (group) {\n                    var d = group === CB ? '*' : '+',\n                            cc = [];\n\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x],\n                                ft = ftext(sym, xports)[0];\n                        //wrap it in brackets if it's group PL or CP\n                        if (sym.isComposite())\n                            ft = inBrackets(ft);\n                        cc.push(ft);\n                    }\n                    var retval = cc.join(d);\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\n                    return retval;\n                },\n                ftext_function = function (bn) {\n                    var retval;\n                    if (bn in Math)\n                        retval = 'Math.' + bn;\n                    else {\n                        bn = Build.getProperName(bn);\n                        if (supplements.indexOf(bn) === -1) { //make sure you're not adding the function twice\n                            //Math2 functions aren't part of the standard javascript\n                            //Math library and must be exported.\n                            xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\n                            supplements.push(bn);\n                        }\n                        retval = bn;\n                    }\n                    retval = retval + inBrackets(symbol.args.map(function (x) {\n                        return ftext(x, xports)[0];\n                    }).join(','));\n\n                    return retval;\n                };\n                \n                //the multiplier\n                if (group === N)\n                    c.push(symbol.multiplier.toDecimal());\n                else if (symbol.multiplier.equals(-1))\n                    prefix = '-';\n                else if (!symbol.multiplier.equals(1))\n                    c.push(symbol.multiplier.toDecimal());\n                //the value\n                var value;\n\n                if (group === S || group === P)\n                    value = symbol.value;\n                else if (group === FN) {\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\n                    if(Build.reformat[symbol.fname]) {\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\n                        dependencies = components[1];\n                        value = components[0];\n                    }\n                    else {\n                        value =  ftext_function(symbol.fname);\n                    }\n                    \n                }\n                else if (group === EX) {\n                    var pg = symbol.previousGroup;\n                    if (pg === N || pg === S)\n                        value = symbol.value;\n                    else if (pg === FN) {\n                        value = ftext_function(symbol.fname);\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\n                    }\n                    else\n                        value = ftext_complex(symbol.previousGroup);\n                }\n                else {\n                    value = ftext_complex(symbol.group);\n                }\n\n                if (symbol.group !== N && !symbol.power.equals(1)) {\n                    var pow = ftext(_.parse(symbol.power));\n                    xports.push(pow[1]);\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\n                }\n\n                if (value)\n                    c.push(prefix + value);\n\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\n            };\n            if (arg_array) {\n                for (var i = 0; i < args.length; i++) {\n                    var arg = args[i];\n                    if (arg_array.indexOf(arg) === -1)\n                        err(arg + ' not found in argument array');\n                }\n                args = arg_array;\n            }\n\n            var f_array = ftext(symbol);\n            \n            //make all the substitutions;\n            for(var x in dependencies[0]) {\n                var alias = dependencies[0][x];\n                f_array[1] = f_array[1].replace(x, alias);\n                dependencies[1] = dependencies[1].replace(x, alias);\n            }\n\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\n            \n            return f;\n        }\n    };\n    \n    \n//finalize =====================================================================\n    /* FINALIZE */\n    (function () {\n        reserveNames(_.CONSTANTS);\n        reserveNames(_.functions);\n        _.initConstants();\n        //bug fix for error but needs to be revisited\n        if (!_.error)\n            _.error = err;\n        \n        //Store the log and log10 functions\n        Settings.LOG_FNS = {\n            log: _.functions['log'],\n            log10: _.functions['log10']\n        };\n        \n    })();\n    \n    /* END FINALIZE */\n\n//Core =========================================================================\n    var Utils = {\n        allSame: allSame,\n        allNumeric: allNumeric,\n        arguments2Array: arguments2Array,\n        arrayAddSlices: arrayAddSlices,\n        arrayClone: arrayClone,\n        arrayMax: arrayMax,\n        arrayMin: arrayMin,\n        arrayUnique: arrayUnique,\n        arraySum: arraySum,\n        block: block,\n        build: Build.build,\n        clearU: clearU,\n        comboSort: comboSort,\n        compare: compare,\n        convertToVector: convertToVector,\n        customError: customError,\n        customType: customType,\n        decompose_fn: decompose_fn,\n        each: each,\n        evaluate: evaluate,\n        even: even,\n        evenFraction: evenFraction,\n        fillHoles: fillHoles,\n        firstObject: firstObject,\n        format: format,\n        generatePrimes: generatePrimes,\n        getCoeffs: getCoeffs,\n        getU: getU,\n        importFunctions: importFunctions,\n        inBrackets: inBrackets,\n        isArray: isArray,\n        isExpression: isExpression,\n        isFraction: isFraction,\n        isInt: isInt,\n        isMatrix: isMatrix,\n        isNegative: isNegative,\n        isNumericSymbol: isNumericSymbol,\n        isPrime: isPrime,\n        isReserved: isReserved,\n        isSymbol: isSymbol,\n        isVariableSymbol: isVariableSymbol,\n        isVector: isVector,\n        keys: keys,\n        nroots: nroots,\n        remove: remove,\n        reserveNames: reserveNames,\n        range: range,\n        round: nround,\n        sameSign: sameSign,\n        scientificToDecimal: scientificToDecimal,\n        separate: separate,\n        stringReplace: stringReplace,\n        text: text,\n        validateName: validateName,\n        variables: variables,\n        warn: warn\n    };\n\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\n    //to be used.\n    var C = {\n        groups: Groups,\n        Symbol: Symbol,\n        Expression: Expression,\n        Frac: Frac,\n        Vector: Vector,\n        Matrix: Matrix,\n        Parser: Parser,\n        Fraction: Fraction,\n        Math2: Math2,\n        LaTeX: LaTeX,\n        Utils: Utils,\n        PARSER: _,\n        PARENTHESIS: PARENTHESIS,\n        Settings: Settings,\n        err: err,\n        bigInt: bigInt,\n        exceptions: exceptions\n    };\n\n//libExports ===================================================================  \n    /**\n     * \n     * @param {String} expression the expression to be evaluated\n     * @param {Object} subs the object containing the variable values\n     * @param {Integer} location a specific location in the equation list to \n     * insert the evaluated expression\n     * @param {String} option additional options\n     * @returns {Expression} \n     */\n    var libExports = function (expression, subs, option, location) {\n        //is the user declaring a function?\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\n        if (fndec)\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\n\n        //var variable, fn, args;\n        //convert any expression passed in to a string\n        if (expression instanceof Expression)\n            expression = expression.toString();\n\n        var multi_options = isArray(option),\n                expand = 'expand',\n                numer = multi_options ? option.indexOf('numer') !== -1 : option === 'numer';\n        if ((multi_options ? option.indexOf(expand) !== -1 : option === expand)) {\n            expression = format('{0}({1})', expand, expression);\n        }\n        var e = block('PARSE2NUMBER', function () {\n            return _.parse(expression, subs);\n        }, numer || Settings.PARSE2NUMBER);\n\n        if (location) {\n            EXPRESSIONS[location - 1] = e;\n        }\n        else {\n            EXPRESSIONS.push(e);\n        }\n\n        /*\n         if(variable) libExports.setVar(variable, e);\n         if(fn) libExports.setFunction(fn, args, e);\n         */\n\n        return new Expression(e);\n    };\n    /**\n     * Converts expression into rpn form\n     * @param {String} expression\n     * @returns {Token[]}\n     */\n    libExports.rpn = function (expression) {\n        return _.tokenize(_.toRPN(expression));\n    };\n\n    /**\n     * Generates LaTeX from expression string\n     * @param {String} e\n     * @param {object} opt\n     * @returns {String}\n     */\n    libExports.convertToLaTeX = function (e, opt) {\n        return _.toTeX(e, opt);\n    };\n\n    /**\n     * Converts latex to text - Very very very basic at the moment\n     * @param {String} e\n     * @returns {String}\n     */\n    libExports.convertFromLaTeX = function (e) {\n        var txt = LaTeX.parse(_.tokenize(e));\n        return new Expression(_.parse(txt));\n    };\n\n    /**\n     * Get the version of nerdamer or a loaded add-on\n     * @param {String} add_on - The add-on being checked\n     * @returns {String} returns the version of nerdamer\n     */\n    libExports.version = function (add_on) {\n        if (add_on) {\n            try {\n                return C[add_on].version;\n            }\n            catch (e) {\n                return \"No module named \" + add_on + \" found!\";\n            }\n        }\n        return version;\n    };\n\n    /**\n     * Get nerdamer generated warnings\n     * @returns {String[]}\n     */\n    libExports.getWarnings = function () {\n        return WARNINGS;\n    };\n\n    /**\n     * \n     * @param {String} constant The name of the constant to be set\n     * @param {mixed} value The value of the constant \n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setConstant = function (constant, value) {\n        validateName(constant);\n        if (!isReserved(constant)) {\n            //fix for issue #127\n            if (value === 'delete' || value === '') {\n                delete _.CONSTANTS[constant];\n            }\n            else {\n                if (isNaN(value))\n                    throw new NerdamerTypeError('Constant must be a number!');\n                _.CONSTANTS[constant] = value;\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a previously set constant\n     * @param {type} constant\n     * @returns {String}\n     */\n    libExports.getConstant = function (constant) {\n        return String(_.constant[constant]);\n    };\n\n    /**\n     * \n     * @param {String} name The name of the function\n     * @param {Array} params_array A list containing the parameter name of the functions\n     * @param {String} body The body of the function\n     * @returns {Boolean} returns true if succeeded and falls on fail\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\n     */\n    libExports.setFunction = setFunction;\n\n    /**\n     * \n     * @returns {C} Exports the nerdamer core functions and objects\n     */\n    libExports.getCore = function () {\n        return C;\n    };\n\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\n\n    /**\n     * \n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\n     * @returns {String|Array}\n     */\n    libExports.reserved = function (asArray) {\n        if (asArray) {\n            return RESERVED;\n        }\n        return RESERVED.join(', ');\n    };\n\n    /**\n     * \n     * @param {Integer} equation_number the number of the equation to clear. \n     * If 'all' is supplied then all equations are cleared\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\n        if (equation_number === 'all') {\n            EXPRESSIONS = [];\n        }\n        else if (equation_number === 'last') {\n            EXPRESSIONS.pop();\n        }\n        else if (equation_number === 'first') {\n            EXPRESSIONS.shift();\n        }\n        else {\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\n        }\n        return this;\n    };\n\n    /**\n     * Alias for nerdamer.clear('all')\n     */\n    libExports.flush = function () {\n        this.clear('all');\n        return this;\n    };\n\n    /**\n     * \n     * @param {Boolean} asObject\n     * @param {Boolean} asLaTeX\n     * @param {String|String[]} option \n     * @returns {Array}\n     */\n    libExports.expressions = function (asObject, asLaTeX, option) {\n        var result = asObject ? {} : [];\n        for (var i = 0; i < EXPRESSIONS.length; i++) {\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\n            asObject ? result[i + 1] = eq : result.push(eq);\n        }\n        return result;\n    };\n\n    //the method for registering modules\n    libExports.register = function (obj) {\n        var core = this.getCore();\n\n        if (isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj)\n                    this.register(obj[i]);\n            }\n        }\n        else if (obj && Settings.exclude.indexOf(obj.name) === -1) {\n            //make sure all the dependencies are available\n            if (obj.dependencies) {\n                for (var i = 0; i < obj.dependencies.length; i++)\n                    if (!core[obj.dependencies[i]])\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\n            }\n            //if no parent object is provided then the function does not have an address and cannot be called directly\n            var parent_obj = obj.parent,\n                    fn = obj.build.call(core); //call constructor to get function\n            if (parent_obj) {\n                if (!core[parent_obj])\n                    core[obj.parent] = {};\n\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\n                //attach the function to the core\n                ref_obj[obj.name] = fn;\n            }\n            if (obj.visible)\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\n\n        }\n    };\n\n    /**\n     * @param {String} name variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validateName = validateName;\n\n    /**\n     * @param {String} varname variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validVarName = function (varname) {\n        try {\n            validateName(varname);\n            return RESERVED.indexOf(varname) === -1;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n\n    /**\n     * \n     * @returns {Array} Array of functions currently supported by nerdamer\n     */\n    libExports.supported = function () {\n        return keys(_.functions);\n    };\n\n    /**\n     * \n     * @returns {Number} The number equations/expressions currently loaded\n     */\n    libExports.numEquations = libExports.numExpressions = function () {\n        return EXPRESSIONS.length;\n    };\n    /* END EXPORTS */\n\n    /**\n     * \n     * @param {String} v variable to be set\n     * @param {String} val value of variable. This can be a variable expression or number\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setVar = function (v, val) {\n        validateName(v);\n        //check if it's not already a constant\n        if (v in _.CONSTANTS)\n            err('Cannot set value for constant ' + v);\n        if (val === 'delete' || val === '')\n            delete VARS[v];\n        else {\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a set variable\n     * @param {type} v\n     * @returns {varies}\n     */\n    libExports.getVar = function (v) {\n        return VARS[v];\n    };\n    /**\n     * Clear the variables from the VARS object\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clearVars = function () {\n        VARS = {};\n        return this;\n    };\n\n    /**\n     * \n     * @param {Function} loader\n     * @returns {nerdamer}\n     */\n    libExports.load = function (loader) {\n        loader.call(this);\n        return this;\n    };\n\n    /**\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\n     * @param {String|String[]} option\n     * @returns {Object} Returns an object with the variables\n     */\n    libExports.getVars = function (output, option) {\n        output = output || 'text';\n        var variables = {};\n        if (output === 'object')\n            variables = VARS;\n        else {\n            for (var v in VARS) {\n                if (output === 'latex') {\n                    variables[v] = VARS[v].latex(option);\n                }\n                else if (output === 'text') {\n                    variables[v] = VARS[v].text(option);\n                }\n            }\n        }\n        return variables;\n    };\n\n    /**\n     * Set the value of a setting\n     * @param {String} setting The setting to be changed\n     * @param {boolean} value \n     */\n    libExports.set = function (setting, value) {\n        //current options:\n        //PARSE2NUMBER, suppress_errors\n        if (typeof setting === 'object')\n            for (var x in setting) {\n                libExports.set(x, setting[x]);\n            }\n\n        var disallowed = ['SAFE'];\n        if (disallowed.indexOf(setting) !== -1)\n            err('Cannot modify setting: ' + setting);\n\n        if (setting === 'PRECISION')\n            bigDec.set({precision: value});\n        else if(setting === 'USE_LN' && value === true) {\n            //set log as LN\n            Settings.LOG = 'LN';\n            //set log10 as log\n            Settings.LOG10 = 'log';\n            //point the functions in the right direction\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\n            //the log10 function must be explicitly set\n            _.functions['log'][0] = function(x) {\n                if(x.isConstant())\n                    return new Symbol(Math.log10(x));\n                return _.symfunction(Settings.LOG10, [x]);\n            };\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\n            \n            //remove log10\n            delete _.functions['log10'];\n        }\n        else\n            Settings[setting] = value;\n    };\n\n    /**\n     * Get the value of a setting\n     * @param {type} setting\n     * @returns {undefined}\n     */\n    libExports.get = function (setting) {\n        return Settings[setting];\n    };\n\n    /**\n     * This functions makes internal functions available externally\n     * @param {bool} override Override the functions when calling api if it exists \n     */\n    libExports.api = function (override) {\n        //Map internal functions to external ones\n        var linker = function (fname) {\n            return function () {\n                var args = [].slice.call(arguments);\n                for (var i = 0; i < args.length; i++)\n                    args[i] = _.parse(args[i]);\n                return new Expression(block('PARSE2NUMBER', function () {\n                    return _.callfunction(fname, args);\n                }));\n            };\n        };\n        //perform the mapping\n        for (var x in _.functions)\n            if (!(x in libExports) || override)\n                libExports[x] = linker(x);\n    };\n\n    libExports.replaceFunction = function (name, fn, num_args) {\n        var existing = _.functions[name];\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\n    };\n\n    libExports.setOperator = function (operator, shift) {\n        _.setOperator(operator, shift);\n    };\n    \n    libExports.getOperator = function(operator) {\n        return _.getOperator(operator);\n    };\n\n    libExports.aliasOperator = function(operator, withOperator) {\n        _.aliasOperator(operator, withOperator);\n    };\n\n    libExports.tree = function (expression) {\n        return _.tree(_.toRPN(_.tokenize(expression)));\n    };\n\n    libExports.htmlTree = function (expression, indent) {\n        var tree = this.tree(expression);\n\n        return '<div class=\"tree\">\\n' +\n                '    <ul>\\n' +\n                '        <li>\\n' +\n                tree.toHTML(3, indent) + '\\n' +\n                '        </li>\\n' +\n                '    </ul>\\n' +\n                '</div>';\n    };\n    \n    libExports.addPeeker = function(name, f) {\n        if(_.peekers[name])\n            _.peekers[name].push(f);\n    };\n    \n    libExports.removePeeker = function(name, f) {\n        remove(_.peekers[name], f);\n    };\n    \n    libExports.parse = function(e) {\n        return String(e).split(';').map(function(x) {\n            return _.parse(x);\n        });\n    };\n\n    libExports.api();\n\n    return libExports; //Done\n//imports ======================================================================\n})({\n    //https://github.com/peterolson/BigInteger.js\n    bigInt: (function(){\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\n        return bigInt;\n    })(),\n    /* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n    bigDec: function(n){\"use strict\";var e,i,t,r=9e15,s=1e9,o=\"0123456789abcdef\",u=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",c=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",f={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-r,maxE:r,crypto:!1},h=!0,a=\"[DecimalError] \",d=a+\"Invalid argument: \",l=a+\"Precision limit exceeded\",p=a+\"crypto unavailable\",g=Math.floor,w=Math.pow,m=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,v=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,N=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,E=1e7,x=7,M=u.length-1,y=c.length-1,q={name:\"[object Decimal]\"};function O(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=x-t.length)&&(s+=S(i)),s+=t;o=n[e],(i=x-(t=o+\"\").length)&&(s+=S(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(d+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=x,r=0):(r=Math.ceil((e+1)/x),e%=x),s=w(10,x-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function D(n,e,i){for(var t,r,s=[0],u=0,c=n.length;u<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=o.indexOf(n.charAt(u++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}q.absoluteValue=q.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},q.ceil=function(){return P(new this.constructor(this),this.e+1,2)},q.comparedTo=q.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},q.cosine=q.cos=function(){var n,e,i=this,r=i.constructor;return i.d?i.d[0]?(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=Math.pow(4,-i).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=W(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(r,J(r,i)),r.precision=n,r.rounding=e,P(2==t||3==t?i.neg():i,n,e,!0)):new r(1):new r(NaN)},q.cubeRoot=q.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*Math.pow(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=O(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=Math.pow(i,1/3),n=g((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),O(u.d).slice(0,o)===(i=O(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},q.decimalPlaces=q.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-g(this.e/x))*x,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},q.dividedBy=q.div=function(n){return Z(this,new this.constructor(n))},q.dividedToIntegerBy=q.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},q.equals=q.eq=function(n){return 0===this.cmp(n)},q.floor=function(){return P(new this.constructor(this),this.e+1,3)},q.greaterThan=q.gt=function(n){return this.cmp(n)>0},q.greaterThanOrEqualTo=q.gte=function(n){var e=this.cmp(n);return 1==e||0===e},q.hyperbolicCosine=q.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?(n=Math.ceil(r/3),e=Math.pow(4,-n).toString()):(n=16,e=\"2.3283064365386962890625e-10\"),s=W(o,1,s.times(e),new o(1),!0);for(var c,f=n,h=new o(8);f--;)c=s.times(s),s=u.minus(c.times(h.minus(c.times(h))));return P(s,o.precision=i,o.rounding=t,!0)},q.hyperbolicSine=q.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=W(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=W(s,2,r=r.times(Math.pow(5,-n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},q.hyperbolicTangent=q.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},q.inverseCosine=q.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?_(i,r,s):new i(0):new i(NaN):e.isZero()?_(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=_(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},q.inverseHyperbolicCosine=q.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},q.inverseHyperbolicSine=q.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},q.inverseHyperbolicTangent=q.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},q.inverseSine=q.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=_(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},q.inverseTangent=q.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=y)return(o=_(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=y)return(o=_(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/x+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/x),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},q.isFinite=function(){return!!this.d},q.isInteger=q.isInt=function(){return!!this.d&&g(this.e/x)>this.d.length-2},q.isNaN=function(){return!this.s},q.isNegative=q.isNeg=function(){return this.s<0},q.isPositive=q.isPos=function(){return this.s>0},q.isZero=function(){return!!this.d&&0===this.d[0]},q.lessThan=q.lt=function(n){return this.cmp(n)<0},q.lessThanOrEqualTo=q.lte=function(n){return this.cmp(n)<1},q.logarithm=q.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=B(this,u=a+5),t=e?U(f,u+10):B(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=B(this,u+=10),t=e?U(f,u+10):B(n,u),c=Z(o,t,u,1),!s){+O(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},q.minus=q.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=w.precision,c=w.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new w(3===c?-0:0);n=new w(p)}return h?P(n,u,c):n}if(i=g(n.e/x),a=g(p.e/x),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/x),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=E-1;--f[r],f[t]+=E}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new w(3===c?-0:0)},q.modulo=q.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},q.naturalExponential=q.exp=function(){return H(this)},q.naturalLogarithm=q.ln=function(){return B(this)},q.negated=q.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},q.plus=q.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=g(d.e/x),t=g(n.e/x),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/x))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/E|0,f[r]%=E;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},q.precision=q.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(d+n);return i.d?(e=k(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},q.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},q.sine=q.sin=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return W(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(Math.pow(5,-i)),e=W(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(r,J(r,i)),r.precision=n,r.rounding=e,P(t>2?i.neg():i,n,e,!0)):new r(NaN)},q.squareRoot=q.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=O(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=g((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"1e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),O(s.d).slice(0,i)===(e=O(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},q.tangent=q.tan=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+10,r.rounding=1,(i=i.sin()).s=1,i=Z(i,new r(1).minus(i.times(i)).sqrt(),n+10,0),r.precision=n,r.rounding=e,P(2==t||4==t?i.neg():i,n,e,!0)):new r(NaN)},q.times=q.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=g(a.e/x)+g(n.e/x),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%E|0,e=u/E|0;s[r]=(s[r]+e)%E|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},q.toBinary=function(n,e){return z(this,2,n,e)},q.toDecimalPlaces=q.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,s),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},q.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toFixed=function(n,e){var i,t,r=this,o=r.constructor;return void 0===n?i=R(r):(F(n,0,s),void 0===e?e=o.rounding:F(e,0,8),i=R(t=P(new o(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},q.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,l,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=k(m)-g.e-1)%x,e.d[0]=w(10,o<0?x+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(d+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(O(m)),a=v.precision,v.precision=s=m.length*x*2;l=Z(u,e,0,1,1),1!=(r=i.plus(l.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(l.times(r)),c=r,r=e,e=u.minus(l.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},q.toHexadecimal=q.toHex=function(n,e){return z(this,16,n,e)},q.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},q.toNumber=function(){return+this},q.toOctal=function(n,e){return z(this,8,n,e)},q.toPower=q.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=g(n.e/x))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=T(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:g(f*(Math.log(\"0.\"+O(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=H(n.times(B(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+O((r=P(H(n.times(B(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},q.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toSignificantDigits=q.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,s),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},q.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},q.truncated=q.trunc=function(){return P(new this.constructor(this),this.e+1,1)},q.valueOf=q.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var h,a,d,l,p,w,m,v,N,b,M,y,q,O,F,A,D,Z,R,L,U=r.constructor,_=r.s==s.s?1:-1,k=r.d,S=s.d;if(!(k&&k[0]&&S&&S[0]))return new U(r.s&&s.s&&(k?!S||k[0]!=S[0]:S)?k&&0==k[0]||!S?0*_:_/0:NaN);for(f?(p=1,a=r.e-s.e):(f=E,p=x,a=g(r.e/p)-g(s.e/p)),R=S.length,D=k.length,b=(N=new U(_)).d=[],d=0;S[d]==(k[d]||0);d++);if(S[d]>(k[d]||0)&&a--,null==o?(O=o=U.precision,u=U.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),w=!0;else{if(O=O/p+2|0,d=0,1==R){for(l=0,S=S[0],O++;(d<D||l)&&O--;d++)F=l*f+(k[d]||0),b[d]=F/S|0,l=F%S|0;w=l||d<D}else{for((l=f/(S[0]+1)|0)>1&&(S=n(S,l,f),k=n(k,l,f),R=S.length,D=k.length),A=R,y=(M=k.slice(0,R)).length;y<R;)M[y++]=0;(L=S.slice()).unshift(0),Z=S[0],S[1]>=f/2&&++Z;do{l=0,(h=e(S,M,R,y))<0?(q=M[0],R!=y&&(q=q*f+(M[1]||0)),(l=q/Z|0)>1?(l>=f&&(l=f-1),1==(h=e(m=n(S,l,f),M,v=m.length,y=M.length))&&(l--,t(m,R<v?L:S,v,f))):(0==l&&(h=l=1),m=S.slice()),(v=m.length)<y&&m.unshift(0),t(M,m,y,f),-1==h&&(h=e(S,M,R,y=M.length))<1&&(l++,t(M,R<y?L:S,y,f)),y=M.length):0===h&&(l++,M=[0]),b[d++]=l,h&&M[0]?M[y++]=k[A]||0:(M=[k[A]],y=1)}while((A++<D||void 0!==M[0])&&O--);w=void 0!==M[0]}b[0]||b.shift()}if(1==p)N.e=a,i=w;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+a*p-1,P(N,c?o+N.e+1:o,u,w)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=x,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/x))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=x)-x+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=x)-x+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(x-e%x)%x),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,x-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==E&&(d[0]=1));break}if(d[l]+=u,d[l]!=E)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return V(n);var t,r=n.e,s=O(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+S(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+S(-r-1)+s,i&&(t=i-o)>0&&(s+=S(t))):r>=o?(s+=S(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+S(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=S(t))),s}function L(n,e){var i=n[0];for(e*=x;i>=10;i/=10)e++;return e}function U(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(l);return P(new n(u),e,1,!0)}function _(n,e,i){if(e>y)throw Error(l);return P(new n(c),e,i,!0)}function k(n){var e=n.length-1,i=e*x+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function S(n){for(var e=\"\";n--;)e+=\"0\";return e}function T(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/x+4);for(h=!1;;){if(i%2&&G((s=s.times(e)).d,o)&&(r=!0),0===(i=g(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}G((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function C(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function H(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),O((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===O(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function B(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,w=g.d,m=g.constructor,v=m.rounding,N=m.precision;if(g.s<0||!w||!w[0]||!g.e&&1==w[0]&&1==w.length)return new m(w&&!w[0]?-1/0:1!=g.s?NaN:w?0:g);if(null==e?(h=!1,a=N):a=e,m.precision=a+=10,t=(i=O(w)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=U(m,a+2,N).times(s+\"\"),g=B(new m(t+\".\"+i.slice(1)),a-10).plus(f),m.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=O((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new m(\"0.\"+i),s++):g=new m(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),O((f=c.plus(Z(o,new m(r),a,1))).d).slice(0,a)===O(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(U(m,a+2,N).times(s+\"\"))),c=Z(c,new m(p),a,1),null!=e)return m.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,m.precision=N,v,h=!0);m.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function V(n){return String(n.s*n.s/0)}function j(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%x,i<0&&(t+=x),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=x;t<r;)n.d.push(+e.slice(t,t+=x));e=e.slice(t),t=x-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function $(n,i){var t,r,s,o,u,c,f,a,l;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(v.test(i))t=16,i=i.toLowerCase();else if(m.test(i))t=2;else{if(!N.test(i))throw Error(d+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=T(r,new r(t),o,2*o)),o=l=(a=D(i,t,E)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,l),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?Math.pow(2,f):e.pow(2,f))),h=!0,n)}function W(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/x);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function J(n,e){var i,r=e.s<0,s=_(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return t=r?4:1,e;if((i=e.divToInt(s)).isZero())t=r?3:2;else{if((e=e.minus(i.times(s))).lte(o))return t=I(i)?r?2:3:r?4:1,e;t=I(i)?r?1:4:r?3:2}return e.minus(s).abs()}function z(n,e,t,r){var u,c,f,h,a,d,l,p,g,w=n.constructor,m=void 0!==t;if(m?(F(t,1,s),void 0===r?r=w.rounding:F(r,0,8)):(t=w.precision,r=w.rounding),n.isFinite()){for(m?(u=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):u=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new w(1)).e=l.length-f,g.d=D(R(g),10,u),g.e=g.d.length),c=a=(p=D(l,10,u)).length;0==p[--a];)p.pop();if(p[0]){if(f<0?c--:((n=new w(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,u)).d,c=n.e,d=i),f=p[t],h=u/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>h||f===h&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>u-1;)p[t]=0,t||(++c,p.unshift(1));for(a=p.length;!p[a-1];--a);for(f=0,l=\"\";f<a;f++)l+=o.charAt(p[f]);if(m){if(a>1)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)l+=\"0\";for(a=(p=D(l,u,e)).length;!p[a-1];--a);for(f=1,l=\"1.\";f<a;f++)l+=o.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>a)for(c-=a;c--;)l+=\"0\";else c<a&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=m?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=V(n);return n.s<0?\"-\"+l:l}function G(n,e){if(n.length>e)return n.length=e,!0}function K(n){return new this(n).abs()}function Q(n){return new this(n).acos()}function X(n){return new this(n).acosh()}function Y(n,e){return new this(n).plus(e)}function nn(n){return new this(n).asin()}function en(n){return new this(n).asinh()}function tn(n){return new this(n).atan()}function rn(n){return new this(n).atanh()}function sn(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?_(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=_(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=_(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=_(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function on(n){return new this(n).cbrt()}function un(n){return P(n=new this(n),n.e+1,2)}function cn(n){if(!n||\"object\"!=typeof n)throw Error(a+\"Object expected\");var e,i,t,o=!0===n.defaults,u=[\"precision\",1,s,\"rounding\",0,8,\"toExpNeg\",-r,0,\"toExpPos\",0,r,\"maxE\",0,r,\"minE\",-r,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!(g(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(d+i+\": \"+t);this[i]=t}if(i=\"crypto\",o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(d+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[i]=!0}else this[i]=!1}return this}function fn(n){return new this(n).cos()}function hn(n){return new this(n).cosh()}function an(n,e){return new this(n).div(e)}function dn(n){return new this(n).exp()}function ln(n){return P(n=new this(n),n.e+1,3)}function pn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function gn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function wn(n){return new this(n).ln()}function mn(n,e){return new this(n).log(e)}function vn(n){return new this(n).log(2)}function Nn(n){return new this(n).log(10)}function bn(){return C(this,arguments,\"lt\")}function En(){return C(this,arguments,\"gt\")}function xn(n,e){return new this(n).mod(e)}function Mn(n,e){return new this(n).mul(e)}function yn(n,e){return new this(n).pow(e)}function qn(n){var e,i,t,r,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,s),t=Math.ceil(n/x),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));o<t;)(r=e[o])>=429e7?e[o]=crypto.getRandomValues(new Uint32Array(1))[0]:c[o++]=r%1e7;else{if(!crypto.randomBytes)throw Error(p);for(e=crypto.randomBytes(t*=4);o<t;)(r=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,o):(c.push(r%1e7),o+=4);o=t/4}else for(;o<t;)c[o++]=1e7*Math.random()|0;for(t=c[--o],n%=x,t&&n&&(r=w(10,x-n),c[o]=(t/r|0)*r);0===c[o];o--)c.pop();if(o<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=x)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<x&&(i-=x-t)}return u.e=i,u.d=c,u}function On(n){return P(n=new this(n),n.e+1,this.rounding)}function Fn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function An(n){return new this(n).sin()}function Dn(n){return new this(n).sinh()}function Zn(n){return new this(n).sqrt()}function Pn(n,e){return new this(n).sub(e)}function Rn(n){return new this(n).tan()}function Ln(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):j(r,n.toString())}if(\"string\"!==t)throw Error(d+n);return 45===n.charCodeAt(0)?(n=n.slice(1),r.s=-1):r.s=1,b.test(n)?j(r,n):$(r,n)}if(s.prototype=q,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=cn,s.clone=n,s.isDecimal=gn,s.abs=K,s.acos=Q,s.acosh=X,s.add=Y,s.asin=nn,s.asinh=en,s.atan=tn,s.atanh=rn,s.atan2=sn,s.cbrt=on,s.ceil=un,s.cos=fn,s.cosh=hn,s.div=an,s.exp=dn,s.floor=ln,s.hypot=pn,s.ln=wn,s.log=mn,s.log10=Nn,s.log2=vn,s.max=bn,s.min=En,s.mod=xn,s.mul=Mn,s.pow=yn,s.random=qn,s.round=On,s.sign=Fn,s.sin=An,s.sinh=Dn,s.sqrt=Zn,s.sub=Pn,s.tan=Rn,s.tanh=Ln,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(f)).default=e.Decimal=e,u=new e(u),c=new e(c),e}()\n//    bigDec: require('decimal.js')\n});\n\nif ((typeof module) !== 'undefined') {\n    module.exports = nerdamer;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}